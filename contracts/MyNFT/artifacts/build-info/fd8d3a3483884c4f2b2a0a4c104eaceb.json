{
	"id": "fd8d3a3483884c4f2b2a0a4c104eaceb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyNFT/PudgyPenguins.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./ERC721.sol\";\r\nimport \"./ERC721Enumerable.sol\";\r\nimport \"./ERC721Burnable.sol\";\r\nimport \"./ERC721Pausable.sol\";\r\nimport \"./Ownable.sol\";\r\n// import \"./SafeMath.sol\";\r\n// import \"@openzeppelin/contracts/utils/Counters.sol\";\r\ncontract CreditTiger is  ERC721Enumerable,Ownable, ERC721Burnable, ERC721Pausable {\r\n    // event Log(string msg);\r\n    //Test\r\n    constructor(address initialOwner) ERC721(\"Credit-Tiger\", \"CTT\") Ownable(initialOwner) {\r\n\r\n    }  \r\n    \r\n    function _increaseBalance(address account, uint128 amount) internal virtual override(ERC721Enumerable,ERC721) {\r\n        super._increaseBalance(account, amount);\r\n    }\r\n\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual override(ERC721Enumerable,ERC721,ERC721Pausable) returns (address) {\r\n        // super._update(to,);\r\n    }\r\n \r\n     function test1() public  override(ERC721Enumerable,ERC721,ERC721Pausable)  {\r\n        emit Log(\"CreditTiger.test1\");\r\n        super.test1();\r\n    }\r\n    \r\n\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Enumerable,ERC721) returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\ncontract  Demo {\r\n    function DemoTest(address addr) public {\r\n        CreditTiger(addr).test1();\r\n    }\r\n}"
			},
			"contracts/MyNFT/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"contracts/MyNFT/ERC721Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Pausable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC721} from \"./ERC721.sol\";\r\nimport {Pausable} from \"./Pausable.sol\";\r\n\r\n/**\r\n * @dev ERC-721 token with pausable token transfers, minting and burning.\r\n *\r\n * Useful for scenarios such as preventing trades until the end of an evaluation\r\n * period, or having an emergency switch for freezing all token transfers in the\r\n * event of a large bug.\r\n *\r\n * IMPORTANT: This contract does not include public pause and unpause functions. In\r\n * addition to inheriting this contract, you must define both functions, invoking the\r\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\r\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\r\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\r\n */\r\nabstract contract ERC721Pausable is ERC721, Pausable {\r\n    /**\r\n     * @dev See {ERC721-_update}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the contract must not be paused.\r\n     */\r\n    function _update(\r\n        address to,\r\n        uint256 tokenId,\r\n        address auth\r\n    ) internal virtual override whenNotPaused returns (address) {\r\n        return super._update(to, tokenId, auth);\r\n    }\r\n\r\n    function test1() public override  virtual {\r\n        emit Log(\"ERC721Pausable.test1\");\r\n        super.test1();\r\n    }\r\n}"
			},
			"contracts/MyNFT/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC721} from \"./ERC721.sol\";\r\nimport {Context} from \"./Context.sol\";\r\n\r\n/**\r\n * @title ERC-721 Burnable Token\r\n * @dev ERC-721 Token that can be burned (destroyed).\r\n */\r\nabstract contract ERC721Burnable is Context, ERC721 {\r\n    /**\r\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own `tokenId` or be an approved operator.\r\n     */\r\n    function burn(uint256 tokenId) public virtual {\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        _update(address(0), tokenId, _msgSender());\r\n    }\r\n}"
			},
			"contracts/MyNFT/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {ERC721} from \"./ERC721.sol\";\r\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\r\nimport {IERC165} from \"./ERC165.sol\";\r\n\r\n/**\r\n * @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\r\n * of all the token ids in the contract as well as all token ids owned by each account.\r\n *\r\n * CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\r\n * interfere with enumerability and should not be used together with {ERC721Enumerable}.\r\n */\r\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\r\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\r\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\r\n\r\n    uint256[] private _allTokens;\r\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\r\n\r\n    /**\r\n     * @dev An `owner`'s token query was out of bounds for `index`.\r\n     *\r\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\r\n     */\r\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\r\n\r\n    /**\r\n     * @dev Batch mint is not allowed.\r\n     */\r\n    error ERC721EnumerableForbiddenBatchMint();\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\r\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\r\n        if (index >= balanceOf(owner)) {\r\n            revert ERC721OutOfBoundsIndex(owner, index);\r\n        }\r\n        return _ownedTokens[owner][index];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Enumerable-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _allTokens.length;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Enumerable-tokenByIndex}.\r\n     */\r\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\r\n        if (index >= totalSupply()) {\r\n            revert ERC721OutOfBoundsIndex(address(0), index);\r\n        }\r\n        return _allTokens[index];\r\n    }\r\n\r\n    function test1() public override  virtual {\r\n        emit Log(\"ERC721Enumerable.test1\");\r\n        super.test1();\r\n    }\r\n\r\n    /**\r\n     * @dev See {ERC721-_update}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\r\n        address previousOwner = super._update(to, tokenId, auth);\r\n\r\n        if (previousOwner == address(0)) {\r\n            _addTokenToAllTokensEnumeration(tokenId);\r\n        } else if (previousOwner != to) {\r\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\r\n        }\r\n        if (to == address(0)) {\r\n            _removeTokenFromAllTokensEnumeration(tokenId);\r\n        } else if (previousOwner != to) {\r\n            _addTokenToOwnerEnumeration(to, tokenId);\r\n        }\r\n\r\n        return previousOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\r\n     * @param to address representing the new owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\r\n     */\r\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\r\n        uint256 length = balanceOf(to) - 1;\r\n        _ownedTokens[to][length] = tokenId;\r\n        _ownedTokensIndex[tokenId] = length;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's token tracking data structures.\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list\r\n     */\r\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\r\n        _allTokensIndex[tokenId] = _allTokens.length;\r\n        _allTokens.push(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\r\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\r\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\r\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\r\n     */\r\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\r\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = balanceOf(from);\r\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary\r\n        if (tokenIndex != lastTokenIndex) {\r\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\r\n\r\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n        }\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete _ownedTokensIndex[tokenId];\r\n        delete _ownedTokens[from][lastTokenIndex];\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to remove a token from this extension's token tracking data structures.\r\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\r\n     */\r\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\r\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = _allTokens.length - 1;\r\n        uint256 tokenIndex = _allTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\r\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\r\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\r\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\r\n\r\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete _allTokensIndex[tokenId];\r\n        _allTokens.pop();\r\n    }\r\n\r\n    /**\r\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\r\n     */\r\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\r\n        if (amount > 0) {\r\n            revert ERC721EnumerableForbiddenBatchMint();\r\n        }\r\n        super._increaseBalance(account, amount);\r\n    }\r\n}"
			},
			"contracts/MyNFT/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"./IERC721.sol\";\r\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\r\nimport {IERC721Metadata} from \"./IERC721Metadata.sol\";\r\nimport {Context} from \"./Context.sol\";\r\nimport {Strings} from \"./Strings.sol\";\r\nimport {IERC165, ERC165} from \"./ERC165.sol\";\r\n// import {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    mapping(uint256 tokenId => address) private _owners;\r\n\r\n    mapping(address owner => uint256) private _balances;\r\n\r\n    mapping(uint256 tokenId => address) private _tokenApprovals;\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual returns (uint256) {\r\n        if (owner == address(0)) {\r\n            // revert ERC721InvalidOwner(address(0));\r\n        }\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual {\r\n        _approve(to, tokenId, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _getApproved(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\r\n        if (to == address(0)) {\r\n            // revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        address previousOwner = _update(to, tokenId, _msgSender());\r\n        if (previousOwner != from) {\r\n            // revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\r\n        transferFrom(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                // revert ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                // revert ERC721InsufficientApproval(spender, tokenId);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\r\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\r\n     *\r\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\r\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\r\n     * remain consistent with one another.\r\n     */\r\n    function _increaseBalance(address account, uint128 value) internal virtual {\r\n        unchecked {\r\n            _balances[account] += value;\r\n        }\r\n    }\r\n\r\n    event Log(string msg);\r\n    function test1() public virtual {\r\n        emit Log(\"ERC721.test1\");\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(from, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (from != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                _balances[from] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                _balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        return from;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            // revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            // revert ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _mint(to, tokenId);\r\n        _checkOnERC721Received(address(0), to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address previousOwner = _update(address(0), tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            // revert ERC721NonexistentToken(tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            // revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            // revert ERC721NonexistentToken(tokenId);\r\n        } else if (previousOwner != from) {\r\n            // revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\r\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\r\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\r\n        _safeTransfer(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\r\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\r\n                // revert ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\r\n        if (operator == address(0)) {\r\n            // revert ERC721InvalidOperator(operator);\r\n        }\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            // revert ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\r\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     */\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\r\n        if (to.code.length > 0) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    // revert ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    // revert ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/MyNFT/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}"
			},
			"contracts/MyNFT/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    /**\r\n     * @dev The operation failed because the contract is paused.\r\n     */\r\n    error EnforcedPause();\r\n\r\n    /**\r\n     * @dev The operation failed because the contract is not paused.\r\n     */\r\n    error ExpectedPause();\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        _requireNotPaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        _requirePaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is paused.\r\n     */\r\n    function _requireNotPaused() internal view virtual {\r\n        if (paused()) {\r\n            revert EnforcedPause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is not paused.\r\n     */\r\n    function _requirePaused() internal view virtual {\r\n        if (!paused()) {\r\n            revert ExpectedPause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}"
			},
			"contracts/MyNFT/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}"
			},
			"contracts/MyNFT/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"./IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Enumerable is IERC721 {\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\r\n     * Use along with {totalSupply} to enumerate all tokens.\r\n     */\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n}"
			},
			"contracts/MyNFT/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./Math.sol\";\r\nimport {SignedMath} from \"./SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}"
			},
			"contracts/MyNFT/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"./IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}"
			},
			"contracts/MyNFT/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title ERC-721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC-721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\r\n     * reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}"
			},
			"contracts/MyNFT/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC-721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}"
			},
			"contracts/MyNFT/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\r\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\r\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\r\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\r\n            // the mask will either be `bytes(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\r\n            int256 mask = n >> 255;\r\n\r\n            // A `bytes(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\r\n            return uint256((n + mask) ^ mask);\r\n        }\r\n    }\r\n}"
			},
			"contracts/MyNFT/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            return a / b;\r\n        }\r\n\r\n        // The following calculation ensures accurate ceiling division without overflow.\r\n        // Since a is non-zero, (a - 1) / b will not overflow.\r\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\r\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\r\n        // when a = type(uint256).max and b = 1.\r\n        unchecked {\r\n            return a == 0 ? 0 : (a - 1) / b + 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                revert MathOverflowedMulDiv();\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}"
			},
			"contracts/MyNFT/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MyNFT/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/ERC165.sol\":{\"keccak256\":\"0x7aed03d98a53f17e5a68a62174f6420b171396212591d70ea14de02288b67f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5470ce085206f2ef4abd26c5939d7acca97cd14740d6aa45ce0122a129725c9f\",\"dweb:/ipfs/QmeJPw1HXgpJep8yEBKuAYrN58jzKqaodNxZp2VbdhURUW\"]},\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"test1()": "6b59084d",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]},\"contracts/MyNFT/ERC165.sol\":{\"keccak256\":\"0x7aed03d98a53f17e5a68a62174f6420b171396212591d70ea14de02288b67f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5470ce085206f2ef4abd26c5939d7acca97cd14740d6aa45ce0122a129725c9f\",\"dweb:/ipfs/QmeJPw1HXgpJep8yEBKuAYrN58jzKqaodNxZp2VbdhURUW\"]},\"contracts/MyNFT/ERC721.sol\":{\"keccak256\":\"0x35086eeddfa259687345768c197182ae46e4710e328e32bc87e3a7e62da98f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5362ed9655f2403638747ec24c9dec5b5ead72b2b40563e2274d2ac7799f2a16\",\"dweb:/ipfs/QmdRSwvqZM3DVUnRtEPdhFCoCPvYbME5YpVzdEDoNyJnVj\"]},\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]},\"contracts/MyNFT/IERC721.sol\":{\"keccak256\":\"0x3eee01fcae8d1016234ed8daaf3d809346631e18f88d7e5d6aa4901eeaa9410e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b77dfe18c30eb4343a04645c707a0a61eb58c608ec583f087b4c5b525786823\",\"dweb:/ipfs/QmYNryzjZvjRH6LKxmZ2vChismEZjVV7Ev773hrVqwWHZi\"]},\"contracts/MyNFT/IERC721Metadata.sol\":{\"keccak256\":\"0x17c6c817a8c8d238ed69161fe51dcc6e0ce4586852a57a12833a122388c24a22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cdb49797ef9274d63fcae9cb4068356bdbb423264de6cb638c5b9780f7c093a\",\"dweb:/ipfs/Qmf3V7g1dGzYCgeGBHMhKQP8Dwv13U1iqMUPAuE5MwJ2wD\"]},\"contracts/MyNFT/IERC721Receiver.sol\":{\"keccak256\":\"0xdb4be0729937bf75572b7ed92840a96437191a0eb9d4b4d31e15ad08b71c0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b322470865a9b71aa3455a5e87b10493e340163b9e88913f292acf240c9cc640\",\"dweb:/ipfs/QmWpABMQGtETHmd1x9YyfUrT3sYkNuQoh7hqJwKEz13CcD\"]},\"contracts/MyNFT/Math.sol\":{\"keccak256\":\"0xa623136c8fcaf1b60612023600dd1d2d7e43fa9b1b3d8ec2f8982f1d9cb2d29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c13a5c89ac90ab7717be1decb485f20fb1b6ff65de143874ee483edaa400c63\",\"dweb:/ipfs/QmXd8gpCre1YwKBmDzHWMvSn6N72GdiZP31W6ZD5fkHFZ4\"]},\"contracts/MyNFT/SignedMath.sol\":{\"keccak256\":\"0xe806d50010e8783c4d5efe2195adf7f645b767007b6a1adede350f2100418faa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29a21325c42d0de6b486f00c7cdbd8415a562d5462b4be1cfb225ef9b5af4a83\",\"dweb:/ipfs/QmTn5x1DhCYjFZTpYjh9jfguw1SoN3Rd5r9BeHqY8Fjpqr\"]},\"contracts/MyNFT/Strings.sol\":{\"keccak256\":\"0xa6d8609d1887df5e4cba1f758125cd0d420b08d164822dde7d90467fc66d71e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58d9f6370d00ddef5e7541d2dc6c5ae20f9fdaf9b8e2b67d6e14746156e200a\",\"dweb:/ipfs/QmfFQojHWkH9Danyo1M69rqiFJMgwSH9zhda8ryXunwXeQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/MyNFT/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 84,
								"contract": "contracts/MyNFT/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 88,
								"contract": "contracts/MyNFT/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 92,
								"contract": "contracts/MyNFT/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 96,
								"contract": "contracts/MyNFT/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 102,
								"contract": "contracts/MyNFT/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-721 Token that can be burned (destroyed).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC-721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"test1()": "6b59084d",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 Token that can be burned (destroyed).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC-721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]},\"contracts/MyNFT/ERC165.sol\":{\"keccak256\":\"0x7aed03d98a53f17e5a68a62174f6420b171396212591d70ea14de02288b67f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5470ce085206f2ef4abd26c5939d7acca97cd14740d6aa45ce0122a129725c9f\",\"dweb:/ipfs/QmeJPw1HXgpJep8yEBKuAYrN58jzKqaodNxZp2VbdhURUW\"]},\"contracts/MyNFT/ERC721.sol\":{\"keccak256\":\"0x35086eeddfa259687345768c197182ae46e4710e328e32bc87e3a7e62da98f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5362ed9655f2403638747ec24c9dec5b5ead72b2b40563e2274d2ac7799f2a16\",\"dweb:/ipfs/QmdRSwvqZM3DVUnRtEPdhFCoCPvYbME5YpVzdEDoNyJnVj\"]},\"contracts/MyNFT/ERC721Burnable.sol\":{\"keccak256\":\"0xe866a3d0810df462115dd743c18f8280dd3a2b5cf9f813971000cfd40adaa42d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86e75e659bfaaf8e2827322296da4ee004eac3b5b1bc3e44ec3d441b393703a8\",\"dweb:/ipfs/Qmf1Zg1FcW6g73kGqdzXSfLnoQKGXTFz8fzFcfMc67U9j1\"]},\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]},\"contracts/MyNFT/IERC721.sol\":{\"keccak256\":\"0x3eee01fcae8d1016234ed8daaf3d809346631e18f88d7e5d6aa4901eeaa9410e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b77dfe18c30eb4343a04645c707a0a61eb58c608ec583f087b4c5b525786823\",\"dweb:/ipfs/QmYNryzjZvjRH6LKxmZ2vChismEZjVV7Ev773hrVqwWHZi\"]},\"contracts/MyNFT/IERC721Metadata.sol\":{\"keccak256\":\"0x17c6c817a8c8d238ed69161fe51dcc6e0ce4586852a57a12833a122388c24a22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cdb49797ef9274d63fcae9cb4068356bdbb423264de6cb638c5b9780f7c093a\",\"dweb:/ipfs/Qmf3V7g1dGzYCgeGBHMhKQP8Dwv13U1iqMUPAuE5MwJ2wD\"]},\"contracts/MyNFT/IERC721Receiver.sol\":{\"keccak256\":\"0xdb4be0729937bf75572b7ed92840a96437191a0eb9d4b4d31e15ad08b71c0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b322470865a9b71aa3455a5e87b10493e340163b9e88913f292acf240c9cc640\",\"dweb:/ipfs/QmWpABMQGtETHmd1x9YyfUrT3sYkNuQoh7hqJwKEz13CcD\"]},\"contracts/MyNFT/Math.sol\":{\"keccak256\":\"0xa623136c8fcaf1b60612023600dd1d2d7e43fa9b1b3d8ec2f8982f1d9cb2d29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c13a5c89ac90ab7717be1decb485f20fb1b6ff65de143874ee483edaa400c63\",\"dweb:/ipfs/QmXd8gpCre1YwKBmDzHWMvSn6N72GdiZP31W6ZD5fkHFZ4\"]},\"contracts/MyNFT/SignedMath.sol\":{\"keccak256\":\"0xe806d50010e8783c4d5efe2195adf7f645b767007b6a1adede350f2100418faa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29a21325c42d0de6b486f00c7cdbd8415a562d5462b4be1cfb225ef9b5af4a83\",\"dweb:/ipfs/QmTn5x1DhCYjFZTpYjh9jfguw1SoN3Rd5r9BeHqY8Fjpqr\"]},\"contracts/MyNFT/Strings.sol\":{\"keccak256\":\"0xa6d8609d1887df5e4cba1f758125cd0d420b08d164822dde7d90467fc66d71e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58d9f6370d00ddef5e7541d2dc6c5ae20f9fdaf9b8e2b67d6e14746156e200a\",\"dweb:/ipfs/QmfFQojHWkH9Danyo1M69rqiFJMgwSH9zhda8ryXunwXeQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/MyNFT/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 84,
								"contract": "contracts/MyNFT/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 88,
								"contract": "contracts/MyNFT/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 92,
								"contract": "contracts/MyNFT/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 96,
								"contract": "contracts/MyNFT/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 102,
								"contract": "contracts/MyNFT/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the ERC that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive}, interfere with enumerability and should not be used together with {ERC721Enumerable}.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"test1()": "6b59084d",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the ERC that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive}, interfere with enumerability and should not be used together with {ERC721Enumerable}.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]},\"contracts/MyNFT/ERC165.sol\":{\"keccak256\":\"0x7aed03d98a53f17e5a68a62174f6420b171396212591d70ea14de02288b67f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5470ce085206f2ef4abd26c5939d7acca97cd14740d6aa45ce0122a129725c9f\",\"dweb:/ipfs/QmeJPw1HXgpJep8yEBKuAYrN58jzKqaodNxZp2VbdhURUW\"]},\"contracts/MyNFT/ERC721.sol\":{\"keccak256\":\"0x35086eeddfa259687345768c197182ae46e4710e328e32bc87e3a7e62da98f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5362ed9655f2403638747ec24c9dec5b5ead72b2b40563e2274d2ac7799f2a16\",\"dweb:/ipfs/QmdRSwvqZM3DVUnRtEPdhFCoCPvYbME5YpVzdEDoNyJnVj\"]},\"contracts/MyNFT/ERC721Enumerable.sol\":{\"keccak256\":\"0xe8a5628ee737b2fa0f12f363ec7c67f5822fe9c0419fd9db33e5ff38a65ea352\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7e8f3b845b9920f93c6ce10067bc2ca35bc87995b9b8f3491c6146f3152e0b8\",\"dweb:/ipfs/QmbHz7MmmmewD5mMkhnPBuKoeAbwRtaE9RDwvSLGDnWyTf\"]},\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]},\"contracts/MyNFT/IERC721.sol\":{\"keccak256\":\"0x3eee01fcae8d1016234ed8daaf3d809346631e18f88d7e5d6aa4901eeaa9410e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b77dfe18c30eb4343a04645c707a0a61eb58c608ec583f087b4c5b525786823\",\"dweb:/ipfs/QmYNryzjZvjRH6LKxmZ2vChismEZjVV7Ev773hrVqwWHZi\"]},\"contracts/MyNFT/IERC721Enumerable.sol\":{\"keccak256\":\"0xe1cea390b7744cb84369e27a4a6eefabd1417bf562f141e9561adc75b6ada439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e18abf44535809e9be807fabb13fa8398a106265e654b3b4ed4d7deaf2df6c21\",\"dweb:/ipfs/QmYojHTVa6peYzBC1faw4HfvceUM6uPnDWHbAe6L6p15SD\"]},\"contracts/MyNFT/IERC721Metadata.sol\":{\"keccak256\":\"0x17c6c817a8c8d238ed69161fe51dcc6e0ce4586852a57a12833a122388c24a22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cdb49797ef9274d63fcae9cb4068356bdbb423264de6cb638c5b9780f7c093a\",\"dweb:/ipfs/Qmf3V7g1dGzYCgeGBHMhKQP8Dwv13U1iqMUPAuE5MwJ2wD\"]},\"contracts/MyNFT/IERC721Receiver.sol\":{\"keccak256\":\"0xdb4be0729937bf75572b7ed92840a96437191a0eb9d4b4d31e15ad08b71c0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b322470865a9b71aa3455a5e87b10493e340163b9e88913f292acf240c9cc640\",\"dweb:/ipfs/QmWpABMQGtETHmd1x9YyfUrT3sYkNuQoh7hqJwKEz13CcD\"]},\"contracts/MyNFT/Math.sol\":{\"keccak256\":\"0xa623136c8fcaf1b60612023600dd1d2d7e43fa9b1b3d8ec2f8982f1d9cb2d29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c13a5c89ac90ab7717be1decb485f20fb1b6ff65de143874ee483edaa400c63\",\"dweb:/ipfs/QmXd8gpCre1YwKBmDzHWMvSn6N72GdiZP31W6ZD5fkHFZ4\"]},\"contracts/MyNFT/SignedMath.sol\":{\"keccak256\":\"0xe806d50010e8783c4d5efe2195adf7f645b767007b6a1adede350f2100418faa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29a21325c42d0de6b486f00c7cdbd8415a562d5462b4be1cfb225ef9b5af4a83\",\"dweb:/ipfs/QmTn5x1DhCYjFZTpYjh9jfguw1SoN3Rd5r9BeHqY8Fjpqr\"]},\"contracts/MyNFT/Strings.sol\":{\"keccak256\":\"0xa6d8609d1887df5e4cba1f758125cd0d420b08d164822dde7d90467fc66d71e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58d9f6370d00ddef5e7541d2dc6c5ae20f9fdaf9b8e2b67d6e14746156e200a\",\"dweb:/ipfs/QmfFQojHWkH9Danyo1M69rqiFJMgwSH9zhda8ryXunwXeQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 84,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 88,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 92,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 96,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 102,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1034,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1038,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1041,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1045,
								"contract": "contracts/MyNFT/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/ERC721Pausable.sol": {
				"ERC721Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"paused()": "5c975abb",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"test1()": "6b59084d",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/ERC721Pausable.sol\":\"ERC721Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]},\"contracts/MyNFT/ERC165.sol\":{\"keccak256\":\"0x7aed03d98a53f17e5a68a62174f6420b171396212591d70ea14de02288b67f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5470ce085206f2ef4abd26c5939d7acca97cd14740d6aa45ce0122a129725c9f\",\"dweb:/ipfs/QmeJPw1HXgpJep8yEBKuAYrN58jzKqaodNxZp2VbdhURUW\"]},\"contracts/MyNFT/ERC721.sol\":{\"keccak256\":\"0x35086eeddfa259687345768c197182ae46e4710e328e32bc87e3a7e62da98f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5362ed9655f2403638747ec24c9dec5b5ead72b2b40563e2274d2ac7799f2a16\",\"dweb:/ipfs/QmdRSwvqZM3DVUnRtEPdhFCoCPvYbME5YpVzdEDoNyJnVj\"]},\"contracts/MyNFT/ERC721Pausable.sol\":{\"keccak256\":\"0xdb81fb65e088b3b1bcb09ac26dc3d0972ba52ea294cfb2edfec468ff74d55142\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99096a3826e707f1400d2bafc2643ec5b24f985a6cb29653e74dcaf884b8d923\",\"dweb:/ipfs/QmTYUeng4SFCkC5ihL9F2ry4TCNWUURZ1dnL5D5LJHEVEp\"]},\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]},\"contracts/MyNFT/IERC721.sol\":{\"keccak256\":\"0x3eee01fcae8d1016234ed8daaf3d809346631e18f88d7e5d6aa4901eeaa9410e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b77dfe18c30eb4343a04645c707a0a61eb58c608ec583f087b4c5b525786823\",\"dweb:/ipfs/QmYNryzjZvjRH6LKxmZ2vChismEZjVV7Ev773hrVqwWHZi\"]},\"contracts/MyNFT/IERC721Metadata.sol\":{\"keccak256\":\"0x17c6c817a8c8d238ed69161fe51dcc6e0ce4586852a57a12833a122388c24a22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cdb49797ef9274d63fcae9cb4068356bdbb423264de6cb638c5b9780f7c093a\",\"dweb:/ipfs/Qmf3V7g1dGzYCgeGBHMhKQP8Dwv13U1iqMUPAuE5MwJ2wD\"]},\"contracts/MyNFT/IERC721Receiver.sol\":{\"keccak256\":\"0xdb4be0729937bf75572b7ed92840a96437191a0eb9d4b4d31e15ad08b71c0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b322470865a9b71aa3455a5e87b10493e340163b9e88913f292acf240c9cc640\",\"dweb:/ipfs/QmWpABMQGtETHmd1x9YyfUrT3sYkNuQoh7hqJwKEz13CcD\"]},\"contracts/MyNFT/Math.sol\":{\"keccak256\":\"0xa623136c8fcaf1b60612023600dd1d2d7e43fa9b1b3d8ec2f8982f1d9cb2d29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c13a5c89ac90ab7717be1decb485f20fb1b6ff65de143874ee483edaa400c63\",\"dweb:/ipfs/QmXd8gpCre1YwKBmDzHWMvSn6N72GdiZP31W6ZD5fkHFZ4\"]},\"contracts/MyNFT/Pausable.sol\":{\"keccak256\":\"0x25134c8284bd36504728d29294ed4a8515f7d4ea1f9c7462f2e80bc11ac09a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a23f17a2b2754000758abd5b794b0e17afb96bc62d1311860e4f3b24c75ee87b\",\"dweb:/ipfs/Qmc1ak2fd2NtY14gWhqWjoRaQYAR2R8vCKCiqRW6X8nV4C\"]},\"contracts/MyNFT/SignedMath.sol\":{\"keccak256\":\"0xe806d50010e8783c4d5efe2195adf7f645b767007b6a1adede350f2100418faa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29a21325c42d0de6b486f00c7cdbd8415a562d5462b4be1cfb225ef9b5af4a83\",\"dweb:/ipfs/QmTn5x1DhCYjFZTpYjh9jfguw1SoN3Rd5r9BeHqY8Fjpqr\"]},\"contracts/MyNFT/Strings.sol\":{\"keccak256\":\"0xa6d8609d1887df5e4cba1f758125cd0d420b08d164822dde7d90467fc66d71e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58d9f6370d00ddef5e7541d2dc6c5ae20f9fdaf9b8e2b67d6e14746156e200a\",\"dweb:/ipfs/QmfFQojHWkH9Danyo1M69rqiFJMgwSH9zhda8ryXunwXeQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/MyNFT/ERC721Pausable.sol:ERC721Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 84,
								"contract": "contracts/MyNFT/ERC721Pausable.sol:ERC721Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 88,
								"contract": "contracts/MyNFT/ERC721Pausable.sol:ERC721Pausable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 92,
								"contract": "contracts/MyNFT/ERC721Pausable.sol:ERC721Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 96,
								"contract": "contracts/MyNFT/ERC721Pausable.sol:ERC721Pausable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 102,
								"contract": "contracts/MyNFT/ERC721Pausable.sol:ERC721Pausable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2881,
								"contract": "contracts/MyNFT/ERC721Pausable.sol:ERC721Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]},\"contracts/MyNFT/IERC721.sol\":{\"keccak256\":\"0x3eee01fcae8d1016234ed8daaf3d809346631e18f88d7e5d6aa4901eeaa9410e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b77dfe18c30eb4343a04645c707a0a61eb58c608ec583f087b4c5b525786823\",\"dweb:/ipfs/QmYNryzjZvjRH6LKxmZ2vChismEZjVV7Ev773hrVqwWHZi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]},\"contracts/MyNFT/IERC721.sol\":{\"keccak256\":\"0x3eee01fcae8d1016234ed8daaf3d809346631e18f88d7e5d6aa4901eeaa9410e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b77dfe18c30eb4343a04645c707a0a61eb58c608ec583f087b4c5b525786823\",\"dweb:/ipfs/QmYNryzjZvjRH6LKxmZ2vChismEZjVV7Ev773hrVqwWHZi\"]},\"contracts/MyNFT/IERC721Enumerable.sol\":{\"keccak256\":\"0xe1cea390b7744cb84369e27a4a6eefabd1417bf562f141e9561adc75b6ada439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e18abf44535809e9be807fabb13fa8398a106265e654b3b4ed4d7deaf2df6c21\",\"dweb:/ipfs/QmYojHTVa6peYzBC1faw4HfvceUM6uPnDWHbAe6L6p15SD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]},\"contracts/MyNFT/IERC721.sol\":{\"keccak256\":\"0x3eee01fcae8d1016234ed8daaf3d809346631e18f88d7e5d6aa4901eeaa9410e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b77dfe18c30eb4343a04645c707a0a61eb58c608ec583f087b4c5b525786823\",\"dweb:/ipfs/QmYNryzjZvjRH6LKxmZ2vChismEZjVV7Ev773hrVqwWHZi\"]},\"contracts/MyNFT/IERC721Metadata.sol\":{\"keccak256\":\"0x17c6c817a8c8d238ed69161fe51dcc6e0ce4586852a57a12833a122388c24a22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cdb49797ef9274d63fcae9cb4068356bdbb423264de6cb638c5b9780f7c093a\",\"dweb:/ipfs/Qmf3V7g1dGzYCgeGBHMhKQP8Dwv13U1iqMUPAuE5MwJ2wD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC-721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/IERC721Receiver.sol\":{\"keccak256\":\"0xdb4be0729937bf75572b7ed92840a96437191a0eb9d4b4d31e15ad08b71c0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b322470865a9b71aa3455a5e87b10493e340163b9e88913f292acf240c9cc640\",\"dweb:/ipfs/QmWpABMQGtETHmd1x9YyfUrT3sYkNuQoh7hqJwKEz13CcD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT/Math.sol\":211:16013  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT/Math.sol\":211:16013  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122097d9a05d34e405a6dc55c4d51017ab9d2767429d209945e6ac52f02b2f7ac0d364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097d9a05d34e405a6dc55c4d51017ab9d2767429d209945e6ac52f02b2f7ac0d364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xD9 LOG0 0x5D CALLVALUE 0xE4 SDIV 0xA6 0xDC SSTORE 0xC4 0xD5 LT OR 0xAB SWAP14 0x27 PUSH8 0x429D209945E6AC52 CREATE 0x2B 0x2F PUSH27 0xC0D364736F6C634300081400330000000000000000000000000000 ",
							"sourceMap": "211:15802:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097d9a05d34e405a6dc55c4d51017ab9d2767429d209945e6ac52f02b2f7ac0d364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xD9 LOG0 0x5D CALLVALUE 0xE4 SDIV 0xA6 0xDC SSTORE 0xC4 0xD5 LT OR 0xAB SWAP14 0x27 PUSH8 0x429D209945E6AC52 CREATE 0x2B 0x2F PUSH27 0xC0D364736F6C634300081400330000000000000000000000000000 ",
							"sourceMap": "211:15802:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 211,
									"end": 16013,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097d9a05d34e405a6dc55c4d51017ab9d2767429d209945e6ac52f02b2f7ac0d364736f6c63430008140033",
									".code": [
										{
											"begin": 211,
											"end": 16013,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 211,
											"end": 16013,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 211,
											"end": 16013,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 211,
											"end": 16013,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 16013,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 16013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 211,
											"end": 16013,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 16013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 211,
											"end": 16013,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT/Context.sol",
								"contracts/MyNFT/ERC165.sol",
								"contracts/MyNFT/ERC721.sol",
								"contracts/MyNFT/ERC721Burnable.sol",
								"contracts/MyNFT/ERC721Enumerable.sol",
								"contracts/MyNFT/ERC721Pausable.sol",
								"contracts/MyNFT/IERC165.sol",
								"contracts/MyNFT/IERC721.sol",
								"contracts/MyNFT/IERC721Enumerable.sol",
								"contracts/MyNFT/IERC721Metadata.sol",
								"contracts/MyNFT/IERC721Receiver.sol",
								"contracts/MyNFT/Math.sol",
								"contracts/MyNFT/Ownable.sol",
								"contracts/MyNFT/Pausable.sol",
								"contracts/MyNFT/PudgyPenguins.sol",
								"contracts/MyNFT/SignedMath.sol",
								"contracts/MyNFT/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Math.sol\":{\"keccak256\":\"0xa623136c8fcaf1b60612023600dd1d2d7e43fa9b1b3d8ec2f8982f1d9cb2d29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c13a5c89ac90ab7717be1decb485f20fb1b6ff65de143874ee483edaa400c63\",\"dweb:/ipfs/QmXd8gpCre1YwKBmDzHWMvSn6N72GdiZP31W6ZD5fkHFZ4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]},\"contracts/MyNFT/Ownable.sol\":{\"keccak256\":\"0x089d819b25b18c70708dbaf304a74c1b76bad98f5bdde7b40fbcbceec85e8e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e04628d8e82e44c940e0d3712bbc284f9e222680243daeae0f1c14d108059455\",\"dweb:/ipfs/QmV5fXknwRBYQme3r1g7jFeEg1BvZ1MdBTmxUd7ZbGYgcj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2733,
								"contract": "contracts/MyNFT/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]},\"contracts/MyNFT/Pausable.sol\":{\"keccak256\":\"0x25134c8284bd36504728d29294ed4a8515f7d4ea1f9c7462f2e80bc11ac09a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a23f17a2b2754000758abd5b794b0e17afb96bc62d1311860e4f3b24c75ee87b\",\"dweb:/ipfs/Qmc1ak2fd2NtY14gWhqWjoRaQYAR2R8vCKCiqRW6X8nV4C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2881,
								"contract": "contracts/MyNFT/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/PudgyPenguins.sol": {
				"CreditTiger": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT/PudgyPenguins.sol\":293:1253  contract CreditTiger is  ERC721Enumerable,Ownable, ERC721Burnable, ERC721Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyNFT/PudgyPenguins.sol\":425:521  constructor(address initialOwner) ERC721(\"Credit-Tiger\", \"CTT\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/MyNFT/PudgyPenguins.sol\":497:509  initialOwner */\n  dup1\n    /* \"contracts/MyNFT/ERC721.sol\":1353:1469  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x4372656469742d54696765720000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4354540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyNFT/ERC721.sol\":1428:1433  name_ */\n  dup2\n    /* \"contracts/MyNFT/ERC721.sol\":1420:1425  _name */\n  0x00\n    /* \"contracts/MyNFT/ERC721.sol\":1420:1433  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/MyNFT/ERC721.sol\":1454:1461  symbol_ */\n  dup1\n    /* \"contracts/MyNFT/ERC721.sol\":1444:1451  _symbol */\n  0x01\n    /* \"contracts/MyNFT/ERC721.sol\":1444:1461  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/MyNFT/ERC721.sol\":1353:1469  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyNFT/Ownable.sol\":1328:1329  0 */\n  0x00\n    /* \"contracts/MyNFT/Ownable.sol\":1304:1330  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyNFT/Ownable.sol\":1304:1316  initialOwner */\n  dup2\n    /* \"contracts/MyNFT/Ownable.sol\":1304:1330  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/MyNFT/Ownable.sol\":1300:1397  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"contracts/MyNFT/Ownable.sol\":1382:1383  0 */\n  0x00\n    /* \"contracts/MyNFT/Ownable.sol\":1354:1385  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/MyNFT/Ownable.sol\":1300:1397  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"contracts/MyNFT/Ownable.sol\":1407:1439  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"contracts/MyNFT/Ownable.sol\":1426:1438  initialOwner */\n  dup2\n    /* \"contracts/MyNFT/Ownable.sol\":1407:1425  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"contracts/MyNFT/Ownable.sol\":1407:1439  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contracts/MyNFT/Ownable.sol\":1255:1447  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/MyNFT/Pausable.sol\":1277:1282  false */\n  0x00\n    /* \"contracts/MyNFT/Pausable.sol\":1267:1274  _paused */\n  0x0a\n  0x14\n    /* \"contracts/MyNFT/Pausable.sol\":1267:1282  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyNFT/PudgyPenguins.sol\":425:521  constructor(address initialOwner) ERC721(\"Credit-Tiger\", \"CTT\") Ownable(initialOwner) {... */\n  pop\n    /* \"contracts/MyNFT/PudgyPenguins.sol\":293:1253  contract CreditTiger is  ERC721Enumerable,Ownable, ERC721Burnable, ERC721Pausable {... */\n  jump(tag_20)\n    /* \"contracts/MyNFT/Ownable.sol\":2999:3190  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"contracts/MyNFT/Ownable.sol\":3073:3089  address oldOwner */\n  0x00\n    /* \"contracts/MyNFT/Ownable.sol\":3092:3098  _owner */\n  0x0a\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyNFT/Ownable.sol\":3073:3098  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/MyNFT/Ownable.sol\":3118:3126  newOwner */\n  dup2\n    /* \"contracts/MyNFT/Ownable.sol\":3109:3115  _owner */\n  0x0a\n  0x00\n    /* \"contracts/MyNFT/Ownable.sol\":3109:3126  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyNFT/Ownable.sol\":3173:3181  newOwner */\n  dup2\n    /* \"contracts/MyNFT/Ownable.sol\":3142:3182  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MyNFT/Ownable.sol\":3163:3171  oldOwner */\n  dup2\n    /* \"contracts/MyNFT/Ownable.sol\":3142:3182  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/MyNFT/Ownable.sol\":3062:3190  {... */\n  pop\n    /* \"contracts/MyNFT/Ownable.sol\":2999:3190  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":932:1051   */\ntag_63:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_65\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_29:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_30:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_31:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_32:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_70:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_72\n  tag_31\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1909:1993   */\ntag_71:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_33:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_34:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_35:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_36:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_77\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_35\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2624:2663   */\n  tag_78\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_35\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_37:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_38:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_39:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_82\n    /* \"#utility.yul\":3013:3047   */\n  tag_83\n    /* \"#utility.yul\":3022:3046   */\n  tag_84\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_37\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3013:3047   */\n  tag_38\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2995:3048   */\n  tag_37\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_40:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_41:\n    /* \"#utility.yul\":3251:3290   */\n  tag_87\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3312:3403   */\n  tag_88\n    /* \"#utility.yul\":3361:3402   */\n  tag_89\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_40\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_36\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_42:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_43:\n    /* \"#utility.yul\":3572:3604   */\n  tag_92\n  tag_42\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3613:3678   */\n  tag_93\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_44:\n    /* \"#utility.yul\":3750:3870   */\ntag_95:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_98\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_43\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_95)\ntag_97:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_45:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_101\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_33\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4101:4130   */\n  tag_102\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_34\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_103:\n    /* \"#utility.yul\":4328:4408   */\n  tag_104\n    /* \"#utility.yul\":4384:4406   */\n  tag_105\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_34\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_44\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_100:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_46:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_47:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_108\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_46\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_48:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_110\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_47\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_10:\n    /* \"#utility.yul\":5145:5182   */\n  tag_112\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_29\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_114\n  tag_30\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5233:5289   */\ntag_113:\n    /* \"#utility.yul\":5313:5351   */\n  tag_115\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_32\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5398:5465   */\n  tag_116\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_45\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_119:\n    /* \"#utility.yul\":6339:6406   */\n  tag_120\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_48\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_117)\n    /* \"#utility.yul\":5560:6178   */\ntag_118:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_121\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_33\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_122:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_126\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_47\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_125:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_117:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_49:\n    /* \"#utility.yul\":6516:6540   */\n  tag_128\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_26\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_15:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_130\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_49\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyNFT/PudgyPenguins.sol\":293:1253  contract CreditTiger is  ERC721Enumerable,Ownable, ERC721Burnable, ERC721Pausable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":293:1253  contract CreditTiger is  ERC721Enumerable,Ownable, ERC721Burnable, ERC721Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x6352211e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6b59084d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x23b872dd\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1066:1244  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Enumerable,ERC721) returns (bool) {... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/ERC721.sol\":2375:2466  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/ERC721.sol\":3547:3705  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/ERC721.sol\":3366:3481  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2089:2193  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/ERC721.sol\":4216:4810  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1753:2013  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/ERC721.sol\":4881:5015  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":569:887  function burn(uint256 tokenId) public virtual {... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2270:2501  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/Pausable.sol\":1916:2002  function paused() public view virtual returns (bool) {... */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/ERC721.sol\":2188:2308  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":905:1052  function test1() public  override(ERC721Enumerable,ERC721,ERC721Pausable)  {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/MyNFT/ERC721.sol\":1910:2126  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/Ownable.sol\":2361:2464  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/MyNFT/Ownable.sol\":1686:1773  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/ERC721.sol\":2535:2630  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/ERC721.sol\":3777:3923  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/MyNFT/ERC721.sol\":5086:5297  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/MyNFT/ERC721.sol\":2701:2961  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/ERC721.sol\":3994:4149  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_23:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT/Ownable.sol\":2619:2839  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1066:1244  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Enumerable,ERC721) returns (bool) {... */\n    tag_31:\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1176:1180  bool */\n      0x00\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1200:1236  super.supportsInterface(interfaceId) */\n      tag_113\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1224:1235  interfaceId */\n      dup3\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1200:1223  super.supportsInterface */\n      tag_114\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1200:1236  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1193:1236  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1066:1244  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Enumerable,ERC721) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":2375:2466  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"contracts/MyNFT/ERC721.sol\":2420:2433  string memory */\n      0x60\n        /* \"contracts/MyNFT/ERC721.sol\":2453:2458  _name */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":2446:2458  return _name */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_117\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":2375:2466  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":3547:3705  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_41:\n        /* \"contracts/MyNFT/ERC721.sol\":3614:3621  address */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":3634:3656  _requireOwned(tokenId) */\n      tag_123\n        /* \"contracts/MyNFT/ERC721.sol\":3648:3655  tokenId */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":3634:3647  _requireOwned */\n      tag_124\n        /* \"contracts/MyNFT/ERC721.sol\":3634:3656  _requireOwned(tokenId) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":3676:3697  _getApproved(tokenId) */\n      tag_125\n        /* \"contracts/MyNFT/ERC721.sol\":3689:3696  tokenId */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":3676:3688  _getApproved */\n      tag_126\n        /* \"contracts/MyNFT/ERC721.sol\":3676:3697  _getApproved(tokenId) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/MyNFT/ERC721.sol\":3669:3697  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":3547:3705  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":3366:3481  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"contracts/MyNFT/ERC721.sol\":3438:3473  _approve(to, tokenId, _msgSender()) */\n      tag_128\n        /* \"contracts/MyNFT/ERC721.sol\":3447:3449  to */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":3451:3458  tokenId */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":3460:3472  _msgSender() */\n      tag_129\n        /* \"contracts/MyNFT/ERC721.sol\":3460:3470  _msgSender */\n      tag_130\n        /* \"contracts/MyNFT/ERC721.sol\":3460:3472  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/MyNFT/ERC721.sol\":3438:3446  _approve */\n      tag_131\n        /* \"contracts/MyNFT/ERC721.sol\":3438:3473  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/MyNFT/ERC721.sol\":3366:3481  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2089:2193  function totalSupply() public view virtual returns (uint256) {... */\n    tag_49:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2141:2148  uint256 */\n      0x00\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2168:2178  _allTokens */\n      0x08\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2168:2185  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2161:2185  return _allTokens.length */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2089:2193  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":4216:4810  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_55:\n        /* \"contracts/MyNFT/ERC721.sol\":4620:4641  address previousOwner */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":4644:4678  _update(to, tokenId, _msgSender()) */\n      tag_135\n        /* \"contracts/MyNFT/ERC721.sol\":4652:4654  to */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":4656:4663  tokenId */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":4665:4677  _msgSender() */\n      tag_136\n        /* \"contracts/MyNFT/ERC721.sol\":4665:4675  _msgSender */\n      tag_130\n        /* \"contracts/MyNFT/ERC721.sol\":4665:4677  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/MyNFT/ERC721.sol\":4644:4651  _update */\n      tag_137\n        /* \"contracts/MyNFT/ERC721.sol\":4644:4678  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/MyNFT/ERC721.sol\":4620:4678  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":4296:4810  {... */\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":4216:4810  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1753:2013  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1841:1848  uint256 */\n      0x00\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1874:1890  balanceOf(owner) */\n      tag_140\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1884:1889  owner */\n      dup4\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1874:1883  balanceOf */\n      tag_82\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1874:1890  balanceOf(owner) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1865:1870  index */\n      dup3\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1865:1890  index >= balanceOf(owner) */\n      lt\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1861:1962  if (index >= balanceOf(owner)) {... */\n      tag_141\n      jumpi\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1937:1942  owner */\n      dup3\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1944:1949  index */\n      dup3\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1914:1950  ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1861:1962  if (index >= balanceOf(owner)) {... */\n    tag_141:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1979:1991  _ownedTokens */\n      0x06\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1979:1998  _ownedTokens[owner] */\n      0x00\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1992:1997  owner */\n      dup5\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1979:1998  _ownedTokens[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1979:2005  _ownedTokens[owner][index] */\n      0x00\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1999:2004  index */\n      dup4\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1979:2005  _ownedTokens[owner][index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1972:2005  return _ownedTokens[owner][index] */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1753:2013  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":4881:5015  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_62:\n        /* \"contracts/MyNFT/ERC721.sol\":4968:5007  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_145\n        /* \"contracts/MyNFT/ERC721.sol\":4985:4989  from */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":4991:4993  to */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":4995:5002  tokenId */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":4968:5007  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":4968:4984  safeTransferFrom */\n      tag_99\n        /* \"contracts/MyNFT/ERC721.sol\":4968:5007  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_145:\n        /* \"contracts/MyNFT/ERC721.sol\":4881:5015  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":569:887  function burn(uint256 tokenId) public virtual {... */\n    tag_65:\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":837:879  _update(address(0), tokenId, _msgSender()) */\n      tag_147\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":853:854  0 */\n      0x00\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":857:864  tokenId */\n      dup3\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":866:878  _msgSender() */\n      tag_148\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":866:876  _msgSender */\n      tag_130\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":866:878  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":837:844  _update */\n      tag_137\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":837:879  _update(address(0), tokenId, _msgSender()) */\n      jump\t// in\n    tag_147:\n      pop\n        /* \"contracts/MyNFT/ERC721Burnable.sol\":569:887  function burn(uint256 tokenId) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2270:2501  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_68:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2336:2343  uint256 */\n      0x00\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2369:2382  totalSupply() */\n      tag_150\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2369:2380  totalSupply */\n      tag_49\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2369:2382  totalSupply() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2360:2365  index */\n      dup3\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2360:2382  index >= totalSupply() */\n      lt\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2356:2459  if (index >= totalSupply()) {... */\n      tag_151\n      jumpi\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2437:2438  0 */\n      0x00\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2441:2446  index */\n      dup3\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2406:2447  ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2356:2459  if (index >= totalSupply()) {... */\n    tag_151:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2476:2486  _allTokens */\n      0x08\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2487:2492  index */\n      dup3\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2476:2493  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_153\n      jumpi\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n    tag_153:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2469:2493  return _allTokens[index] */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2270:2501  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/Pausable.sol\":1916:2002  function paused() public view virtual returns (bool) {... */\n    tag_71:\n        /* \"contracts/MyNFT/Pausable.sol\":1963:1967  bool */\n      0x00\n        /* \"contracts/MyNFT/Pausable.sol\":1987:1994  _paused */\n      0x0a\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyNFT/Pausable.sol\":1980:1994  return _paused */\n      swap1\n      pop\n        /* \"contracts/MyNFT/Pausable.sol\":1916:2002  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":2188:2308  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_75:\n        /* \"contracts/MyNFT/ERC721.sol\":2251:2258  address */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":2278:2300  _requireOwned(tokenId) */\n      tag_159\n        /* \"contracts/MyNFT/ERC721.sol\":2292:2299  tokenId */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":2278:2291  _requireOwned */\n      tag_124\n        /* \"contracts/MyNFT/ERC721.sol\":2278:2300  _requireOwned(tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/MyNFT/ERC721.sol\":2271:2300  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":2188:2308  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":905:1052  function test1() public  override(ERC721Enumerable,ERC721,ERC721Pausable)  {... */\n    tag_78:\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":996:1020  Log(\"CreditTiger.test1\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1031:1044  super.test1() */\n      tag_163\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1031:1042  super.test1 */\n      tag_164\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1031:1044  super.test1() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":905:1052  function test1() public  override(ERC721Enumerable,ERC721,ERC721Pausable)  {... */\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":1910:2126  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_82:\n        /* \"contracts/MyNFT/ERC721.sol\":1973:1980  uint256 */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":2102:2111  _balances */\n      0x03\n        /* \"contracts/MyNFT/ERC721.sol\":2102:2118  _balances[owner] */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":2112:2117  owner */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":2102:2118  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyNFT/ERC721.sol\":2095:2118  return _balances[owner] */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":1910:2126  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/Ownable.sol\":2361:2464  function renounceOwnership() public virtual onlyOwner {... */\n    tag_85:\n        /* \"contracts/MyNFT/Ownable.sol\":1572:1585  _checkOwner() */\n      tag_168\n        /* \"contracts/MyNFT/Ownable.sol\":1572:1583  _checkOwner */\n      tag_169\n        /* \"contracts/MyNFT/Ownable.sol\":1572:1585  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/MyNFT/Ownable.sol\":2426:2456  _transferOwnership(address(0)) */\n      tag_171\n        /* \"contracts/MyNFT/Ownable.sol\":2453:2454  0 */\n      0x00\n        /* \"contracts/MyNFT/Ownable.sol\":2426:2444  _transferOwnership */\n      tag_172\n        /* \"contracts/MyNFT/Ownable.sol\":2426:2456  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/MyNFT/Ownable.sol\":2361:2464  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/MyNFT/Ownable.sol\":1686:1773  function owner() public view virtual returns (address) {... */\n    tag_87:\n        /* \"contracts/MyNFT/Ownable.sol\":1732:1739  address */\n      0x00\n        /* \"contracts/MyNFT/Ownable.sol\":1759:1765  _owner */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/Ownable.sol\":1752:1765  return _owner */\n      swap1\n      pop\n        /* \"contracts/MyNFT/Ownable.sol\":1686:1773  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":2535:2630  function symbol() public view virtual returns (string memory) {... */\n    tag_90:\n        /* \"contracts/MyNFT/ERC721.sol\":2582:2595  string memory */\n      0x60\n        /* \"contracts/MyNFT/ERC721.sol\":2615:2622  _symbol */\n      0x01\n        /* \"contracts/MyNFT/ERC721.sol\":2608:2622  return _symbol */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_117\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_117\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":2535:2630  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":3777:3923  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_95:\n        /* \"contracts/MyNFT/ERC721.sol\":3863:3915  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_181\n        /* \"contracts/MyNFT/ERC721.sol\":3882:3894  _msgSender() */\n      tag_182\n        /* \"contracts/MyNFT/ERC721.sol\":3882:3892  _msgSender */\n      tag_130\n        /* \"contracts/MyNFT/ERC721.sol\":3882:3894  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/MyNFT/ERC721.sol\":3896:3904  operator */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":3906:3914  approved */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":3863:3881  _setApprovalForAll */\n      tag_183\n        /* \"contracts/MyNFT/ERC721.sol\":3863:3915  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/MyNFT/ERC721.sol\":3777:3923  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":5086:5297  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_99:\n        /* \"contracts/MyNFT/ERC721.sol\":5200:5231  transferFrom(from, to, tokenId) */\n      tag_185\n        /* \"contracts/MyNFT/ERC721.sol\":5213:5217  from */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":5219:5221  to */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":5223:5230  tokenId */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":5200:5212  transferFrom */\n      tag_55\n        /* \"contracts/MyNFT/ERC721.sol\":5200:5231  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/MyNFT/ERC721.sol\":5242:5289  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_186\n        /* \"contracts/MyNFT/ERC721.sol\":5265:5269  from */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":5271:5273  to */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":5275:5282  tokenId */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":5284:5288  data */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":5242:5264  _checkOnERC721Received */\n      tag_187\n        /* \"contracts/MyNFT/ERC721.sol\":5242:5289  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/MyNFT/ERC721.sol\":5086:5297  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":2701:2961  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_102:\n        /* \"contracts/MyNFT/ERC721.sol\":2765:2778  string memory */\n      0x60\n        /* \"contracts/MyNFT/ERC721.sol\":2791:2813  _requireOwned(tokenId) */\n      tag_189\n        /* \"contracts/MyNFT/ERC721.sol\":2805:2812  tokenId */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":2791:2804  _requireOwned */\n      tag_124\n        /* \"contracts/MyNFT/ERC721.sol\":2791:2813  _requireOwned(tokenId) */\n      jump\t// in\n    tag_189:\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":2826:2847  string memory baseURI */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":2850:2860  _baseURI() */\n      tag_190\n        /* \"contracts/MyNFT/ERC721.sol\":2850:2858  _baseURI */\n      tag_191\n        /* \"contracts/MyNFT/ERC721.sol\":2850:2860  _baseURI() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/MyNFT/ERC721.sol\":2826:2860  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":2902:2903  0 */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":2884:2891  baseURI */\n      dup2\n        /* \"contracts/MyNFT/ERC721.sol\":2878:2899  bytes(baseURI).length */\n      mload\n        /* \"contracts/MyNFT/ERC721.sol\":2878:2903  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/MyNFT/ERC721.sol\":2878:2953  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_192\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_193)\n    tag_192:\n        /* \"contracts/MyNFT/ERC721.sol\":2920:2927  baseURI */\n      dup1\n        /* \"contracts/MyNFT/ERC721.sol\":2929:2947  tokenId.toString() */\n      tag_194\n        /* \"contracts/MyNFT/ERC721.sol\":2929:2936  tokenId */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":2929:2945  tokenId.toString */\n      tag_195\n        /* \"contracts/MyNFT/ERC721.sol\":2929:2947  tokenId.toString() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/MyNFT/ERC721.sol\":2906:2948  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_196\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyNFT/ERC721.sol\":2878:2953  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_193:\n        /* \"contracts/MyNFT/ERC721.sol\":2871:2953  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":2701:2961  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":3994:4149  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_107:\n        /* \"contracts/MyNFT/ERC721.sol\":4082:4086  bool */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":4106:4124  _operatorApprovals */\n      0x05\n        /* \"contracts/MyNFT/ERC721.sol\":4106:4131  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":4125:4130  owner */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":4106:4131  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyNFT/ERC721.sol\":4106:4141  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":4132:4140  operator */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":4106:4141  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":4099:4141  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":3994:4149  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/Ownable.sol\":2619:2839  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_111:\n        /* \"contracts/MyNFT/Ownable.sol\":1572:1585  _checkOwner() */\n      tag_200\n        /* \"contracts/MyNFT/Ownable.sol\":1572:1583  _checkOwner */\n      tag_169\n        /* \"contracts/MyNFT/Ownable.sol\":1572:1585  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/MyNFT/Ownable.sol\":2724:2725  0 */\n      0x00\n        /* \"contracts/MyNFT/Ownable.sol\":2704:2726  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/Ownable.sol\":2704:2712  newOwner */\n      dup2\n        /* \"contracts/MyNFT/Ownable.sol\":2704:2726  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyNFT/Ownable.sol\":2700:2793  if (newOwner == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"contracts/MyNFT/Ownable.sol\":2778:2779  0 */\n      0x00\n        /* \"contracts/MyNFT/Ownable.sol\":2750:2781  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT/Ownable.sol\":2700:2793  if (newOwner == address(0)) {... */\n    tag_202:\n        /* \"contracts/MyNFT/Ownable.sol\":2803:2831  _transferOwnership(newOwner) */\n      tag_204\n        /* \"contracts/MyNFT/Ownable.sol\":2822:2830  newOwner */\n      dup2\n        /* \"contracts/MyNFT/Ownable.sol\":2803:2821  _transferOwnership */\n      tag_172\n        /* \"contracts/MyNFT/Ownable.sol\":2803:2831  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/MyNFT/Ownable.sol\":2619:2839  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1445:1669  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_114:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1547:1551  bool */\n      0x00\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1586:1621  type(IERC721Enumerable).interfaceId */\n      0x780e9d6300000000000000000000000000000000000000000000000000000000\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1571:1621  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1571:1582  interfaceId */\n      dup3\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1571:1621  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1571:1661  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_206\n      jumpi\n      pop\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1625:1661  super.supportsInterface(interfaceId) */\n      tag_207\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1649:1660  interfaceId */\n      dup3\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1625:1648  super.supportsInterface */\n      tag_208\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1625:1661  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1571:1661  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n    tag_206:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1564:1661  return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":1445:1669  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":16671:16921  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_124:\n        /* \"contracts/MyNFT/ERC721.sol\":16734:16741  address */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":16754:16767  address owner */\n      dup1\n        /* \"contracts/MyNFT/ERC721.sol\":16770:16787  _ownerOf(tokenId) */\n      tag_210\n        /* \"contracts/MyNFT/ERC721.sol\":16779:16786  tokenId */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":16770:16778  _ownerOf */\n      tag_211\n        /* \"contracts/MyNFT/ERC721.sol\":16770:16787  _ownerOf(tokenId) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/MyNFT/ERC721.sol\":16754:16787  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":16908:16913  owner */\n      dup1\n        /* \"contracts/MyNFT/ERC721.sol\":16901:16913  return owner */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":16671:16921  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":6060:6189  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_126:\n        /* \"contracts/MyNFT/ERC721.sol\":6130:6137  address */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":6157:6172  _tokenApprovals */\n      0x04\n        /* \"contracts/MyNFT/ERC721.sol\":6157:6181  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":6173:6180  tokenId */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":6157:6181  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":6150:6181  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":6060:6189  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n    tag_130:\n        /* \"contracts/MyNFT/Context.sol\":725:732  address */\n      0x00\n        /* \"contracts/MyNFT/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"contracts/MyNFT/Context.sol\":745:762  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/MyNFT/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":14897:15019  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_131:\n        /* \"contracts/MyNFT/ERC721.sol\":14978:15011  _approve(to, tokenId, auth, true) */\n      tag_216\n        /* \"contracts/MyNFT/ERC721.sol\":14987:14989  to */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":14991:14998  tokenId */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":15000:15004  auth */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":15006:15010  true */\n      0x01\n        /* \"contracts/MyNFT/ERC721.sol\":14978:14986  _approve */\n      tag_217\n        /* \"contracts/MyNFT/ERC721.sol\":14978:15011  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/MyNFT/ERC721.sol\":14897:15019  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":711:895  function _update(address to, uint256 tokenId, address auth) internal virtual override(ERC721Enumerable,ERC721,ERC721Pausable) returns (address) {... */\n    tag_137:\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":846:853  address */\n      0x00\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":711:895  function _update(address to, uint256 tokenId, address auth) internal virtual override(ERC721Enumerable,ERC721,ERC721Pausable) returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721Pausable.sol\":1354:1471  function test1() public override  virtual {... */\n    tag_164:\n        /* \"contracts/MyNFT/ERC721Pausable.sol\":1412:1439  Log(\"ERC721Pausable.test1\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyNFT/ERC721Pausable.sol\":1450:1463  super.test1() */\n      tag_222\n        /* \"contracts/MyNFT/ERC721Pausable.sol\":1450:1461  super.test1 */\n      tag_223\n        /* \"contracts/MyNFT/ERC721Pausable.sol\":1450:1463  super.test1() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/MyNFT/ERC721Pausable.sol\":1354:1471  function test1() public override  virtual {... */\n      jump\t// out\n        /* \"contracts/MyNFT/Ownable.sol\":1851:2017  function _checkOwner() internal view virtual {... */\n    tag_169:\n        /* \"contracts/MyNFT/Ownable.sol\":1922:1934  _msgSender() */\n      tag_225\n        /* \"contracts/MyNFT/Ownable.sol\":1922:1932  _msgSender */\n      tag_130\n        /* \"contracts/MyNFT/Ownable.sol\":1922:1934  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/MyNFT/Ownable.sol\":1911:1934  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/Ownable.sol\":1911:1918  owner() */\n      tag_226\n        /* \"contracts/MyNFT/Ownable.sol\":1911:1916  owner */\n      tag_87\n        /* \"contracts/MyNFT/Ownable.sol\":1911:1918  owner() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/MyNFT/Ownable.sol\":1911:1934  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT/Ownable.sol\":1907:2010  if (owner() != _msgSender()) {... */\n      tag_227\n      jumpi\n        /* \"contracts/MyNFT/Ownable.sol\":1985:1997  _msgSender() */\n      tag_228\n        /* \"contracts/MyNFT/Ownable.sol\":1985:1995  _msgSender */\n      tag_130\n        /* \"contracts/MyNFT/Ownable.sol\":1985:1997  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/MyNFT/Ownable.sol\":1958:1998  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT/Ownable.sol\":1907:2010  if (owner() != _msgSender()) {... */\n    tag_227:\n        /* \"contracts/MyNFT/Ownable.sol\":1851:2017  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/MyNFT/Ownable.sol\":2999:3190  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_172:\n        /* \"contracts/MyNFT/Ownable.sol\":3073:3089  address oldOwner */\n      0x00\n        /* \"contracts/MyNFT/Ownable.sol\":3092:3098  _owner */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/Ownable.sol\":3073:3098  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/MyNFT/Ownable.sol\":3118:3126  newOwner */\n      dup2\n        /* \"contracts/MyNFT/Ownable.sol\":3109:3115  _owner */\n      0x0a\n      0x00\n        /* \"contracts/MyNFT/Ownable.sol\":3109:3126  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT/Ownable.sol\":3173:3181  newOwner */\n      dup2\n        /* \"contracts/MyNFT/Ownable.sol\":3142:3182  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/Ownable.sol\":3163:3171  oldOwner */\n      dup2\n        /* \"contracts/MyNFT/Ownable.sol\":3142:3182  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyNFT/Ownable.sol\":3062:3190  {... */\n      pop\n        /* \"contracts/MyNFT/Ownable.sol\":2999:3190  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":16107:16428  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_183:\n        /* \"contracts/MyNFT/ERC721.sol\":16355:16363  approved */\n      dup1\n        /* \"contracts/MyNFT/ERC721.sol\":16317:16335  _operatorApprovals */\n      0x05\n        /* \"contracts/MyNFT/ERC721.sol\":16317:16342  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":16336:16341  owner */\n      dup6\n        /* \"contracts/MyNFT/ERC721.sol\":16317:16342  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyNFT/ERC721.sol\":16317:16352  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":16343:16351  operator */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":16317:16352  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":16317:16363  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":16401:16409  operator */\n      dup2\n        /* \"contracts/MyNFT/ERC721.sol\":16379:16420  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":16394:16399  owner */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":16379:16420  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/MyNFT/ERC721.sol\":16411:16419  approved */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":16379:16420  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyNFT/ERC721.sol\":16107:16428  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":17471:18276  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_187:\n        /* \"contracts/MyNFT/ERC721.sol\":17605:17606  0 */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":17588:17590  to */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":17588:17602  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/MyNFT/ERC721.sol\":17588:17606  to.code.length > 0 */\n      gt\n        /* \"contracts/MyNFT/ERC721.sol\":17584:18269  if (to.code.length > 0) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/MyNFT/ERC721.sol\":17643:17645  to */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":17627:17663  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/MyNFT/ERC721.sol\":17664:17676  _msgSender() */\n      tag_236\n        /* \"contracts/MyNFT/ERC721.sol\":17664:17674  _msgSender */\n      tag_130\n        /* \"contracts/MyNFT/ERC721.sol\":17664:17676  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/MyNFT/ERC721.sol\":17678:17682  from */\n      dup7\n        /* \"contracts/MyNFT/ERC721.sol\":17684:17691  tokenId */\n      dup6\n        /* \"contracts/MyNFT/ERC721.sol\":17693:17697  data */\n      dup6\n        /* \"contracts/MyNFT/ERC721.sol\":17627:17698  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      0x01\n    tag_239:\n        /* \"contracts/MyNFT/ERC721.sol\":17623:18258  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_242\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_247\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_246)\n    tag_247:\n      0x60\n      swap2\n      pop\n    tag_246:\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":17961:17962  0 */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":17944:17950  reason */\n      dup2\n        /* \"contracts/MyNFT/ERC721.sol\":17944:17957  reason.length */\n      mload\n        /* \"contracts/MyNFT/ERC721.sol\":17944:17962  reason.length == 0 */\n      sub\n        /* \"contracts/MyNFT/ERC721.sol\":17940:18243  if (reason.length == 0) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"contracts/MyNFT/ERC721.sol\":18193:18199  reason */\n      dup1\n        /* \"contracts/MyNFT/ERC721.sol\":18187:18200  mload(reason) */\n      mload\n        /* \"contracts/MyNFT/ERC721.sol\":18178:18184  reason */\n      dup2\n        /* \"contracts/MyNFT/ERC721.sol\":18174:18176  32 */\n      0x20\n        /* \"contracts/MyNFT/ERC721.sol\":18170:18185  add(32, reason) */\n      add\n        /* \"contracts/MyNFT/ERC721.sol\":18163:18201  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/MyNFT/ERC721.sol\":17940:18243  if (reason.length == 0) {... */\n    tag_249:\n        /* \"contracts/MyNFT/ERC721.sol\":17893:18258  catch (bytes memory reason) {... */\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":17623:18258  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      jump(tag_250)\n    tag_242:\n        /* \"contracts/MyNFT/ERC721.sol\":17699:17892  returns (bytes4 retval) {... */\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":17623:18258  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_250:\n        /* \"contracts/MyNFT/ERC721.sol\":17584:18269  if (to.code.length > 0) {... */\n    tag_235:\n        /* \"contracts/MyNFT/ERC721.sol\":17471:18276  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":3210:3304  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_191:\n        /* \"contracts/MyNFT/ERC721.sol\":3261:3274  string memory */\n      0x60\n        /* \"contracts/MyNFT/ERC721.sol\":3287:3296  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":3210:3304  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT/Strings.sol\":650:1368  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_195:\n        /* \"contracts/MyNFT/Strings.sol\":706:719  string memory */\n      0x60\n        /* \"contracts/MyNFT/Strings.sol\":757:771  uint256 length */\n      0x00\n        /* \"contracts/MyNFT/Strings.sol\":794:795  1 */\n      0x01\n        /* \"contracts/MyNFT/Strings.sol\":774:791  Math.log10(value) */\n      tag_254\n        /* \"contracts/MyNFT/Strings.sol\":785:790  value */\n      dup5\n        /* \"contracts/MyNFT/Strings.sol\":774:784  Math.log10 */\n      tag_255\n        /* \"contracts/MyNFT/Strings.sol\":774:791  Math.log10(value) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/MyNFT/Strings.sol\":774:795  Math.log10(value) + 1 */\n      add\n        /* \"contracts/MyNFT/Strings.sol\":757:795  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"contracts/MyNFT/Strings.sol\":810:830  string memory buffer */\n      0x00\n        /* \"contracts/MyNFT/Strings.sol\":844:850  length */\n      dup2\n        /* \"contracts/MyNFT/Strings.sol\":833:851  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_256\n      jumpi\n      tag_257\n      tag_258\n      jump\t// in\n    tag_257:\n    tag_256:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_259\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_259:\n      pop\n        /* \"contracts/MyNFT/Strings.sol\":810:851  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"contracts/MyNFT/Strings.sol\":866:877  uint256 ptr */\n      0x00\n        /* \"contracts/MyNFT/Strings.sol\":995:1001  length */\n      dup3\n        /* \"contracts/MyNFT/Strings.sol\":991:993  32 */\n      0x20\n        /* \"contracts/MyNFT/Strings.sol\":987:1002  add(32, length) */\n      add\n        /* \"contracts/MyNFT/Strings.sol\":979:985  buffer */\n      dup3\n        /* \"contracts/MyNFT/Strings.sol\":975:1003  add(buffer, add(32, length)) */\n      add\n        /* \"contracts/MyNFT/Strings.sol\":968:1003  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"contracts/MyNFT/Strings.sol\":1032:1322  while (true) {... */\n    tag_260:\n        /* \"contracts/MyNFT/Strings.sol\":1039:1043  true */\n      0x01\n        /* \"contracts/MyNFT/Strings.sol\":1032:1322  while (true) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"contracts/MyNFT/Strings.sol\":1064:1069  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT/Strings.sol\":1206:1216  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"contracts/MyNFT/Strings.sol\":1201:1203  10 */\n      0x0a\n        /* \"contracts/MyNFT/Strings.sol\":1194:1199  value */\n      dup7\n        /* \"contracts/MyNFT/Strings.sol\":1190:1204  mod(value, 10) */\n      mod\n        /* \"contracts/MyNFT/Strings.sol\":1185:1217  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"contracts/MyNFT/Strings.sol\":1180:1183  ptr */\n      dup2\n        /* \"contracts/MyNFT/Strings.sol\":1172:1218  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"contracts/MyNFT/Strings.sol\":1264:1266  10 */\n      0x0a\n        /* \"contracts/MyNFT/Strings.sol\":1255:1266  value /= 10 */\n      dup6\n      dup2\n      tag_262\n      jumpi\n      tag_263\n      tag_264\n      jump\t// in\n    tag_263:\n    tag_262:\n      div\n      swap5\n      pop\n        /* \"contracts/MyNFT/Strings.sol\":1298:1299  0 */\n      0x00\n        /* \"contracts/MyNFT/Strings.sol\":1289:1294  value */\n      dup6\n        /* \"contracts/MyNFT/Strings.sol\":1289:1299  value == 0 */\n      sub\n        /* \"contracts/MyNFT/Strings.sol\":1032:1322  while (true) {... */\n      tag_260\n        /* \"contracts/MyNFT/Strings.sol\":1285:1306  if (value == 0) break */\n      jumpi\n        /* \"contracts/MyNFT/Strings.sol\":1032:1322  while (true) {... */\n    tag_261:\n        /* \"contracts/MyNFT/Strings.sol\":1343:1349  buffer */\n      dup2\n        /* \"contracts/MyNFT/Strings.sol\":1336:1349  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyNFT/Strings.sol\":650:1368  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":1541:1846  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_208:\n        /* \"contracts/MyNFT/ERC721.sol\":1643:1647  bool */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":1695:1720  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/MyNFT/ERC721.sol\":1680:1720  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":1680:1691  interfaceId */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":1680:1720  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/MyNFT/ERC721.sol\":1680:1785  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_267\n      jumpi\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":1752:1785  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/MyNFT/ERC721.sol\":1737:1785  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":1737:1748  interfaceId */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":1737:1785  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/MyNFT/ERC721.sol\":1680:1785  interfaceId == type(IERC721).interfaceId ||... */\n    tag_267:\n        /* \"contracts/MyNFT/ERC721.sol\":1680:1838  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_268\n      jumpi\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":1802:1838  super.supportsInterface(interfaceId) */\n      tag_269\n        /* \"contracts/MyNFT/ERC721.sol\":1826:1837  interfaceId */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":1802:1825  super.supportsInterface */\n      tag_270\n        /* \"contracts/MyNFT/ERC721.sol\":1802:1838  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/MyNFT/ERC721.sol\":1680:1838  interfaceId == type(IERC721).interfaceId ||... */\n    tag_268:\n        /* \"contracts/MyNFT/ERC721.sol\":1660:1838  return... */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":1541:1846  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":5822:5939  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_211:\n        /* \"contracts/MyNFT/ERC721.sol\":5888:5895  address */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":5915:5922  _owners */\n      0x02\n        /* \"contracts/MyNFT/ERC721.sol\":5915:5931  _owners[tokenId] */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":5923:5930  tokenId */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":5915:5931  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":5908:5931  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":5822:5939  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":15207:15888  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_217:\n        /* \"contracts/MyNFT/ERC721.sol\":15369:15378  emitEvent */\n      dup1\n        /* \"contracts/MyNFT/ERC721.sol\":15369:15400  emitEvent || auth != address(0) */\n      dup1\n      tag_273\n      jumpi\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":15398:15399  0 */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":15382:15400  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":15382:15386  auth */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":15382:15400  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyNFT/ERC721.sol\":15369:15400  emitEvent || auth != address(0) */\n    tag_273:\n        /* \"contracts/MyNFT/ERC721.sol\":15365:15839  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"contracts/MyNFT/ERC721.sol\":15417:15430  address owner */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":15433:15455  _requireOwned(tokenId) */\n      tag_275\n        /* \"contracts/MyNFT/ERC721.sol\":15447:15454  tokenId */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":15433:15446  _requireOwned */\n      tag_124\n        /* \"contracts/MyNFT/ERC721.sol\":15433:15455  _requireOwned(tokenId) */\n      jump\t// in\n    tag_275:\n        /* \"contracts/MyNFT/ERC721.sol\":15417:15455  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":15602:15603  0 */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":15586:15604  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":15586:15590  auth */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":15586:15604  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyNFT/ERC721.sol\":15586:15621  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":15617:15621  auth */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":15608:15621  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":15608:15613  owner */\n      dup2\n        /* \"contracts/MyNFT/ERC721.sol\":15608:15621  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyNFT/ERC721.sol\":15586:15621  auth != address(0) && owner != auth */\n    tag_276:\n        /* \"contracts/MyNFT/ERC721.sol\":15586:15655  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_277\n      jumpi\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":15626:15655  isApprovedForAll(owner, auth) */\n      tag_278\n        /* \"contracts/MyNFT/ERC721.sol\":15643:15648  owner */\n      dup2\n        /* \"contracts/MyNFT/ERC721.sol\":15650:15654  auth */\n      dup5\n        /* \"contracts/MyNFT/ERC721.sol\":15626:15642  isApprovedForAll */\n      tag_107\n        /* \"contracts/MyNFT/ERC721.sol\":15626:15655  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/MyNFT/ERC721.sol\":15625:15655  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"contracts/MyNFT/ERC721.sol\":15586:15655  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_277:\n        /* \"contracts/MyNFT/ERC721.sol\":15582:15729  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":15749:15758  emitEvent */\n      dup2\n        /* \"contracts/MyNFT/ERC721.sol\":15745:15828  if (emitEvent) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"contracts/MyNFT/ERC721.sol\":15804:15811  tokenId */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":15800:15802  to */\n      dup6\n        /* \"contracts/MyNFT/ERC721.sol\":15784:15812  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT/ERC721.sol\":15793:15798  owner */\n      dup3\n        /* \"contracts/MyNFT/ERC721.sol\":15784:15812  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/MyNFT/ERC721.sol\":15745:15828  if (emitEvent) {... */\n    tag_280:\n        /* \"contracts/MyNFT/ERC721.sol\":15402:15839  {... */\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":15365:15839  if (emitEvent || auth != address(0)) {... */\n    tag_274:\n        /* \"contracts/MyNFT/ERC721.sol\":15878:15880  to */\n      dup4\n        /* \"contracts/MyNFT/ERC721.sol\":15851:15866  _tokenApprovals */\n      0x04\n        /* \"contracts/MyNFT/ERC721.sol\":15851:15875  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":15867:15874  tokenId */\n      dup6\n        /* \"contracts/MyNFT/ERC721.sol\":15851:15875  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyNFT/ERC721.sol\":15851:15880  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT/ERC721.sol\":15207:15888  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2509:2628  function test1() public override  virtual {... */\n    tag_223:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2567:2596  Log(\"ERC721Enumerable.test1\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_282\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2607:2620  super.test1() */\n      tag_284\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2607:2618  super.test1 */\n      tag_285\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2607:2620  super.test1() */\n      jump\t// in\n    tag_284:\n        /* \"contracts/MyNFT/ERC721Enumerable.sol\":2509:2628  function test1() public override  virtual {... */\n      jump\t// out\n        /* \"contracts/MyNFT/Math.sol\":13016:13964  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_255:\n        /* \"contracts/MyNFT/Math.sol\":13069:13076  uint256 */\n      0x00\n        /* \"contracts/MyNFT/Math.sol\":13089:13103  uint256 result */\n      dup1\n        /* \"contracts/MyNFT/Math.sol\":13106:13107  0 */\n      0x00\n        /* \"contracts/MyNFT/Math.sol\":13089:13107  uint256 result = 0 */\n      swap1\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13156:13164  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contracts/MyNFT/Math.sol\":13147:13152  value */\n      dup4\n        /* \"contracts/MyNFT/Math.sol\":13147:13164  value >= 10 ** 64 */\n      lt\n        /* \"contracts/MyNFT/Math.sol\":13143:13249  if (value >= 10 ** 64) {... */\n      tag_287\n      jumpi\n        /* \"contracts/MyNFT/Math.sol\":13194:13202  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contracts/MyNFT/Math.sol\":13185:13202  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_288\n      jumpi\n      tag_289\n      tag_264\n      jump\t// in\n    tag_289:\n    tag_288:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13231:13233  64 */\n      0x40\n        /* \"contracts/MyNFT/Math.sol\":13221:13233  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13143:13249  if (value >= 10 ** 64) {... */\n    tag_287:\n        /* \"contracts/MyNFT/Math.sol\":13276:13284  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/MyNFT/Math.sol\":13267:13272  value */\n      dup4\n        /* \"contracts/MyNFT/Math.sol\":13267:13284  value >= 10 ** 32 */\n      lt\n        /* \"contracts/MyNFT/Math.sol\":13263:13369  if (value >= 10 ** 32) {... */\n      tag_290\n      jumpi\n        /* \"contracts/MyNFT/Math.sol\":13314:13322  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/MyNFT/Math.sol\":13305:13322  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_291\n      jumpi\n      tag_292\n      tag_264\n      jump\t// in\n    tag_292:\n    tag_291:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13351:13353  32 */\n      0x20\n        /* \"contracts/MyNFT/Math.sol\":13341:13353  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13263:13369  if (value >= 10 ** 32) {... */\n    tag_290:\n        /* \"contracts/MyNFT/Math.sol\":13396:13404  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contracts/MyNFT/Math.sol\":13387:13392  value */\n      dup4\n        /* \"contracts/MyNFT/Math.sol\":13387:13404  value >= 10 ** 16 */\n      lt\n        /* \"contracts/MyNFT/Math.sol\":13383:13489  if (value >= 10 ** 16) {... */\n      tag_293\n      jumpi\n        /* \"contracts/MyNFT/Math.sol\":13434:13442  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contracts/MyNFT/Math.sol\":13425:13442  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_294\n      jumpi\n      tag_295\n      tag_264\n      jump\t// in\n    tag_295:\n    tag_294:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13471:13473  16 */\n      0x10\n        /* \"contracts/MyNFT/Math.sol\":13461:13473  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13383:13489  if (value >= 10 ** 16) {... */\n    tag_293:\n        /* \"contracts/MyNFT/Math.sol\":13516:13523  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/MyNFT/Math.sol\":13507:13512  value */\n      dup4\n        /* \"contracts/MyNFT/Math.sol\":13507:13523  value >= 10 ** 8 */\n      lt\n        /* \"contracts/MyNFT/Math.sol\":13503:13606  if (value >= 10 ** 8) {... */\n      tag_296\n      jumpi\n        /* \"contracts/MyNFT/Math.sol\":13553:13560  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/MyNFT/Math.sol\":13544:13560  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_297\n      jumpi\n      tag_298\n      tag_264\n      jump\t// in\n    tag_298:\n    tag_297:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13589:13590  8 */\n      0x08\n        /* \"contracts/MyNFT/Math.sol\":13579:13590  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13503:13606  if (value >= 10 ** 8) {... */\n    tag_296:\n        /* \"contracts/MyNFT/Math.sol\":13633:13640  10 ** 4 */\n      0x2710\n        /* \"contracts/MyNFT/Math.sol\":13624:13629  value */\n      dup4\n        /* \"contracts/MyNFT/Math.sol\":13624:13640  value >= 10 ** 4 */\n      lt\n        /* \"contracts/MyNFT/Math.sol\":13620:13723  if (value >= 10 ** 4) {... */\n      tag_299\n      jumpi\n        /* \"contracts/MyNFT/Math.sol\":13670:13677  10 ** 4 */\n      0x2710\n        /* \"contracts/MyNFT/Math.sol\":13661:13677  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_300\n      jumpi\n      tag_301\n      tag_264\n      jump\t// in\n    tag_301:\n    tag_300:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13706:13707  4 */\n      0x04\n        /* \"contracts/MyNFT/Math.sol\":13696:13707  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13620:13723  if (value >= 10 ** 4) {... */\n    tag_299:\n        /* \"contracts/MyNFT/Math.sol\":13750:13757  10 ** 2 */\n      0x64\n        /* \"contracts/MyNFT/Math.sol\":13741:13746  value */\n      dup4\n        /* \"contracts/MyNFT/Math.sol\":13741:13757  value >= 10 ** 2 */\n      lt\n        /* \"contracts/MyNFT/Math.sol\":13737:13840  if (value >= 10 ** 2) {... */\n      tag_302\n      jumpi\n        /* \"contracts/MyNFT/Math.sol\":13787:13794  10 ** 2 */\n      0x64\n        /* \"contracts/MyNFT/Math.sol\":13778:13794  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_303\n      jumpi\n      tag_304\n      tag_264\n      jump\t// in\n    tag_304:\n    tag_303:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13823:13824  2 */\n      0x02\n        /* \"contracts/MyNFT/Math.sol\":13813:13824  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13737:13840  if (value >= 10 ** 2) {... */\n    tag_302:\n        /* \"contracts/MyNFT/Math.sol\":13867:13874  10 ** 1 */\n      0x0a\n        /* \"contracts/MyNFT/Math.sol\":13858:13863  value */\n      dup4\n        /* \"contracts/MyNFT/Math.sol\":13858:13874  value >= 10 ** 1 */\n      lt\n        /* \"contracts/MyNFT/Math.sol\":13854:13922  if (value >= 10 ** 1) {... */\n      tag_305\n      jumpi\n        /* \"contracts/MyNFT/Math.sol\":13905:13906  1 */\n      0x01\n        /* \"contracts/MyNFT/Math.sol\":13895:13906  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13854:13922  if (value >= 10 ** 1) {... */\n    tag_305:\n        /* \"contracts/MyNFT/Math.sol\":13950:13956  result */\n      dup1\n        /* \"contracts/MyNFT/Math.sol\":13943:13956  return result */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT/Math.sol\":13016:13964  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC165.sol\":786:934  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_270:\n        /* \"contracts/MyNFT/ERC165.sol\":862:866  bool */\n      0x00\n        /* \"contracts/MyNFT/ERC165.sol\":901:926  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/MyNFT/ERC165.sol\":886:926  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/MyNFT/ERC165.sol\":886:897  interfaceId */\n      dup3\n        /* \"contracts/MyNFT/ERC165.sol\":886:926  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/MyNFT/ERC165.sol\":879:926  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/MyNFT/ERC165.sol\":786:934  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT/ERC721.sol\":8458:8533  function test1() public virtual {... */\n    tag_285:\n        /* \"contracts/MyNFT/ERC721.sol\":8506:8525  Log(\"ERC721.test1\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      tag_308\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyNFT/ERC721.sol\":8458:8533  function test1() public virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_310:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_311:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_312:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_313:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_314:\n        /* \"#utility.yul\":561:584   */\n      tag_363\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_313\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_364:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_315:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_366\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_314\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_30:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_369\n      tag_311\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":833:952   */\n    tag_368:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_370\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_315\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_316:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_317:\n        /* \"#utility.yul\":1268:1289   */\n      tag_373\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_316\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_33:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_375\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_317\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_318:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_319:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_320:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_379:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_379)\n    tag_381:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_321:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_322:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_384\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_318\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2329:2400   */\n      tag_385\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_319\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_386\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_320\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2499:2528   */\n      tag_387\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_321\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_37:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_389\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_322\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_323:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_324:\n        /* \"#utility.yul\":3016:3040   */\n      tag_392\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_323\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_393:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_325:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_395\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_324\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_40:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_398\n      tag_311\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3292:3411   */\n    tag_397:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_399\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_325\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_326:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_327:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_402\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_326\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_328:\n        /* \"#utility.yul\":3872:3896   */\n      tag_404\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_327\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_43:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_406\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_328\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_329:\n        /* \"#utility.yul\":4210:4234   */\n      tag_408\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_327\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_409:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_330:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_411\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_329\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_46:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_414\n      tag_311\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4503:4622   */\n    tag_413:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_415\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_330\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_416\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_325\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_331:\n        /* \"#utility.yul\":4977:5001   */\n      tag_418\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_323\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_51:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_420\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_331\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_54:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_423\n      tag_311\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5352:5471   */\n    tag_422:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_424\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_330\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_425\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_330\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_426\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_325\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_81:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_429\n      tag_311\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5943:6062   */\n    tag_428:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_430\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_330\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_332:\n        /* \"#utility.yul\":6272:6293   */\n      tag_432\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_316\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_433:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_333:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_435\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_332\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_94:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_438\n      tag_311\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6553:6672   */\n    tag_437:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_439\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_330\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_440\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_333\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_334:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_335:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_258:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_336:\n        /* \"#utility.yul\":7452:7479   */\n      tag_445\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_321\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_447\n      tag_258\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7525:7613   */\n    tag_446:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_337:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_449\n      tag_310\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_450\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_336\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_338:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_453\n      tag_258\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":7928:7984   */\n    tag_452:\n        /* \"#utility.yul\":8002:8031   */\n      tag_454\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_321\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_339:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_340:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_457\n        /* \"#utility.yul\":8374:8422   */\n      tag_458\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_338\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8358:8423   */\n      tag_337\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_460\n      tag_335\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8498:8610   */\n    tag_459:\n        /* \"#utility.yul\":8619:8673   */\n      tag_461\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_339\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_341:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_464\n      tag_334\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8769:8891   */\n    tag_463:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_465\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_340\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_98:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_468\n      tag_311\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9178:9298   */\n    tag_467:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_469\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_330\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_470\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_330\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_471\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_325\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_473\n      tag_312\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9765:9882   */\n    tag_472:\n        /* \"#utility.yul\":9906:9968   */\n      tag_474\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_341\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_106:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_477\n      tag_311\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":10084:10203   */\n    tag_476:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_478\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_330\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_479\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_330\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_342:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_117:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_482:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_484\n      tag_342\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":10887:10971   */\n    tag_483:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11315   */\n    tag_143:\n        /* \"#utility.yul\":11104:11108   */\n      0x00\n        /* \"#utility.yul\":11142:11144   */\n      0x40\n        /* \"#utility.yul\":11131:11140   */\n      dup3\n        /* \"#utility.yul\":11127:11145   */\n      add\n        /* \"#utility.yul\":11119:11145   */\n      swap1\n      pop\n        /* \"#utility.yul\":11155:11226   */\n      tag_486\n        /* \"#utility.yul\":11223:11224   */\n      0x00\n        /* \"#utility.yul\":11212:11221   */\n      dup4\n        /* \"#utility.yul\":11208:11225   */\n      add\n        /* \"#utility.yul\":11199:11205   */\n      dup6\n        /* \"#utility.yul\":11155:11226   */\n      tag_328\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11236:11308   */\n      tag_487\n        /* \"#utility.yul\":11304:11306   */\n      0x20\n        /* \"#utility.yul\":11293:11302   */\n      dup4\n        /* \"#utility.yul\":11289:11307   */\n      add\n        /* \"#utility.yul\":11280:11286   */\n      dup5\n        /* \"#utility.yul\":11236:11308   */\n      tag_331\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":10983:11315   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11321:11501   */\n    tag_155:\n        /* \"#utility.yul\":11369:11446   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11366:11367   */\n      0x00\n        /* \"#utility.yul\":11359:11447   */\n      mstore\n        /* \"#utility.yul\":11466:11470   */\n      0x32\n        /* \"#utility.yul\":11463:11464   */\n      0x04\n        /* \"#utility.yul\":11456:11471   */\n      mstore\n        /* \"#utility.yul\":11490:11494   */\n      0x24\n        /* \"#utility.yul\":11487:11488   */\n      0x00\n        /* \"#utility.yul\":11480:11495   */\n      revert\n        /* \"#utility.yul\":11507:11674   */\n    tag_343:\n        /* \"#utility.yul\":11647:11666   */\n      0x43726564697454696765722e7465737431000000000000000000000000000000\n        /* \"#utility.yul\":11643:11644   */\n      0x00\n        /* \"#utility.yul\":11635:11641   */\n      dup3\n        /* \"#utility.yul\":11631:11645   */\n      add\n        /* \"#utility.yul\":11624:11667   */\n      mstore\n        /* \"#utility.yul\":11507:11674   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11680:12046   */\n    tag_344:\n        /* \"#utility.yul\":11822:11825   */\n      0x00\n        /* \"#utility.yul\":11843:11910   */\n      tag_491\n        /* \"#utility.yul\":11907:11909   */\n      0x11\n        /* \"#utility.yul\":11902:11905   */\n      dup4\n        /* \"#utility.yul\":11843:11910   */\n      tag_319\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":11836:11910   */\n      swap2\n      pop\n        /* \"#utility.yul\":11919:12012   */\n      tag_492\n        /* \"#utility.yul\":12008:12011   */\n      dup3\n        /* \"#utility.yul\":11919:12012   */\n      tag_343\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12037:12039   */\n      0x20\n        /* \"#utility.yul\":12032:12035   */\n      dup3\n        /* \"#utility.yul\":12028:12040   */\n      add\n        /* \"#utility.yul\":12021:12040   */\n      swap1\n      pop\n        /* \"#utility.yul\":11680:12046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12052:12471   */\n    tag_162:\n        /* \"#utility.yul\":12218:12222   */\n      0x00\n        /* \"#utility.yul\":12256:12258   */\n      0x20\n        /* \"#utility.yul\":12245:12254   */\n      dup3\n        /* \"#utility.yul\":12241:12259   */\n      add\n        /* \"#utility.yul\":12233:12259   */\n      swap1\n      pop\n        /* \"#utility.yul\":12305:12314   */\n      dup2\n        /* \"#utility.yul\":12299:12303   */\n      dup2\n        /* \"#utility.yul\":12295:12315   */\n      sub\n        /* \"#utility.yul\":12291:12292   */\n      0x00\n        /* \"#utility.yul\":12280:12289   */\n      dup4\n        /* \"#utility.yul\":12276:12293   */\n      add\n        /* \"#utility.yul\":12269:12316   */\n      mstore\n        /* \"#utility.yul\":12333:12464   */\n      tag_494\n        /* \"#utility.yul\":12459:12463   */\n      dup2\n        /* \"#utility.yul\":12333:12464   */\n      tag_344\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":12325:12464   */\n      swap1\n      pop\n        /* \"#utility.yul\":12052:12471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12477:12625   */\n    tag_345:\n        /* \"#utility.yul\":12579:12590   */\n      0x00\n        /* \"#utility.yul\":12616:12619   */\n      dup2\n        /* \"#utility.yul\":12601:12619   */\n      swap1\n      pop\n        /* \"#utility.yul\":12477:12625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12631:13021   */\n    tag_346:\n        /* \"#utility.yul\":12737:12740   */\n      0x00\n        /* \"#utility.yul\":12765:12804   */\n      tag_497\n        /* \"#utility.yul\":12798:12803   */\n      dup3\n        /* \"#utility.yul\":12765:12804   */\n      tag_318\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":12820:12909   */\n      tag_498\n        /* \"#utility.yul\":12902:12908   */\n      dup2\n        /* \"#utility.yul\":12897:12900   */\n      dup6\n        /* \"#utility.yul\":12820:12909   */\n      tag_345\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":12813:12909   */\n      swap4\n      pop\n        /* \"#utility.yul\":12918:12983   */\n      tag_499\n        /* \"#utility.yul\":12976:12982   */\n      dup2\n        /* \"#utility.yul\":12971:12974   */\n      dup6\n        /* \"#utility.yul\":12964:12968   */\n      0x20\n        /* \"#utility.yul\":12957:12962   */\n      dup7\n        /* \"#utility.yul\":12953:12969   */\n      add\n        /* \"#utility.yul\":12918:12983   */\n      tag_320\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13008:13014   */\n      dup1\n        /* \"#utility.yul\":13003:13006   */\n      dup5\n        /* \"#utility.yul\":12999:13015   */\n      add\n        /* \"#utility.yul\":12992:13015   */\n      swap2\n      pop\n        /* \"#utility.yul\":12741:13021   */\n      pop\n        /* \"#utility.yul\":12631:13021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13027:13462   */\n    tag_197:\n        /* \"#utility.yul\":13207:13210   */\n      0x00\n        /* \"#utility.yul\":13229:13324   */\n      tag_501\n        /* \"#utility.yul\":13320:13323   */\n      dup3\n        /* \"#utility.yul\":13311:13317   */\n      dup6\n        /* \"#utility.yul\":13229:13324   */\n      tag_346\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":13222:13324   */\n      swap2\n      pop\n        /* \"#utility.yul\":13341:13436   */\n      tag_502\n        /* \"#utility.yul\":13432:13435   */\n      dup3\n        /* \"#utility.yul\":13423:13429   */\n      dup5\n        /* \"#utility.yul\":13341:13436   */\n      tag_346\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13334:13436   */\n      swap2\n      pop\n        /* \"#utility.yul\":13453:13456   */\n      dup2\n        /* \"#utility.yul\":13446:13456   */\n      swap1\n      pop\n        /* \"#utility.yul\":13027:13462   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13468:13638   */\n    tag_347:\n        /* \"#utility.yul\":13608:13630   */\n      0x4552433732315061757361626c652e7465737431000000000000000000000000\n        /* \"#utility.yul\":13604:13605   */\n      0x00\n        /* \"#utility.yul\":13596:13602   */\n      dup3\n        /* \"#utility.yul\":13592:13606   */\n      add\n        /* \"#utility.yul\":13585:13631   */\n      mstore\n        /* \"#utility.yul\":13468:13638   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13644:14010   */\n    tag_348:\n        /* \"#utility.yul\":13786:13789   */\n      0x00\n        /* \"#utility.yul\":13807:13874   */\n      tag_505\n        /* \"#utility.yul\":13871:13873   */\n      0x14\n        /* \"#utility.yul\":13866:13869   */\n      dup4\n        /* \"#utility.yul\":13807:13874   */\n      tag_319\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":13800:13874   */\n      swap2\n      pop\n        /* \"#utility.yul\":13883:13976   */\n      tag_506\n        /* \"#utility.yul\":13972:13975   */\n      dup3\n        /* \"#utility.yul\":13883:13976   */\n      tag_347\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14001:14003   */\n      0x20\n        /* \"#utility.yul\":13996:13999   */\n      dup3\n        /* \"#utility.yul\":13992:14004   */\n      add\n        /* \"#utility.yul\":13985:14004   */\n      swap1\n      pop\n        /* \"#utility.yul\":13644:14010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14016:14435   */\n    tag_221:\n        /* \"#utility.yul\":14182:14186   */\n      0x00\n        /* \"#utility.yul\":14220:14222   */\n      0x20\n        /* \"#utility.yul\":14209:14218   */\n      dup3\n        /* \"#utility.yul\":14205:14223   */\n      add\n        /* \"#utility.yul\":14197:14223   */\n      swap1\n      pop\n        /* \"#utility.yul\":14269:14278   */\n      dup2\n        /* \"#utility.yul\":14263:14267   */\n      dup2\n        /* \"#utility.yul\":14259:14279   */\n      sub\n        /* \"#utility.yul\":14255:14256   */\n      0x00\n        /* \"#utility.yul\":14244:14253   */\n      dup4\n        /* \"#utility.yul\":14240:14257   */\n      add\n        /* \"#utility.yul\":14233:14280   */\n      mstore\n        /* \"#utility.yul\":14297:14428   */\n      tag_508\n        /* \"#utility.yul\":14423:14427   */\n      dup2\n        /* \"#utility.yul\":14297:14428   */\n      tag_348\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14289:14428   */\n      swap1\n      pop\n        /* \"#utility.yul\":14016:14435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14441:14539   */\n    tag_349:\n        /* \"#utility.yul\":14492:14498   */\n      0x00\n        /* \"#utility.yul\":14526:14531   */\n      dup2\n        /* \"#utility.yul\":14520:14532   */\n      mload\n        /* \"#utility.yul\":14510:14532   */\n      swap1\n      pop\n        /* \"#utility.yul\":14441:14539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14545:14713   */\n    tag_350:\n        /* \"#utility.yul\":14628:14639   */\n      0x00\n        /* \"#utility.yul\":14662:14668   */\n      dup3\n        /* \"#utility.yul\":14657:14660   */\n      dup3\n        /* \"#utility.yul\":14650:14669   */\n      mstore\n        /* \"#utility.yul\":14702:14706   */\n      0x20\n        /* \"#utility.yul\":14697:14700   */\n      dup3\n        /* \"#utility.yul\":14693:14707   */\n      add\n        /* \"#utility.yul\":14678:14707   */\n      swap1\n      pop\n        /* \"#utility.yul\":14545:14713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14719:15092   */\n    tag_351:\n        /* \"#utility.yul\":14805:14808   */\n      0x00\n        /* \"#utility.yul\":14833:14871   */\n      tag_512\n        /* \"#utility.yul\":14865:14870   */\n      dup3\n        /* \"#utility.yul\":14833:14871   */\n      tag_349\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14887:14957   */\n      tag_513\n        /* \"#utility.yul\":14950:14956   */\n      dup2\n        /* \"#utility.yul\":14945:14948   */\n      dup6\n        /* \"#utility.yul\":14887:14957   */\n      tag_350\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":14880:14957   */\n      swap4\n      pop\n        /* \"#utility.yul\":14966:15031   */\n      tag_514\n        /* \"#utility.yul\":15024:15030   */\n      dup2\n        /* \"#utility.yul\":15019:15022   */\n      dup6\n        /* \"#utility.yul\":15012:15016   */\n      0x20\n        /* \"#utility.yul\":15005:15010   */\n      dup7\n        /* \"#utility.yul\":15001:15017   */\n      add\n        /* \"#utility.yul\":14966:15031   */\n      tag_320\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":15056:15085   */\n      tag_515\n        /* \"#utility.yul\":15078:15084   */\n      dup2\n        /* \"#utility.yul\":15056:15085   */\n      tag_321\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":15051:15054   */\n      dup5\n        /* \"#utility.yul\":15047:15086   */\n      add\n        /* \"#utility.yul\":15040:15086   */\n      swap2\n      pop\n        /* \"#utility.yul\":14809:15092   */\n      pop\n        /* \"#utility.yul\":14719:15092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15098:15738   */\n    tag_238:\n        /* \"#utility.yul\":15293:15297   */\n      0x00\n        /* \"#utility.yul\":15331:15334   */\n      0x80\n        /* \"#utility.yul\":15320:15329   */\n      dup3\n        /* \"#utility.yul\":15316:15335   */\n      add\n        /* \"#utility.yul\":15308:15335   */\n      swap1\n      pop\n        /* \"#utility.yul\":15345:15416   */\n      tag_517\n        /* \"#utility.yul\":15413:15414   */\n      0x00\n        /* \"#utility.yul\":15402:15411   */\n      dup4\n        /* \"#utility.yul\":15398:15415   */\n      add\n        /* \"#utility.yul\":15389:15395   */\n      dup8\n        /* \"#utility.yul\":15345:15416   */\n      tag_328\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15426:15498   */\n      tag_518\n        /* \"#utility.yul\":15494:15496   */\n      0x20\n        /* \"#utility.yul\":15483:15492   */\n      dup4\n        /* \"#utility.yul\":15479:15497   */\n      add\n        /* \"#utility.yul\":15470:15476   */\n      dup7\n        /* \"#utility.yul\":15426:15498   */\n      tag_328\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15508:15580   */\n      tag_519\n        /* \"#utility.yul\":15576:15578   */\n      0x40\n        /* \"#utility.yul\":15565:15574   */\n      dup4\n        /* \"#utility.yul\":15561:15579   */\n      add\n        /* \"#utility.yul\":15552:15558   */\n      dup6\n        /* \"#utility.yul\":15508:15580   */\n      tag_331\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":15627:15636   */\n      dup2\n        /* \"#utility.yul\":15621:15625   */\n      dup2\n        /* \"#utility.yul\":15617:15637   */\n      sub\n        /* \"#utility.yul\":15612:15614   */\n      0x60\n        /* \"#utility.yul\":15601:15610   */\n      dup4\n        /* \"#utility.yul\":15597:15615   */\n      add\n        /* \"#utility.yul\":15590:15638   */\n      mstore\n        /* \"#utility.yul\":15655:15731   */\n      tag_520\n        /* \"#utility.yul\":15726:15730   */\n      dup2\n        /* \"#utility.yul\":15717:15723   */\n      dup5\n        /* \"#utility.yul\":15655:15731   */\n      tag_351\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15647:15731   */\n      swap1\n      pop\n        /* \"#utility.yul\":15098:15738   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15744:15885   */\n    tag_352:\n        /* \"#utility.yul\":15800:15805   */\n      0x00\n        /* \"#utility.yul\":15831:15837   */\n      dup2\n        /* \"#utility.yul\":15825:15838   */\n      mload\n        /* \"#utility.yul\":15816:15838   */\n      swap1\n      pop\n        /* \"#utility.yul\":15847:15879   */\n      tag_522\n        /* \"#utility.yul\":15873:15878   */\n      dup2\n        /* \"#utility.yul\":15847:15879   */\n      tag_314\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":15744:15885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15891:16240   */\n    tag_241:\n        /* \"#utility.yul\":15960:15966   */\n      0x00\n        /* \"#utility.yul\":16009:16011   */\n      0x20\n        /* \"#utility.yul\":15997:16006   */\n      dup3\n        /* \"#utility.yul\":15988:15995   */\n      dup5\n        /* \"#utility.yul\":15984:16007   */\n      sub\n        /* \"#utility.yul\":15980:16012   */\n      slt\n        /* \"#utility.yul\":15977:16096   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":16015:16094   */\n      tag_525\n      tag_311\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15977:16096   */\n    tag_524:\n        /* \"#utility.yul\":16135:16136   */\n      0x00\n        /* \"#utility.yul\":16160:16223   */\n      tag_526\n        /* \"#utility.yul\":16215:16222   */\n      dup5\n        /* \"#utility.yul\":16206:16212   */\n      dup3\n        /* \"#utility.yul\":16195:16204   */\n      dup6\n        /* \"#utility.yul\":16191:16213   */\n      add\n        /* \"#utility.yul\":16160:16223   */\n      tag_352\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":16150:16223   */\n      swap2\n      pop\n        /* \"#utility.yul\":16106:16233   */\n      pop\n        /* \"#utility.yul\":15891:16240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16246:16426   */\n    tag_264:\n        /* \"#utility.yul\":16294:16371   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16291:16292   */\n      0x00\n        /* \"#utility.yul\":16284:16372   */\n      mstore\n        /* \"#utility.yul\":16391:16395   */\n      0x12\n        /* \"#utility.yul\":16388:16389   */\n      0x04\n        /* \"#utility.yul\":16381:16396   */\n      mstore\n        /* \"#utility.yul\":16415:16419   */\n      0x24\n        /* \"#utility.yul\":16412:16413   */\n      0x00\n        /* \"#utility.yul\":16405:16420   */\n      revert\n        /* \"#utility.yul\":16432:16604   */\n    tag_353:\n        /* \"#utility.yul\":16572:16596   */\n      0x455243373231456e756d657261626c652e746573743100000000000000000000\n        /* \"#utility.yul\":16568:16569   */\n      0x00\n        /* \"#utility.yul\":16560:16566   */\n      dup3\n        /* \"#utility.yul\":16556:16570   */\n      add\n        /* \"#utility.yul\":16549:16597   */\n      mstore\n        /* \"#utility.yul\":16432:16604   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16610:16976   */\n    tag_354:\n        /* \"#utility.yul\":16752:16755   */\n      0x00\n        /* \"#utility.yul\":16773:16840   */\n      tag_530\n        /* \"#utility.yul\":16837:16839   */\n      0x16\n        /* \"#utility.yul\":16832:16835   */\n      dup4\n        /* \"#utility.yul\":16773:16840   */\n      tag_319\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16766:16840   */\n      swap2\n      pop\n        /* \"#utility.yul\":16849:16942   */\n      tag_531\n        /* \"#utility.yul\":16938:16941   */\n      dup3\n        /* \"#utility.yul\":16849:16942   */\n      tag_353\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16967:16969   */\n      0x20\n        /* \"#utility.yul\":16962:16965   */\n      dup3\n        /* \"#utility.yul\":16958:16970   */\n      add\n        /* \"#utility.yul\":16951:16970   */\n      swap1\n      pop\n        /* \"#utility.yul\":16610:16976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16982:17401   */\n    tag_283:\n        /* \"#utility.yul\":17148:17152   */\n      0x00\n        /* \"#utility.yul\":17186:17188   */\n      0x20\n        /* \"#utility.yul\":17175:17184   */\n      dup3\n        /* \"#utility.yul\":17171:17189   */\n      add\n        /* \"#utility.yul\":17163:17189   */\n      swap1\n      pop\n        /* \"#utility.yul\":17235:17244   */\n      dup2\n        /* \"#utility.yul\":17229:17233   */\n      dup2\n        /* \"#utility.yul\":17225:17245   */\n      sub\n        /* \"#utility.yul\":17221:17222   */\n      0x00\n        /* \"#utility.yul\":17210:17219   */\n      dup4\n        /* \"#utility.yul\":17206:17223   */\n      add\n        /* \"#utility.yul\":17199:17246   */\n      mstore\n        /* \"#utility.yul\":17263:17394   */\n      tag_533\n        /* \"#utility.yul\":17389:17393   */\n      dup2\n        /* \"#utility.yul\":17263:17394   */\n      tag_354\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":17255:17394   */\n      swap1\n      pop\n        /* \"#utility.yul\":16982:17401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17407:17569   */\n    tag_355:\n        /* \"#utility.yul\":17547:17561   */\n      0x4552433732312e74657374310000000000000000000000000000000000000000\n        /* \"#utility.yul\":17543:17544   */\n      0x00\n        /* \"#utility.yul\":17535:17541   */\n      dup3\n        /* \"#utility.yul\":17531:17545   */\n      add\n        /* \"#utility.yul\":17524:17562   */\n      mstore\n        /* \"#utility.yul\":17407:17569   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17575:17941   */\n    tag_356:\n        /* \"#utility.yul\":17717:17720   */\n      0x00\n        /* \"#utility.yul\":17738:17805   */\n      tag_536\n        /* \"#utility.yul\":17802:17804   */\n      0x0c\n        /* \"#utility.yul\":17797:17800   */\n      dup4\n        /* \"#utility.yul\":17738:17805   */\n      tag_319\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":17731:17805   */\n      swap2\n      pop\n        /* \"#utility.yul\":17814:17907   */\n      tag_537\n        /* \"#utility.yul\":17903:17906   */\n      dup3\n        /* \"#utility.yul\":17814:17907   */\n      tag_355\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":17932:17934   */\n      0x20\n        /* \"#utility.yul\":17927:17930   */\n      dup3\n        /* \"#utility.yul\":17923:17935   */\n      add\n        /* \"#utility.yul\":17916:17935   */\n      swap1\n      pop\n        /* \"#utility.yul\":17575:17941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17947:18366   */\n    tag_309:\n        /* \"#utility.yul\":18113:18117   */\n      0x00\n        /* \"#utility.yul\":18151:18153   */\n      0x20\n        /* \"#utility.yul\":18140:18149   */\n      dup3\n        /* \"#utility.yul\":18136:18154   */\n      add\n        /* \"#utility.yul\":18128:18154   */\n      swap1\n      pop\n        /* \"#utility.yul\":18200:18209   */\n      dup2\n        /* \"#utility.yul\":18194:18198   */\n      dup2\n        /* \"#utility.yul\":18190:18210   */\n      sub\n        /* \"#utility.yul\":18186:18187   */\n      0x00\n        /* \"#utility.yul\":18175:18184   */\n      dup4\n        /* \"#utility.yul\":18171:18188   */\n      add\n        /* \"#utility.yul\":18164:18211   */\n      mstore\n        /* \"#utility.yul\":18228:18359   */\n      tag_539\n        /* \"#utility.yul\":18354:18358   */\n      dup2\n        /* \"#utility.yul\":18228:18359   */\n      tag_356\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":18220:18359   */\n      swap1\n      pop\n        /* \"#utility.yul\":17947:18366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122075f0a60c55f958137f151ebff34c1a89ccb5e398a8137c821f74c92b638bdb6664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_119": {
									"entryPoint": null,
									"id": 119,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2775": {
									"entryPoint": null,
									"id": 2775,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2906": {
									"entryPoint": null,
									"id": 2906,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3017": {
									"entryPoint": null,
									"id": 3017,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_2871": {
									"entryPoint": 366,
									"id": 2871,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6778:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:17",
														"type": ""
													}
												],
												"src": "334:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:17",
														"type": ""
													}
												],
												"src": "466:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:17"
															},
															"nodeType": "YulIf",
															"src": "621:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:17",
														"type": ""
													}
												],
												"src": "568:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:17"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:17",
														"type": ""
													}
												],
												"src": "696:143:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:17"
															},
															"nodeType": "YulIf",
															"src": "932:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:17",
														"type": ""
													}
												],
												"src": "845:351:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1272:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:17",
														"type": ""
													}
												],
												"src": "1202:99:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:269:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:51:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1862:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:26:17"
															},
															"nodeType": "YulIf",
															"src": "1818:81:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1951:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:38:17"
															},
															"nodeType": "YulIf",
															"src": "1909:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1714:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1723:6:17",
														"type": ""
													}
												],
												"src": "1679:320:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2069:11:17",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2077:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:14:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2046:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2054:4:17",
														"type": ""
													}
												],
												"src": "2005:141:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:49:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:17",
														"type": ""
													}
												],
												"src": "2152:93:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2304:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2314:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:17"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2279:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2285:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2295:8:17",
														"type": ""
													}
												],
												"src": "2251:107:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2440:317:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2612:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2672:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2711:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:17"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2401:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2408:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2420:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2433:6:17",
														"type": ""
													}
												],
												"src": "2364:393:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2808:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2818:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2829:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2790:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2800:7:17",
														"type": ""
													}
												],
												"src": "2763:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:28:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2888:12:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2874:3:17",
														"type": ""
													}
												],
												"src": "2846:60:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:82:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2952:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2962:9:17",
														"type": ""
													}
												],
												"src": "2912:142:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3107:28:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3117:12:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3124:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3103:3:17",
														"type": ""
													}
												],
												"src": "3060:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:193:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:105:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3194:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3200:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3208:7:17",
														"type": ""
													}
												],
												"src": "3141:269:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:24:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:8:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3482:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3461:3:17",
														"type": ""
													}
												],
												"src": "3416:73:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:136:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3534:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3540:6:17",
														"type": ""
													}
												],
												"src": "3495:189:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:136:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3807:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:14:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3772:26:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3774:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3754:2:17",
																"statements": []
															},
															"src": "3750:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3728:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3735:3:17",
														"type": ""
													}
												],
												"src": "3690:186:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:464:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:431:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4288:27:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4290:23:17",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:17"
																		},
																		"nodeType": "YulIf",
																		"src": "4266:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:11:17"
															},
															"nodeType": "YulIf",
															"src": "3972:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3937:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3944:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3949:10:17",
														"type": ""
													}
												],
												"src": "3882:543:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:17"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4469:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4475:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4485:8:17",
														"type": ""
													}
												],
												"src": "4431:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:118:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:17"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4582:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4588:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4598:6:17",
														"type": ""
													}
												],
												"src": "4554:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:214:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4942:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:17"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4790:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4796:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4804:4:17",
														"type": ""
													}
												],
												"src": "4728:295:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:1303:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5267:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:30:17"
															},
															"nodeType": "YulIf",
															"src": "5233:56:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:17"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:67:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5492:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:17:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5516:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5567:611:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5764:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:17"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5841:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:17"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5882:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:17"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5742:21:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5744:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5723:3:17",
																					"statements": []
																				},
																				"src": "5719:208:17"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5963:156:17",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:17"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:17"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:17"
																				},
																				"nodeType": "YulIf",
																				"src": "5940:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:17"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5560:618:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6195:222:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6246:67:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6264:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:17"
																				},
																				"nodeType": "YulIf",
																				"src": "6236:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:17"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6187:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:14:17"
															},
															"nodeType": "YulSwitch",
															"src": "5530:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5109:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5115:3:17",
														"type": ""
													}
												],
												"src": "5028:1395:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6494:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6482:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6489:3:17",
														"type": ""
													}
												],
												"src": "6429:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6651:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6623:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6635:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6646:4:17",
														"type": ""
													}
												],
												"src": "6553:222:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200235338038062002353833981810160405281019062000036919062000296565b806040518060400160405280600c81526020017f4372656469742d546967657200000000000000000000000000000000000000008152506040518060400160405280600381526020017f4354540000000000000000000000000000000000000000000000000000000000815250815f9081620000b391906200052a565b508060019081620000c591906200052a565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013b575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200013291906200061f565b60405180910390fd5b6200014c816200016e60201b60201c565b505f600a60146101000a81548160ff021916908315150217905550506200063a565b5f600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002608262000235565b9050919050565b620002728162000254565b81146200027d575f80fd5b50565b5f81519050620002908162000267565b92915050565b5f60208284031215620002ae57620002ad62000231565b5b5f620002bd8482850162000280565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200034257607f821691505b602082108103620003585762000357620002fd565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200037f565b620003c886836200037f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620004126200040c6200040684620003e0565b620003e9565b620003e0565b9050919050565b5f819050919050565b6200042d83620003f2565b620004456200043c8262000419565b8484546200038b565b825550505050565b5f90565b6200045b6200044d565b6200046881848462000422565b505050565b5b818110156200048f57620004835f8262000451565b6001810190506200046e565b5050565b601f821115620004de57620004a8816200035e565b620004b38462000370565b81016020851015620004c3578190505b620004db620004d28562000370565b8301826200046d565b50505b505050565b5f82821c905092915050565b5f620005005f1984600802620004e3565b1980831691505092915050565b5f6200051a8383620004ef565b9150826002028217905092915050565b6200053582620002c6565b67ffffffffffffffff811115620005515762000550620002d0565b5b6200055d82546200032a565b6200056a82828562000493565b5f60209050601f831160018114620005a0575f84156200058b578287015190505b6200059785826200050d565b86555062000606565b601f198416620005b0866200035e565b5f5b82811015620005d957848901518255600182019150602085019450602081019050620005b2565b86831015620005f95784890151620005f5601f891682620004ef565b8355505b6001600288020188555050505b505050505050565b620006198162000254565b82525050565b5f602082019050620006345f8301846200060e565b92915050565b611d0b80620006485f395ff3fe608060405234801561000f575f80fd5b5060043610610140575f3560e01c80636352211e116100b657806395d89b411161007a57806395d89b4114610360578063a22cb4651461037e578063b88d4fde1461039a578063c87b56dd146103b6578063e985e9c5146103e6578063f2fde38b1461041657610140565b80636352211e146102ce5780636b59084d146102fe57806370a0823114610308578063715018a6146103385780638da5cb5b1461034257610140565b806323b872dd1161010857806323b872dd146101fc5780632f745c591461021857806342842e0e1461024857806342966c68146102645780634f6ccce7146102805780635c975abb146102b057610140565b806301ffc9a71461014457806306fdde0314610174578063081812fc14610192578063095ea7b3146101c257806318160ddd146101de575b5f80fd5b61015e60048036038101906101599190611404565b610432565b60405161016b9190611449565b60405180910390f35b61017c610443565b60405161018991906114ec565b60405180910390f35b6101ac60048036038101906101a7919061153f565b6104d2565b6040516101b991906115a9565b60405180910390f35b6101dc60048036038101906101d791906115ec565b6104ed565b005b6101e6610503565b6040516101f39190611639565b60405180910390f35b61021660048036038101906102119190611652565b61050f565b005b610232600480360381019061022d91906115ec565b61052a565b60405161023f9190611639565b60405180910390f35b610262600480360381019061025d9190611652565b6105ce565b005b61027e6004803603810190610279919061153f565b6105ed565b005b61029a6004803603810190610295919061153f565b610603565b6040516102a79190611639565b60405180910390f35b6102b8610675565b6040516102c59190611449565b60405180910390f35b6102e860048036038101906102e3919061153f565b61068b565b6040516102f591906115a9565b60405180910390f35b61030661069c565b005b610322600480360381019061031d91906116a2565b6106db565b60405161032f9190611639565b60405180910390f35b610340610721565b005b61034a610734565b60405161035791906115a9565b60405180910390f35b61036861075c565b60405161037591906114ec565b60405180910390f35b610398600480360381019061039391906116f7565b6107ec565b005b6103b460048036038101906103af9190611861565b610802565b005b6103d060048036038101906103cb919061153f565b61081f565b6040516103dd91906114ec565b60405180910390f35b61040060048036038101906103fb91906118e1565b610885565b60405161040d9190611449565b60405180910390f35b610430600480360381019061042b91906116a2565b610913565b005b5f61043c82610997565b9050919050565b60605f80546104519061194c565b80601f016020809104026020016040519081016040528092919081815260200182805461047d9061194c565b80156104c85780601f1061049f576101008083540402835291602001916104c8565b820191905f5260205f20905b8154815290600101906020018083116104ab57829003601f168201915b5050505050905090565b5f6104dc82610a10565b506104e682610a26565b9050919050565b6104ff82826104fa610a5f565b610a66565b5050565b5f600880549050905090565b5f610522838361051d610a5f565b610a78565b905050505050565b5f610534836106db565b82106105795782826040517fa57d13dc00000000000000000000000000000000000000000000000000000000815260040161057092919061197c565b60405180910390fd5b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2054905092915050565b6105e883838360405180602001604052805f815250610802565b505050565b6105ff5f826105fa610a5f565b610a78565b5050565b5f61060c610503565b8210610651575f826040517fa57d13dc00000000000000000000000000000000000000000000000000000000815260040161064892919061197c565b60405180910390fd5b60088281548110610665576106646119a3565b5b905f5260205f2001549050919050565b5f600a60149054906101000a900460ff16905090565b5f61069582610a10565b9050919050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516106c990611a1a565b60405180910390a16106d9610a80565b565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610729610abf565b6107325f610b46565b565b5f600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461076b9061194c565b80601f01602080910402602001604051908101604052809291908181526020018280546107979061194c565b80156107e25780601f106107b9576101008083540402835291602001916107e2565b820191905f5260205f20905b8154815290600101906020018083116107c557829003601f168201915b5050505050905090565b6107fe6107f7610a5f565b8383610c09565b5050565b61080d84848461050f565b61081984848484610d02565b50505050565b606061082a82610a10565b505f610834610df6565b90505f8151116108525760405180602001604052805f81525061087d565b8061085c84610e0c565b60405160200161086d929190611a72565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b61091b610abf565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361098b575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161098291906115a9565b60405180910390fd5b61099481610b46565b50565b5f7f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a095750610a0882610ed6565b5b9050919050565b5f80610a1b83610fb7565b905080915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610a738383836001610ff0565b505050565b5f9392505050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610aad90611adf565b60405180910390a1610abd61116e565b565b610ac7610a5f565b73ffffffffffffffffffffffffffffffffffffffff16610ae5610734565b73ffffffffffffffffffffffffffffffffffffffff1614610b4457610b08610a5f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b3b91906115a9565b60405180910390fd5b565b5f600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cf59190611449565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610df0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610d45610a5f565b8685856040518563ffffffff1660e01b8152600401610d679493929190611b4f565b6020604051808303815f875af1925050508015610da257506040513d601f19601f82011682018060405250810190610d9f9190611bad565b60015b610ded573d805f8114610dd0576040519150601f19603f3d011682016040523d82523d5f602084013e610dd5565b606091505b505f81510315610de757805181602001fd5b50610def565b505b5b50505050565b606060405180602001604052805f815250905090565b60605f6001610e1a846111ad565b0190505f8167ffffffffffffffff811115610e3857610e3761173d565b5b6040519080825280601f01601f191660200182016040528015610e6a5781602001600182028036833780820191505090505b5090505f82602001820190505b600115610ecb578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610ec057610ebf611bd8565b5b0494505f8503610e77575b819350505050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610fa057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610fb05750610faf826112fe565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061102857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611119575f61103784610a10565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110a157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156110b457506110b28184610885565b155b50811561111757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161119b90611c4f565b60405180910390a16111ab611367565b565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611209577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816111ff576111fe611bd8565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611246576d04ee2d6d415b85acef8100000000838161123c5761123b611bd8565b5b0492506020810190505b662386f26fc10000831061127557662386f26fc10000838161126b5761126a611bd8565b5b0492506010810190505b6305f5e100831061129e576305f5e100838161129457611293611bd8565b5b0492506008810190505b61271083106112c35761271083816112b9576112b8611bd8565b5b0492506004810190505b606483106112e657606483816112dc576112db611bd8565b5b0492506002810190505b600a83106112f5576001810190505b80915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161139490611cb7565b60405180910390a1565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113e3816113af565b81146113ed575f80fd5b50565b5f813590506113fe816113da565b92915050565b5f60208284031215611419576114186113a7565b5b5f611426848285016113f0565b91505092915050565b5f8115159050919050565b6114438161142f565b82525050565b5f60208201905061145c5f83018461143a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561149957808201518184015260208101905061147e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6114be82611462565b6114c8818561146c565b93506114d881856020860161147c565b6114e1816114a4565b840191505092915050565b5f6020820190508181035f83015261150481846114b4565b905092915050565b5f819050919050565b61151e8161150c565b8114611528575f80fd5b50565b5f8135905061153981611515565b92915050565b5f60208284031215611554576115536113a7565b5b5f6115618482850161152b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115938261156a565b9050919050565b6115a381611589565b82525050565b5f6020820190506115bc5f83018461159a565b92915050565b6115cb81611589565b81146115d5575f80fd5b50565b5f813590506115e6816115c2565b92915050565b5f8060408385031215611602576116016113a7565b5b5f61160f858286016115d8565b92505060206116208582860161152b565b9150509250929050565b6116338161150c565b82525050565b5f60208201905061164c5f83018461162a565b92915050565b5f805f60608486031215611669576116686113a7565b5b5f611676868287016115d8565b9350506020611687868287016115d8565b92505060406116988682870161152b565b9150509250925092565b5f602082840312156116b7576116b66113a7565b5b5f6116c4848285016115d8565b91505092915050565b6116d68161142f565b81146116e0575f80fd5b50565b5f813590506116f1816116cd565b92915050565b5f806040838503121561170d5761170c6113a7565b5b5f61171a858286016115d8565b925050602061172b858286016116e3565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611773826114a4565b810181811067ffffffffffffffff821117156117925761179161173d565b5b80604052505050565b5f6117a461139e565b90506117b0828261176a565b919050565b5f67ffffffffffffffff8211156117cf576117ce61173d565b5b6117d8826114a4565b9050602081019050919050565b828183375f83830152505050565b5f611805611800846117b5565b61179b565b90508281526020810184848401111561182157611820611739565b5b61182c8482856117e5565b509392505050565b5f82601f83011261184857611847611735565b5b81356118588482602086016117f3565b91505092915050565b5f805f8060808587031215611879576118786113a7565b5b5f611886878288016115d8565b9450506020611897878288016115d8565b93505060406118a88782880161152b565b925050606085013567ffffffffffffffff8111156118c9576118c86113ab565b5b6118d587828801611834565b91505092959194509250565b5f80604083850312156118f7576118f66113a7565b5b5f611904858286016115d8565b9250506020611915858286016115d8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061196357607f821691505b6020821081036119765761197561191f565b5b50919050565b5f60408201905061198f5f83018561159a565b61199c602083018461162a565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f43726564697454696765722e74657374310000000000000000000000000000005f82015250565b5f611a0460118361146c565b9150611a0f826119d0565b602082019050919050565b5f6020820190508181035f830152611a31816119f8565b9050919050565b5f81905092915050565b5f611a4c82611462565b611a568185611a38565b9350611a6681856020860161147c565b80840191505092915050565b5f611a7d8285611a42565b9150611a898284611a42565b91508190509392505050565b7f4552433732315061757361626c652e74657374310000000000000000000000005f82015250565b5f611ac960148361146c565b9150611ad482611a95565b602082019050919050565b5f6020820190508181035f830152611af681611abd565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f611b2182611afd565b611b2b8185611b07565b9350611b3b81856020860161147c565b611b44816114a4565b840191505092915050565b5f608082019050611b625f83018761159a565b611b6f602083018661159a565b611b7c604083018561162a565b8181036060830152611b8e8184611b17565b905095945050505050565b5f81519050611ba7816113da565b92915050565b5f60208284031215611bc257611bc16113a7565b5b5f611bcf84828501611b99565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f455243373231456e756d657261626c652e7465737431000000000000000000005f82015250565b5f611c3960168361146c565b9150611c4482611c05565b602082019050919050565b5f6020820190508181035f830152611c6681611c2d565b9050919050565b7f4552433732312e746573743100000000000000000000000000000000000000005f82015250565b5f611ca1600c8361146c565b9150611cac82611c6d565b602082019050919050565b5f6020820190508181035f830152611cce81611c95565b905091905056fea264697066735822122075f0a60c55f958137f151ebff34c1a89ccb5e398a8137c821f74c92b638bdb6664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2353 CODESIZE SUB DUP1 PUSH3 0x2353 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x296 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4372656469742D54696765720000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4354540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x52A JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x52A JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x132 SWAP2 SWAP1 PUSH3 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14C DUP2 PUSH3 0x16E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH3 0x63A JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x260 DUP3 PUSH3 0x235 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x272 DUP2 PUSH3 0x254 JUMP JUMPDEST DUP2 EQ PUSH3 0x27D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x290 DUP2 PUSH3 0x267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2AE JUMPI PUSH3 0x2AD PUSH3 0x231 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2BD DUP5 DUP3 DUP6 ADD PUSH3 0x280 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x342 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x358 JUMPI PUSH3 0x357 PUSH3 0x2FD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x3BC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x37F JUMP JUMPDEST PUSH3 0x3C8 DUP7 DUP4 PUSH3 0x37F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x412 PUSH3 0x40C PUSH3 0x406 DUP5 PUSH3 0x3E0 JUMP JUMPDEST PUSH3 0x3E9 JUMP JUMPDEST PUSH3 0x3E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x42D DUP4 PUSH3 0x3F2 JUMP JUMPDEST PUSH3 0x445 PUSH3 0x43C DUP3 PUSH3 0x419 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x38B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x45B PUSH3 0x44D JUMP JUMPDEST PUSH3 0x468 DUP2 DUP5 DUP5 PUSH3 0x422 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x48F JUMPI PUSH3 0x483 PUSH0 DUP3 PUSH3 0x451 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x46E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4DE JUMPI PUSH3 0x4A8 DUP2 PUSH3 0x35E JUMP JUMPDEST PUSH3 0x4B3 DUP5 PUSH3 0x370 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4C3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4DB PUSH3 0x4D2 DUP6 PUSH3 0x370 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x46D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x500 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4E3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x51A DUP4 DUP4 PUSH3 0x4EF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x535 DUP3 PUSH3 0x2C6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x551 JUMPI PUSH3 0x550 PUSH3 0x2D0 JUMP JUMPDEST JUMPDEST PUSH3 0x55D DUP3 SLOAD PUSH3 0x32A JUMP JUMPDEST PUSH3 0x56A DUP3 DUP3 DUP6 PUSH3 0x493 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5A0 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x58B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x597 DUP6 DUP3 PUSH3 0x50D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x606 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5B0 DUP7 PUSH3 0x35E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5D9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5B2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5F9 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5F5 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4EF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x619 DUP2 PUSH3 0x254 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x634 PUSH0 DUP4 ADD DUP5 PUSH3 0x60E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D0B DUP1 PUSH3 0x648 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x416 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x6B59084D EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x342 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2B0 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0x721 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34A PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x43C DUP3 PUSH2 0x997 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x451 SWAP1 PUSH2 0x194C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47D SWAP1 PUSH2 0x194C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4DC DUP3 PUSH2 0xA10 JUMP JUMPDEST POP PUSH2 0x4E6 DUP3 PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FF DUP3 DUP3 PUSH2 0x4FA PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x522 DUP4 DUP4 PUSH2 0x51D PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x534 DUP4 PUSH2 0x6DB JUMP JUMPDEST DUP3 LT PUSH2 0x579 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x570 SWAP3 SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x802 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FF PUSH0 DUP3 PUSH2 0x5FA PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x60C PUSH2 0x503 JUMP JUMPDEST DUP3 LT PUSH2 0x651 JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x648 SWAP3 SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x665 JUMPI PUSH2 0x664 PUSH2 0x19A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x695 DUP3 PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x6C9 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x6D9 PUSH2 0xA80 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x729 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x732 PUSH0 PUSH2 0xB46 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x76B SWAP1 PUSH2 0x194C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x797 SWAP1 PUSH2 0x194C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7FE PUSH2 0x7F7 PUSH2 0xA5F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x80D DUP5 DUP5 DUP5 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x819 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x82A DUP3 PUSH2 0xA10 JUMP JUMPDEST POP PUSH0 PUSH2 0x834 PUSH2 0xDF6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x87D JUMP JUMPDEST DUP1 PUSH2 0x85C DUP5 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x86D SWAP3 SWAP2 SWAP1 PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x91B PUSH2 0xABF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x98B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x982 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x994 DUP2 PUSH2 0xB46 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA09 JUMPI POP PUSH2 0xA08 DUP3 PUSH2 0xED6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA1B DUP4 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA73 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xAAD SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xABD PUSH2 0x116E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0xA5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAE5 PUSH2 0x734 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB44 JUMPI PUSH2 0xB08 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xDF0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xD45 PUSH2 0xA5F JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD67 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDA2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDED JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB ISZERO PUSH2 0xDE7 JUMPI DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST POP PUSH2 0xDEF JUMP JUMPDEST POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0xE1A DUP5 PUSH2 0x11AD JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE38 JUMPI PUSH2 0xE37 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE6A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xECB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0xE77 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xFA0 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xFB0 JUMPI POP PUSH2 0xFAF DUP3 PUSH2 0x12FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1028 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1119 JUMPI PUSH0 PUSH2 0x1037 DUP5 PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10A1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x10B4 JUMPI POP PUSH2 0x10B2 DUP2 DUP5 PUSH2 0x885 JUMP JUMPDEST ISZERO JUMPDEST POP DUP2 ISZERO PUSH2 0x1117 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x119B SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x11AB PUSH2 0x1367 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1209 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x11FF JUMPI PUSH2 0x11FE PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1246 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x123C JUMPI PUSH2 0x123B PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1275 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x126B JUMPI PUSH2 0x126A PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x129E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1294 JUMPI PUSH2 0x1293 PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x12C3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12E6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x12DC JUMPI PUSH2 0x12DB PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x12F5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x1394 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E3 DUP2 PUSH2 0x13AF JUMP JUMPDEST DUP2 EQ PUSH2 0x13ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13FE DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI PUSH2 0x1418 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1426 DUP5 DUP3 DUP6 ADD PUSH2 0x13F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1443 DUP2 PUSH2 0x142F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145C PUSH0 DUP4 ADD DUP5 PUSH2 0x143A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1499 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x147E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE DUP3 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x14C8 DUP2 DUP6 PUSH2 0x146C JUMP JUMPDEST SWAP4 POP PUSH2 0x14D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST PUSH2 0x14E1 DUP2 PUSH2 0x14A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1504 DUP2 DUP5 PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151E DUP2 PUSH2 0x150C JUMP JUMPDEST DUP2 EQ PUSH2 0x1528 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1539 DUP2 PUSH2 0x1515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1554 JUMPI PUSH2 0x1553 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1561 DUP5 DUP3 DUP6 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1593 DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A3 DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH0 DUP4 ADD DUP5 PUSH2 0x159A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15CB DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP2 EQ PUSH2 0x15D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E6 DUP2 PUSH2 0x15C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1602 JUMPI PUSH2 0x1601 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160F DUP6 DUP3 DUP7 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1620 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1633 DUP2 PUSH2 0x150C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x164C PUSH0 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1669 JUMPI PUSH2 0x1668 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1676 DUP7 DUP3 DUP8 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1687 DUP7 DUP3 DUP8 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1698 DUP7 DUP3 DUP8 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D6 DUP2 PUSH2 0x142F JUMP JUMPDEST DUP2 EQ PUSH2 0x16E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F1 DUP2 PUSH2 0x16CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170D JUMPI PUSH2 0x170C PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x171A DUP6 DUP3 DUP7 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172B DUP6 DUP3 DUP7 ADD PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1773 DUP3 PUSH2 0x14A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x173D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A4 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP PUSH2 0x17B0 DUP3 DUP3 PUSH2 0x176A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17CF JUMPI PUSH2 0x17CE PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH2 0x17D8 DUP3 PUSH2 0x14A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1805 PUSH2 0x1800 DUP5 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x179B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST PUSH2 0x182C DUP5 DUP3 DUP6 PUSH2 0x17E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x1735 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1886 DUP8 DUP3 DUP9 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1897 DUP8 DUP3 DUP9 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18A8 DUP8 DUP3 DUP9 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C9 JUMPI PUSH2 0x18C8 PUSH2 0x13AB JUMP JUMPDEST JUMPDEST PUSH2 0x18D5 DUP8 DUP3 DUP9 ADD PUSH2 0x1834 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH2 0x18F6 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1904 DUP6 DUP3 DUP7 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1915 DUP6 DUP3 DUP7 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1963 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1976 JUMPI PUSH2 0x1975 PUSH2 0x191F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x198F PUSH0 DUP4 ADD DUP6 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x199C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x43726564697454696765722E7465737431000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A04 PUSH1 0x11 DUP4 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0F DUP3 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A31 DUP2 PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C DUP3 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x1A56 DUP2 DUP6 PUSH2 0x1A38 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A66 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7D DUP3 DUP6 PUSH2 0x1A42 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A89 DUP3 DUP5 PUSH2 0x1A42 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732315061757361626C652E7465737431000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC9 PUSH1 0x14 DUP4 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD4 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x1ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B21 DUP3 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1B2B DUP2 DUP6 PUSH2 0x1B07 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x14A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B62 PUSH0 DUP4 ADD DUP8 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x1B6F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x1B7C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x162A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B8E DUP2 DUP5 PUSH2 0x1B17 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BA7 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC2 JUMPI PUSH2 0x1BC1 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCF DUP5 DUP3 DUP6 ADD PUSH2 0x1B99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x455243373231456E756D657261626C652E746573743100000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C39 PUSH1 0x16 DUP4 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C44 DUP3 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732312E74657374310000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA1 PUSH1 0xC DUP4 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CAC DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCE DUP2 PUSH2 0x1C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xF0A60C55F958137F151EBFF34C1A89CCB5E398A8137C DUP3 0x1F PUSH21 0xC92B638BDB6664736F6C6343000814003300000000 ",
							"sourceMap": "293:960:14:-:0;;;425:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;497:12;1353:116:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1428:5;1420;:13;;;;;;:::i;:::-;;1454:7;1444;:17;;;;;;:::i;:::-;;1353:116;;1328:1:12;1304:26;;:12;:26;;;1300:97;;1382:1;1354:31;;;;;;;;;;;:::i;:::-;;;;;;;;1300:97;1407:32;1426:12;1407:18;;;:32;;:::i;:::-;1255:192;1277:5:13;1267:7;;:15;;;;;;;;;;;;;;;;;;425:96:14;293:960;;2999:191:12;3073:16;3092:6;;;;;;;;;;;3073:25;;3118:8;3109:6;;:17;;;;;;;;;;;;;;;;;;3173:8;3142:40;;3163:8;3142:40;;;;;;;;;;;;3062:128;2999:191;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;293:960:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_809": {
									"entryPoint": 2662,
									"id": 809,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_871": {
									"entryPoint": 4080,
									"id": 871,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_247": {
									"entryPoint": 3574,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkOnERC721Received_985": {
									"entryPoint": 3330,
									"id": 985,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_2809": {
									"entryPoint": 2751,
									"id": 2809,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_416": {
									"entryPoint": 2598,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_11": {
									"entryPoint": 2655,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_403": {
									"entryPoint": 4023,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_929": {
									"entryPoint": 2576,
									"id": 929,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_904": {
									"entryPoint": 3081,
									"id": 904,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_2871": {
									"entryPoint": 2886,
									"id": 2871,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_3051": {
									"entryPoint": 2680,
									"id": 3051,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_263": {
									"entryPoint": 1261,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_171": {
									"entryPoint": 1755,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1014": {
									"entryPoint": 1517,
									"id": 1014,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_280": {
									"entryPoint": 1234,
									"id": 280,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_313": {
									"entryPoint": 2181,
									"id": 313,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2544": {
									"entryPoint": 4525,
									"id": 2544,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_193": {
									"entryPoint": 1091,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_184": {
									"entryPoint": 1675,
									"id": 184,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_2792": {
									"entryPoint": 1844,
									"id": 2792,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_2931": {
									"entryPoint": 1653,
									"id": 2931,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_2823": {
									"entryPoint": 1825,
									"id": 2823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_364": {
									"entryPoint": 1486,
									"id": 364,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_390": {
									"entryPoint": 2050,
									"id": 390,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_296": {
									"entryPoint": 2028,
									"id": 296,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1079": {
									"entryPoint": 2455,
									"id": 1079,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_150": {
									"entryPoint": 3798,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3084": {
									"entryPoint": 1074,
									"id": 3084,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_52": {
									"entryPoint": 4862,
									"id": 52,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_202": {
									"entryPoint": 1884,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@test1_1159": {
									"entryPoint": 4462,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@test1_1461": {
									"entryPoint": 2688,
									"id": 1461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@test1_3068": {
									"entryPoint": 1692,
									"id": 3068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@test1_508": {
									"entryPoint": 4967,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toString_3276": {
									"entryPoint": 3596,
									"id": 3276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1145": {
									"entryPoint": 1539,
									"id": 1145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1108": {
									"entryPoint": 1322,
									"id": 1108,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_238": {
									"entryPoint": 2079,
									"id": 238,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1118": {
									"entryPoint": 1283,
									"id": 1118,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_346": {
									"entryPoint": 1295,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_2851": {
									"entryPoint": 2323,
									"id": 2851,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6131,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6770,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6991,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6117,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5244,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6563,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9": {
									"entryPoint": 7173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18369:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:17",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:17",
														"type": ""
													}
												],
												"src": "334:149:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:17"
															},
															"nodeType": "YulIf",
															"src": "541:62:17"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:17",
														"type": ""
													}
												],
												"src": "489:120:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:17",
														"type": ""
													}
												],
												"src": "615:137:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:17"
															},
															"nodeType": "YulIf",
															"src": "833:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:17",
														"type": ""
													}
												],
												"src": "758:327:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:17",
														"type": ""
													}
												],
												"src": "1091:90:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:17",
														"type": ""
													}
												],
												"src": "1187:109:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:17",
														"type": ""
													}
												],
												"src": "1302:210:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:17",
														"type": ""
													}
												],
												"src": "1518:99:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:17",
														"type": ""
													}
												],
												"src": "1623:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:17",
																"statements": []
															},
															"src": "1889:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:17",
														"type": ""
													}
												],
												"src": "1798:246:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:17",
														"type": ""
													}
												],
												"src": "2050:102:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:17",
														"type": ""
													}
												],
												"src": "2158:377:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:17",
														"type": ""
													}
												],
												"src": "2541:313:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:17",
														"type": ""
													}
												],
												"src": "2860:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:17"
															},
															"nodeType": "YulIf",
															"src": "2996:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:17",
														"type": ""
													}
												],
												"src": "2943:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:17",
														"type": ""
													}
												],
												"src": "3071:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:17"
															},
															"nodeType": "YulIf",
															"src": "3292:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:17",
														"type": ""
													}
												],
												"src": "3216:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:17",
														"type": ""
													}
												],
												"src": "3551:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:17",
														"type": ""
													}
												],
												"src": "3683:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:17",
														"type": ""
													}
												],
												"src": "3785:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:17",
														"type": ""
													}
												],
												"src": "3909:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:17"
															},
															"nodeType": "YulIf",
															"src": "4190:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:17",
														"type": ""
													}
												],
												"src": "4137:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:17",
														"type": ""
													}
												],
												"src": "4265:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:17"
															},
															"nodeType": "YulIf",
															"src": "4503:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:17",
														"type": ""
													}
												],
												"src": "4410:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4943:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4950:3:17",
														"type": ""
													}
												],
												"src": "4890:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5096:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5107:4:17",
														"type": ""
													}
												],
												"src": "5014:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5342:519:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:32:17"
															},
															"nodeType": "YulIf",
															"src": "5352:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "5481:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5608:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5653:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5736:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5781:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5296:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5307:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5319:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5327:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5335:6:17",
														"type": ""
													}
												],
												"src": "5242:619:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5979:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:32:17"
															},
															"nodeType": "YulIf",
															"src": "5943:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5903:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5914:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5926:6:17",
														"type": ""
													}
												],
												"src": "5867:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:17"
															},
															"nodeType": "YulIf",
															"src": "6252:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:17",
														"type": ""
													}
												],
												"src": "6202:116:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:17",
														"type": ""
													}
												],
												"src": "6324:133:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:17"
															},
															"nodeType": "YulIf",
															"src": "6553:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:17",
														"type": ""
													}
												],
												"src": "6463:468:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:17"
															},
															"nodeType": "YulIf",
															"src": "7525:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:17",
														"type": ""
													}
												],
												"src": "7369:281:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:17"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:17",
														"type": ""
													}
												],
												"src": "7656:129:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:17"
															},
															"nodeType": "YulIf",
															"src": "7928:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:17",
														"type": ""
													}
												],
												"src": "7791:307:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:17"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:17"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:17",
														"type": ""
													}
												],
												"src": "8104:146:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:17"
															},
															"nodeType": "YulIf",
															"src": "8498:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:17"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:17",
														"type": ""
													}
												],
												"src": "8256:423:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:17"
															},
															"nodeType": "YulIf",
															"src": "8769:122:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:17",
														"type": ""
													}
												],
												"src": "8698:338:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:17"
															},
															"nodeType": "YulIf",
															"src": "9178:120:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:17",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:17"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:17",
														"type": ""
													}
												],
												"src": "9042:943:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:17"
															},
															"nodeType": "YulIf",
															"src": "10084:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:17",
														"type": ""
													}
												],
												"src": "9991:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:17"
															},
															"nodeType": "YulIf",
															"src": "10796:81:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:17"
															},
															"nodeType": "YulIf",
															"src": "10887:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:17",
														"type": ""
													}
												],
												"src": "10657:320:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11109:206:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11119:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11131:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11142:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11127:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11127:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11119:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11199:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11212:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11223:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11208:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11208:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11155:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11155:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11155:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11280:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11293:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11304:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11289:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11289:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11236:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11236:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11236:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11073:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11085:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11093:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11104:4:17",
														"type": ""
													}
												],
												"src": "10983:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11349:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11366:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11369:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11359:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11359:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11359:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11463:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11466:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11456:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11456:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11487:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11490:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11480:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11480:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11480:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11321:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11613:61:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11635:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11643:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11631:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11631:14:17"
																	},
																	{
																		"hexValue": "43726564697454696765722e7465737431",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11647:19:17",
																		"type": "",
																		"value": "CreditTiger.test1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11624:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11624:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11624:43:17"
														}
													]
												},
												"name": "store_literal_in_memory_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11605:6:17",
														"type": ""
													}
												],
												"src": "11507:167:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11826:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11836:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11902:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11907:2:17",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11843:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11843:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11836:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12008:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6",
																	"nodeType": "YulIdentifier",
																	"src": "11919:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11919:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11919:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12021:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12032:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12037:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12028:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12028:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12021:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11814:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11822:3:17",
														"type": ""
													}
												],
												"src": "11680:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12223:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12233:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12245:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12256:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12241:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12241:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12233:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12280:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12291:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12276:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12276:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12299:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12305:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12295:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12295:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12269:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12269:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12269:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12325:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12459:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12333:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12333:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12325:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12203:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12218:4:17",
														"type": ""
													}
												],
												"src": "12052:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12591:34:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12601:18:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12616:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12601:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12563:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12568:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12579:11:17",
														"type": ""
													}
												],
												"src": "12477:148:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12741:280:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12751:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12798:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12765:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12765:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12755:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12813:96:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12897:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12902:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12820:76:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12820:89:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12813:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12957:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12964:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12953:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12953:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12971:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12976:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12918:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12918:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12918:65:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12992:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13003:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13008:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12999:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12999:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12992:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12722:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12729:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12737:3:17",
														"type": ""
													}
												],
												"src": "12631:390:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13211:251:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13222:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13311:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13320:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13229:81:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13229:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13222:3:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13334:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13423:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13432:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13341:81:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13341:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13334:3:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13446:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13453:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13446:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13182:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13188:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13196:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13207:3:17",
														"type": ""
													}
												],
												"src": "13027:435:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13574:64:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13596:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13604:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13592:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13592:14:17"
																	},
																	{
																		"hexValue": "4552433732315061757361626c652e7465737431",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13608:22:17",
																		"type": "",
																		"value": "ERC721Pausable.test1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13585:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13585:46:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13585:46:17"
														}
													]
												},
												"name": "store_literal_in_memory_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13566:6:17",
														"type": ""
													}
												],
												"src": "13468:170:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13790:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13800:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13866:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:17",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13807:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13807:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13800:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13972:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a",
																	"nodeType": "YulIdentifier",
																	"src": "13883:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13883:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13985:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13996:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14001:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13992:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13992:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13985:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13778:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13786:3:17",
														"type": ""
													}
												],
												"src": "13644:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14187:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14197:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14209:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14220:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14205:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14205:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14197:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14244:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14255:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14240:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14240:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14263:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14269:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14259:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14259:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14233:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14233:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14233:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14289:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14423:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14297:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14297:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14289:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14167:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14182:4:17",
														"type": ""
													}
												],
												"src": "14016:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14499:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14510:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14526:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14520:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14520:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14510:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14482:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14492:6:17",
														"type": ""
													}
												],
												"src": "14441:98:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14640:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14657:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14662:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14650:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14650:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14650:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14678:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14697:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14702:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14693:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14693:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14678:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14612:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14617:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14628:11:17",
														"type": ""
													}
												],
												"src": "14545:168:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14809:283:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14819:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14865:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14833:31:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14833:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14823:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14880:77:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14945:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14950:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14887:57:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14887:70:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14880:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15005:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15012:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15001:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15001:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15019:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15024:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14966:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14966:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14966:65:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15040:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15051:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15078:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15056:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15056:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15047:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15047:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15040:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14790:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14797:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14805:3:17",
														"type": ""
													}
												],
												"src": "14719:373:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15298:440:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15308:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15320:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15331:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15316:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15316:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15308:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15389:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15402:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15413:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15398:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15398:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15345:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15345:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15345:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15470:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15483:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15494:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15479:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15479:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15426:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15426:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15426:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15552:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15565:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15576:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15561:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15561:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15508:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15508:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15508:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15601:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15612:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15597:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15597:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15621:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15627:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15617:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15617:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15590:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15590:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15590:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15647:84:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15717:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15726:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15655:61:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15655:76:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15647:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15246:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15258:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15266:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15274:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15282:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15293:4:17",
														"type": ""
													}
												],
												"src": "15098:640:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15806:79:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15816:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15831:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15825:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15825:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15816:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15873:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "15847:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15847:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15847:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15784:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15792:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15800:5:17",
														"type": ""
													}
												],
												"src": "15744:141:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15967:273:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16013:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16015:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16015:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16015:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15988:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15997:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15984:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15984:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16009:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15980:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15980:32:17"
															},
															"nodeType": "YulIf",
															"src": "15977:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "16106:127:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16121:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16135:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16125:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16150:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16195:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16206:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16191:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16191:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16215:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16160:30:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16160:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16150:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15937:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15948:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15960:6:17",
														"type": ""
													}
												],
												"src": "15891:349:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16274:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16291:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16294:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16284:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16284:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16284:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16388:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16391:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16381:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16381:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16381:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16412:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16415:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16405:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16405:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16405:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16246:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16538:66:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16560:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16568:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16556:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16556:14:17"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c652e7465737431",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16572:24:17",
																		"type": "",
																		"value": "ERC721Enumerable.test1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16549:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16549:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16549:48:17"
														}
													]
												},
												"name": "store_literal_in_memory_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16530:6:17",
														"type": ""
													}
												],
												"src": "16432:172:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16756:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16766:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16832:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16837:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16773:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16773:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16766:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16938:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9",
																	"nodeType": "YulIdentifier",
																	"src": "16849:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16849:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16849:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16951:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16962:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16967:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16958:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16958:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16951:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16744:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16752:3:17",
														"type": ""
													}
												],
												"src": "16610:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17153:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17163:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17175:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17186:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17171:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17171:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17163:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17210:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17221:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17206:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17206:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17229:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17235:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17225:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17225:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17199:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17199:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17199:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17255:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17389:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17263:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17263:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17255:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17133:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17148:4:17",
														"type": ""
													}
												],
												"src": "16982:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17513:56:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17535:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17543:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17531:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17531:14:17"
																	},
																	{
																		"hexValue": "4552433732312e7465737431",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17547:14:17",
																		"type": "",
																		"value": "ERC721.test1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17524:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17524:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17524:38:17"
														}
													]
												},
												"name": "store_literal_in_memory_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17505:6:17",
														"type": ""
													}
												],
												"src": "17407:162:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17721:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17731:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17797:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17802:2:17",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17738:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17738:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17731:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17903:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a",
																	"nodeType": "YulIdentifier",
																	"src": "17814:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17814:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17814:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17916:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17927:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17932:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17923:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17923:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17916:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17709:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17717:3:17",
														"type": ""
													}
												],
												"src": "17575:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18118:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18128:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18140:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18151:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18136:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18136:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18128:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18175:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18186:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18171:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18171:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18194:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18200:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18190:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18190:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18164:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18164:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18164:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18220:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18354:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18228:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18228:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18220:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18098:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18113:4:17",
														"type": ""
													}
												],
												"src": "17947:419:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6(memPtr) {\n\n        mstore(add(memPtr, 0), \"CreditTiger.test1\")\n\n    }\n\n    function abi_encode_t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Pausable.test1\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Enumerable.test1\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721.test1\")\n\n    }\n\n    function abi_encode_t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610140575f3560e01c80636352211e116100b657806395d89b411161007a57806395d89b4114610360578063a22cb4651461037e578063b88d4fde1461039a578063c87b56dd146103b6578063e985e9c5146103e6578063f2fde38b1461041657610140565b80636352211e146102ce5780636b59084d146102fe57806370a0823114610308578063715018a6146103385780638da5cb5b1461034257610140565b806323b872dd1161010857806323b872dd146101fc5780632f745c591461021857806342842e0e1461024857806342966c68146102645780634f6ccce7146102805780635c975abb146102b057610140565b806301ffc9a71461014457806306fdde0314610174578063081812fc14610192578063095ea7b3146101c257806318160ddd146101de575b5f80fd5b61015e60048036038101906101599190611404565b610432565b60405161016b9190611449565b60405180910390f35b61017c610443565b60405161018991906114ec565b60405180910390f35b6101ac60048036038101906101a7919061153f565b6104d2565b6040516101b991906115a9565b60405180910390f35b6101dc60048036038101906101d791906115ec565b6104ed565b005b6101e6610503565b6040516101f39190611639565b60405180910390f35b61021660048036038101906102119190611652565b61050f565b005b610232600480360381019061022d91906115ec565b61052a565b60405161023f9190611639565b60405180910390f35b610262600480360381019061025d9190611652565b6105ce565b005b61027e6004803603810190610279919061153f565b6105ed565b005b61029a6004803603810190610295919061153f565b610603565b6040516102a79190611639565b60405180910390f35b6102b8610675565b6040516102c59190611449565b60405180910390f35b6102e860048036038101906102e3919061153f565b61068b565b6040516102f591906115a9565b60405180910390f35b61030661069c565b005b610322600480360381019061031d91906116a2565b6106db565b60405161032f9190611639565b60405180910390f35b610340610721565b005b61034a610734565b60405161035791906115a9565b60405180910390f35b61036861075c565b60405161037591906114ec565b60405180910390f35b610398600480360381019061039391906116f7565b6107ec565b005b6103b460048036038101906103af9190611861565b610802565b005b6103d060048036038101906103cb919061153f565b61081f565b6040516103dd91906114ec565b60405180910390f35b61040060048036038101906103fb91906118e1565b610885565b60405161040d9190611449565b60405180910390f35b610430600480360381019061042b91906116a2565b610913565b005b5f61043c82610997565b9050919050565b60605f80546104519061194c565b80601f016020809104026020016040519081016040528092919081815260200182805461047d9061194c565b80156104c85780601f1061049f576101008083540402835291602001916104c8565b820191905f5260205f20905b8154815290600101906020018083116104ab57829003601f168201915b5050505050905090565b5f6104dc82610a10565b506104e682610a26565b9050919050565b6104ff82826104fa610a5f565b610a66565b5050565b5f600880549050905090565b5f610522838361051d610a5f565b610a78565b905050505050565b5f610534836106db565b82106105795782826040517fa57d13dc00000000000000000000000000000000000000000000000000000000815260040161057092919061197c565b60405180910390fd5b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2054905092915050565b6105e883838360405180602001604052805f815250610802565b505050565b6105ff5f826105fa610a5f565b610a78565b5050565b5f61060c610503565b8210610651575f826040517fa57d13dc00000000000000000000000000000000000000000000000000000000815260040161064892919061197c565b60405180910390fd5b60088281548110610665576106646119a3565b5b905f5260205f2001549050919050565b5f600a60149054906101000a900460ff16905090565b5f61069582610a10565b9050919050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516106c990611a1a565b60405180910390a16106d9610a80565b565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610729610abf565b6107325f610b46565b565b5f600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461076b9061194c565b80601f01602080910402602001604051908101604052809291908181526020018280546107979061194c565b80156107e25780601f106107b9576101008083540402835291602001916107e2565b820191905f5260205f20905b8154815290600101906020018083116107c557829003601f168201915b5050505050905090565b6107fe6107f7610a5f565b8383610c09565b5050565b61080d84848461050f565b61081984848484610d02565b50505050565b606061082a82610a10565b505f610834610df6565b90505f8151116108525760405180602001604052805f81525061087d565b8061085c84610e0c565b60405160200161086d929190611a72565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b61091b610abf565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361098b575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161098291906115a9565b60405180910390fd5b61099481610b46565b50565b5f7f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a095750610a0882610ed6565b5b9050919050565b5f80610a1b83610fb7565b905080915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610a738383836001610ff0565b505050565b5f9392505050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610aad90611adf565b60405180910390a1610abd61116e565b565b610ac7610a5f565b73ffffffffffffffffffffffffffffffffffffffff16610ae5610734565b73ffffffffffffffffffffffffffffffffffffffff1614610b4457610b08610a5f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b3b91906115a9565b60405180910390fd5b565b5f600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cf59190611449565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115610df0578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610d45610a5f565b8685856040518563ffffffff1660e01b8152600401610d679493929190611b4f565b6020604051808303815f875af1925050508015610da257506040513d601f19601f82011682018060405250810190610d9f9190611bad565b60015b610ded573d805f8114610dd0576040519150601f19603f3d011682016040523d82523d5f602084013e610dd5565b606091505b505f81510315610de757805181602001fd5b50610def565b505b5b50505050565b606060405180602001604052805f815250905090565b60605f6001610e1a846111ad565b0190505f8167ffffffffffffffff811115610e3857610e3761173d565b5b6040519080825280601f01601f191660200182016040528015610e6a5781602001600182028036833780820191505090505b5090505f82602001820190505b600115610ecb578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610ec057610ebf611bd8565b5b0494505f8503610e77575b819350505050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610fa057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610fb05750610faf826112fe565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061102857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611119575f61103784610a10565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110a157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156110b457506110b28184610885565b155b50811561111757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161119b90611c4f565b60405180910390a16111ab611367565b565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611209577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816111ff576111fe611bd8565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611246576d04ee2d6d415b85acef8100000000838161123c5761123b611bd8565b5b0492506020810190505b662386f26fc10000831061127557662386f26fc10000838161126b5761126a611bd8565b5b0492506010810190505b6305f5e100831061129e576305f5e100838161129457611293611bd8565b5b0492506008810190505b61271083106112c35761271083816112b9576112b8611bd8565b5b0492506004810190505b606483106112e657606483816112dc576112db611bd8565b5b0492506002810190505b600a83106112f5576001810190505b80915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161139490611cb7565b60405180910390a1565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113e3816113af565b81146113ed575f80fd5b50565b5f813590506113fe816113da565b92915050565b5f60208284031215611419576114186113a7565b5b5f611426848285016113f0565b91505092915050565b5f8115159050919050565b6114438161142f565b82525050565b5f60208201905061145c5f83018461143a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561149957808201518184015260208101905061147e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6114be82611462565b6114c8818561146c565b93506114d881856020860161147c565b6114e1816114a4565b840191505092915050565b5f6020820190508181035f83015261150481846114b4565b905092915050565b5f819050919050565b61151e8161150c565b8114611528575f80fd5b50565b5f8135905061153981611515565b92915050565b5f60208284031215611554576115536113a7565b5b5f6115618482850161152b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115938261156a565b9050919050565b6115a381611589565b82525050565b5f6020820190506115bc5f83018461159a565b92915050565b6115cb81611589565b81146115d5575f80fd5b50565b5f813590506115e6816115c2565b92915050565b5f8060408385031215611602576116016113a7565b5b5f61160f858286016115d8565b92505060206116208582860161152b565b9150509250929050565b6116338161150c565b82525050565b5f60208201905061164c5f83018461162a565b92915050565b5f805f60608486031215611669576116686113a7565b5b5f611676868287016115d8565b9350506020611687868287016115d8565b92505060406116988682870161152b565b9150509250925092565b5f602082840312156116b7576116b66113a7565b5b5f6116c4848285016115d8565b91505092915050565b6116d68161142f565b81146116e0575f80fd5b50565b5f813590506116f1816116cd565b92915050565b5f806040838503121561170d5761170c6113a7565b5b5f61171a858286016115d8565b925050602061172b858286016116e3565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611773826114a4565b810181811067ffffffffffffffff821117156117925761179161173d565b5b80604052505050565b5f6117a461139e565b90506117b0828261176a565b919050565b5f67ffffffffffffffff8211156117cf576117ce61173d565b5b6117d8826114a4565b9050602081019050919050565b828183375f83830152505050565b5f611805611800846117b5565b61179b565b90508281526020810184848401111561182157611820611739565b5b61182c8482856117e5565b509392505050565b5f82601f83011261184857611847611735565b5b81356118588482602086016117f3565b91505092915050565b5f805f8060808587031215611879576118786113a7565b5b5f611886878288016115d8565b9450506020611897878288016115d8565b93505060406118a88782880161152b565b925050606085013567ffffffffffffffff8111156118c9576118c86113ab565b5b6118d587828801611834565b91505092959194509250565b5f80604083850312156118f7576118f66113a7565b5b5f611904858286016115d8565b9250506020611915858286016115d8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061196357607f821691505b6020821081036119765761197561191f565b5b50919050565b5f60408201905061198f5f83018561159a565b61199c602083018461162a565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f43726564697454696765722e74657374310000000000000000000000000000005f82015250565b5f611a0460118361146c565b9150611a0f826119d0565b602082019050919050565b5f6020820190508181035f830152611a31816119f8565b9050919050565b5f81905092915050565b5f611a4c82611462565b611a568185611a38565b9350611a6681856020860161147c565b80840191505092915050565b5f611a7d8285611a42565b9150611a898284611a42565b91508190509392505050565b7f4552433732315061757361626c652e74657374310000000000000000000000005f82015250565b5f611ac960148361146c565b9150611ad482611a95565b602082019050919050565b5f6020820190508181035f830152611af681611abd565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f611b2182611afd565b611b2b8185611b07565b9350611b3b81856020860161147c565b611b44816114a4565b840191505092915050565b5f608082019050611b625f83018761159a565b611b6f602083018661159a565b611b7c604083018561162a565b8181036060830152611b8e8184611b17565b905095945050505050565b5f81519050611ba7816113da565b92915050565b5f60208284031215611bc257611bc16113a7565b5b5f611bcf84828501611b99565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f455243373231456e756d657261626c652e7465737431000000000000000000005f82015250565b5f611c3960168361146c565b9150611c4482611c05565b602082019050919050565b5f6020820190508181035f830152611c6681611c2d565b9050919050565b7f4552433732312e746573743100000000000000000000000000000000000000005f82015250565b5f611ca1600c8361146c565b9150611cac82611c6d565b602082019050919050565b5f6020820190508181035f830152611cce81611c95565b905091905056fea264697066735822122075f0a60c55f958137f151ebff34c1a89ccb5e398a8137c821f74c92b638bdb6664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x416 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x6B59084D EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x342 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2B0 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH2 0x69C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0x721 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34A PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x7EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x43C DUP3 PUSH2 0x997 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x451 SWAP1 PUSH2 0x194C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47D SWAP1 PUSH2 0x194C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4DC DUP3 PUSH2 0xA10 JUMP JUMPDEST POP PUSH2 0x4E6 DUP3 PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FF DUP3 DUP3 PUSH2 0x4FA PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x522 DUP4 DUP4 PUSH2 0x51D PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x534 DUP4 PUSH2 0x6DB JUMP JUMPDEST DUP3 LT PUSH2 0x579 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x570 SWAP3 SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x802 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FF PUSH0 DUP3 PUSH2 0x5FA PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x60C PUSH2 0x503 JUMP JUMPDEST DUP3 LT PUSH2 0x651 JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x648 SWAP3 SWAP2 SWAP1 PUSH2 0x197C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x665 JUMPI PUSH2 0x664 PUSH2 0x19A3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x695 DUP3 PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x6C9 SWAP1 PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x6D9 PUSH2 0xA80 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x729 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x732 PUSH0 PUSH2 0xB46 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x76B SWAP1 PUSH2 0x194C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x797 SWAP1 PUSH2 0x194C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7FE PUSH2 0x7F7 PUSH2 0xA5F JUMP JUMPDEST DUP4 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x80D DUP5 DUP5 DUP5 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x819 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x82A DUP3 PUSH2 0xA10 JUMP JUMPDEST POP PUSH0 PUSH2 0x834 PUSH2 0xDF6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x87D JUMP JUMPDEST DUP1 PUSH2 0x85C DUP5 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x86D SWAP3 SWAP2 SWAP1 PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x91B PUSH2 0xABF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x98B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x982 SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x994 DUP2 PUSH2 0xB46 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA09 JUMPI POP PUSH2 0xA08 DUP3 PUSH2 0xED6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA1B DUP4 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA73 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0xAAD SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xABD PUSH2 0x116E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0xA5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAE5 PUSH2 0x734 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB44 JUMPI PUSH2 0xB08 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0xDF0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xD45 PUSH2 0xA5F JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD67 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDA2 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDED JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB ISZERO PUSH2 0xDE7 JUMPI DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST POP PUSH2 0xDEF JUMP JUMPDEST POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0xE1A DUP5 PUSH2 0x11AD JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE38 JUMPI PUSH2 0xE37 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE6A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xECB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0xE77 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xFA0 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xFB0 JUMPI POP PUSH2 0xFAF DUP3 PUSH2 0x12FE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1028 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1119 JUMPI PUSH0 PUSH2 0x1037 DUP5 PUSH2 0xA10 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10A1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x10B4 JUMPI POP PUSH2 0x10B2 DUP2 DUP5 PUSH2 0x885 JUMP JUMPDEST ISZERO JUMPDEST POP DUP2 ISZERO PUSH2 0x1117 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x119B SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x11AB PUSH2 0x1367 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1209 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x11FF JUMPI PUSH2 0x11FE PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1246 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x123C JUMPI PUSH2 0x123B PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1275 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x126B JUMPI PUSH2 0x126A PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x129E JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1294 JUMPI PUSH2 0x1293 PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x12C3 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12E6 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x12DC JUMPI PUSH2 0x12DB PUSH2 0x1BD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x12F5 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD PUSH2 0x1394 SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E3 DUP2 PUSH2 0x13AF JUMP JUMPDEST DUP2 EQ PUSH2 0x13ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13FE DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI PUSH2 0x1418 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1426 DUP5 DUP3 DUP6 ADD PUSH2 0x13F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1443 DUP2 PUSH2 0x142F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x145C PUSH0 DUP4 ADD DUP5 PUSH2 0x143A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1499 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x147E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE DUP3 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x14C8 DUP2 DUP6 PUSH2 0x146C JUMP JUMPDEST SWAP4 POP PUSH2 0x14D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST PUSH2 0x14E1 DUP2 PUSH2 0x14A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1504 DUP2 DUP5 PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151E DUP2 PUSH2 0x150C JUMP JUMPDEST DUP2 EQ PUSH2 0x1528 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1539 DUP2 PUSH2 0x1515 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1554 JUMPI PUSH2 0x1553 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1561 DUP5 DUP3 DUP6 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1593 DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A3 DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15BC PUSH0 DUP4 ADD DUP5 PUSH2 0x159A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15CB DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP2 EQ PUSH2 0x15D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E6 DUP2 PUSH2 0x15C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1602 JUMPI PUSH2 0x1601 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160F DUP6 DUP3 DUP7 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1620 DUP6 DUP3 DUP7 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1633 DUP2 PUSH2 0x150C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x164C PUSH0 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1669 JUMPI PUSH2 0x1668 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1676 DUP7 DUP3 DUP8 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1687 DUP7 DUP3 DUP8 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1698 DUP7 DUP3 DUP8 ADD PUSH2 0x152B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C4 DUP5 DUP3 DUP6 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D6 DUP2 PUSH2 0x142F JUMP JUMPDEST DUP2 EQ PUSH2 0x16E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F1 DUP2 PUSH2 0x16CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170D JUMPI PUSH2 0x170C PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x171A DUP6 DUP3 DUP7 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172B DUP6 DUP3 DUP7 ADD PUSH2 0x16E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1773 DUP3 PUSH2 0x14A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x173D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A4 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP PUSH2 0x17B0 DUP3 DUP3 PUSH2 0x176A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17CF JUMPI PUSH2 0x17CE PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH2 0x17D8 DUP3 PUSH2 0x14A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1805 PUSH2 0x1800 DUP5 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x179B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST PUSH2 0x182C DUP5 DUP3 DUP6 PUSH2 0x17E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x1735 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1886 DUP8 DUP3 DUP9 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1897 DUP8 DUP3 DUP9 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18A8 DUP8 DUP3 DUP9 ADD PUSH2 0x152B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C9 JUMPI PUSH2 0x18C8 PUSH2 0x13AB JUMP JUMPDEST JUMPDEST PUSH2 0x18D5 DUP8 DUP3 DUP9 ADD PUSH2 0x1834 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F7 JUMPI PUSH2 0x18F6 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1904 DUP6 DUP3 DUP7 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1915 DUP6 DUP3 DUP7 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1963 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1976 JUMPI PUSH2 0x1975 PUSH2 0x191F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x198F PUSH0 DUP4 ADD DUP6 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x199C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x43726564697454696765722E7465737431000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A04 PUSH1 0x11 DUP4 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0F DUP3 PUSH2 0x19D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A31 DUP2 PUSH2 0x19F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C DUP3 PUSH2 0x1462 JUMP JUMPDEST PUSH2 0x1A56 DUP2 DUP6 PUSH2 0x1A38 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A66 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7D DUP3 DUP6 PUSH2 0x1A42 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A89 DUP3 DUP5 PUSH2 0x1A42 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732315061757361626C652E7465737431000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC9 PUSH1 0x14 DUP4 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD4 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x1ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B21 DUP3 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x1B2B DUP2 DUP6 PUSH2 0x1B07 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B3B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x147C JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x14A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B62 PUSH0 DUP4 ADD DUP8 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x1B6F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x1B7C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x162A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B8E DUP2 DUP5 PUSH2 0x1B17 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BA7 DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC2 JUMPI PUSH2 0x1BC1 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCF DUP5 DUP3 DUP6 ADD PUSH2 0x1B99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x455243373231456E756D657261626C652E746573743100000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C39 PUSH1 0x16 DUP4 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C44 DUP3 PUSH2 0x1C05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732312E74657374310000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA1 PUSH1 0xC DUP4 PUSH2 0x146C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CAC DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCE DUP2 PUSH2 0x1C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xF0A60C55F958137F151EBFF34C1A89CCB5E398A8137C DUP3 0x1F PUSH21 0xC92B638BDB6664736F6C6343000814003300000000 ",
							"sourceMap": "293:960:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2375:91:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3547:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3366:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2089:104:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4216:594:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1753:260:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4881:134:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;569:318:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2270:231:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1916:86:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2188:120:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;905:147:14;;;:::i;:::-;;1910:216:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2361:103:12;;;:::i;:::-;;1686:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2535:95:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3777:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5086:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2701:260;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3994:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2619:220:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1066:178:14;1176:4;1200:36;1224:11;1200:23;:36::i;:::-;1193:43;;1066:178;;;:::o;2375:91:2:-;2420:13;2453:5;2446:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2375:91;:::o;3547:158::-;3614:7;3634:22;3648:7;3634:13;:22::i;:::-;;3676:21;3689:7;3676:12;:21::i;:::-;3669:28;;3547:158;;;:::o;3366:115::-;3438:35;3447:2;3451:7;3460:12;:10;:12::i;:::-;3438:8;:35::i;:::-;3366:115;;:::o;2089:104:4:-;2141:7;2168:10;:17;;;;2161:24;;2089:104;:::o;4216:594:2:-;4620:21;4644:34;4652:2;4656:7;4665:12;:10;:12::i;:::-;4644:7;:34::i;:::-;4620:58;;4296:514;4216:594;;;:::o;1753:260:4:-;1841:7;1874:16;1884:5;1874:9;:16::i;:::-;1865:5;:25;1861:101;;1937:5;1944;1914:36;;;;;;;;;;;;:::i;:::-;;;;;;;;1861:101;1979:12;:19;1992:5;1979:19;;;;;;;;;;;;;;;:26;1999:5;1979:26;;;;;;;;;;;;1972:33;;1753:260;;;;:::o;4881:134:2:-;4968:39;4985:4;4991:2;4995:7;4968:39;;;;;;;;;;;;:16;:39::i;:::-;4881:134;;;:::o;569:318:3:-;837:42;853:1;857:7;866:12;:10;:12::i;:::-;837:7;:42::i;:::-;;569:318;:::o;2270:231:4:-;2336:7;2369:13;:11;:13::i;:::-;2360:5;:22;2356:103;;2437:1;2441:5;2406:41;;;;;;;;;;;;:::i;:::-;;;;;;;;2356:103;2476:10;2487:5;2476:17;;;;;;;;:::i;:::-;;;;;;;;;;2469:24;;2270:231;;;:::o;1916:86:13:-;1963:4;1987:7;;;;;;;;;;;1980:14;;1916:86;:::o;2188:120:2:-;2251:7;2278:22;2292:7;2278:13;:22::i;:::-;2271:29;;2188:120;;;:::o;905:147:14:-;996:24;;;;;;:::i;:::-;;;;;;;;1031:13;:11;:13::i;:::-;905:147::o;1910:216:2:-;1973:7;2102:9;:16;2112:5;2102:16;;;;;;;;;;;;;;;;2095:23;;1910:216;;;:::o;2361:103:12:-;1572:13;:11;:13::i;:::-;2426:30:::1;2453:1;2426:18;:30::i;:::-;2361:103::o:0;1686:87::-;1732:7;1759:6;;;;;;;;;;;1752:13;;1686:87;:::o;2535:95:2:-;2582:13;2615:7;2608:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2535:95;:::o;3777:146::-;3863:52;3882:12;:10;:12::i;:::-;3896:8;3906;3863:18;:52::i;:::-;3777:146;;:::o;5086:211::-;5200:31;5213:4;5219:2;5223:7;5200:12;:31::i;:::-;5242:47;5265:4;5271:2;5275:7;5284:4;5242:22;:47::i;:::-;5086:211;;;;:::o;2701:260::-;2765:13;2791:22;2805:7;2791:13;:22::i;:::-;;2826:21;2850:10;:8;:10::i;:::-;2826:34;;2902:1;2884:7;2878:21;:25;:75;;;;;;;;;;;;;;;;;2920:7;2929:18;:7;:16;:18::i;:::-;2906:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2878:75;2871:82;;;2701:260;;;:::o;3994:155::-;4082:4;4106:18;:25;4125:5;4106:25;;;;;;;;;;;;;;;:35;4132:8;4106:35;;;;;;;;;;;;;;;;;;;;;;;;;4099:42;;3994:155;;;;:::o;2619:220:12:-;1572:13;:11;:13::i;:::-;2724:1:::1;2704:22;;:8;:22;;::::0;2700:93:::1;;2778:1;2750:31;;;;;;;;;;;:::i;:::-;;;;;;;;2700:93;2803:28;2822:8;2803:18;:28::i;:::-;2619:220:::0;:::o;1445:224:4:-;1547:4;1586:35;1571:50;;;:11;:50;;;;:90;;;;1625:36;1649:11;1625:23;:36::i;:::-;1571:90;1564:97;;1445:224;;;:::o;16671:250:2:-;16734:7;16754:13;16770:17;16779:7;16770:8;:17::i;:::-;16754:33;;16908:5;16901:12;;;16671:250;;;:::o;6060:129::-;6130:7;6157:15;:24;6173:7;6157:24;;;;;;;;;;;;;;;;;;;;;6150:31;;6060:129;;;:::o;672:98:0:-;725:7;752:10;745:17;;672:98;:::o;14897:122:2:-;14978:33;14987:2;14991:7;15000:4;15006;14978:8;:33::i;:::-;14897:122;;;:::o;711:184:14:-;846:7;711:184;;;;;:::o;1354:117:5:-;1412:27;;;;;;:::i;:::-;;;;;;;;1450:13;:11;:13::i;:::-;1354:117::o;1851:166:12:-;1922:12;:10;:12::i;:::-;1911:23;;:7;:5;:7::i;:::-;:23;;;1907:103;;1985:12;:10;:12::i;:::-;1958:40;;;;;;;;;;;:::i;:::-;;;;;;;;1907:103;1851:166::o;2999:191::-;3073:16;3092:6;;;;;;;;;;;3073:25;;3118:8;3109:6;;:17;;;;;;;;;;;;;;;;;;3173:8;3142:40;;3163:8;3142:40;;;;;;;;;;;;3062:128;2999:191;:::o;16107:321:2:-;16355:8;16317:18;:25;16336:5;16317:25;;;;;;;;;;;;;;;:35;16343:8;16317:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;16401:8;16379:41;;16394:5;16379:41;;;16411:8;16379:41;;;;;;:::i;:::-;;;;;;;;16107:321;;;:::o;17471:805::-;17605:1;17588:2;:14;;;:18;17584:685;;;17643:2;17627:36;;;17664:12;:10;:12::i;:::-;17678:4;17684:7;17693:4;17627:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17623:635;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17961:1;17944:6;:13;:18;17940:303;;;18193:6;18187:13;18178:6;18174:2;18170:15;18163:38;17940:303;17893:365;17623:635;;;17699:193;17623:635;17584:685;17471:805;;;;:::o;3210:94::-;3261:13;3287:9;;;;;;;;;;;;;;3210:94;:::o;650:718:16:-;706:13;757:14;794:1;774:17;785:5;774:10;:17::i;:::-;:21;757:38;;810:20;844:6;833:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:41;;866:11;995:6;991:2;987:15;979:6;975:28;968:35;;1032:290;1039:4;1032:290;;;1064:5;;;;;;;;1206:10;1201:2;1194:5;1190:14;1185:32;1180:3;1172:46;1264:2;1255:11;;;;;;:::i;:::-;;;;;1298:1;1289:5;:10;1032:290;1285:21;1032:290;1343:6;1336:13;;;;;650:718;;;:::o;1541:305:2:-;1643:4;1695:25;1680:40;;;:11;:40;;;;:105;;;;1752:33;1737:48;;;:11;:48;;;;1680:105;:158;;;;1802:36;1826:11;1802:23;:36::i;:::-;1680:158;1660:178;;1541:305;;;:::o;5822:117::-;5888:7;5915;:16;5923:7;5915:16;;;;;;;;;;;;;;;;;;;;;5908:23;;5822:117;;;:::o;15207:681::-;15369:9;:31;;;;15398:1;15382:18;;:4;:18;;;;15369:31;15365:474;;;15417:13;15433:22;15447:7;15433:13;:22::i;:::-;15417:38;;15602:1;15586:18;;:4;:18;;;;:35;;;;;15617:4;15608:13;;:5;:13;;;;15586:35;:69;;;;;15626:29;15643:5;15650:4;15626:16;:29::i;:::-;15625:30;15586:69;15582:147;15749:9;15745:83;;;15804:7;15800:2;15784:28;;15793:5;15784:28;;;;;;;;;;;;15745:83;15402:437;15365:474;15878:2;15851:15;:24;15867:7;15851:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15207:681;;;;:::o;2509:119:4:-;2567:29;;;;;;:::i;:::-;;;;;;;;2607:13;:11;:13::i;:::-;2509:119::o;13016:948:11:-;13069:7;13089:14;13106:1;13089:18;;13156:8;13147:5;:17;13143:106;;13194:8;13185:17;;;;;;:::i;:::-;;;;;13231:2;13221:12;;;;13143:106;13276:8;13267:5;:17;13263:106;;13314:8;13305:17;;;;;;:::i;:::-;;;;;13351:2;13341:12;;;;13263:106;13396:8;13387:5;:17;13383:106;;13434:8;13425:17;;;;;;:::i;:::-;;;;;13471:2;13461:12;;;;13383:106;13516:7;13507:5;:16;13503:103;;13553:7;13544:16;;;;;;:::i;:::-;;;;;13589:1;13579:11;;;;13503:103;13633:7;13624:5;:16;13620:103;;13670:7;13661:16;;;;;;:::i;:::-;;;;;13706:1;13696:11;;;;13620:103;13750:7;13741:5;:16;13737:103;;13787:7;13778:16;;;;;;:::i;:::-;;;;;13823:1;13813:11;;;;13737:103;13867:7;13858:5;:16;13854:68;;13905:1;13895:11;;;;13854:68;13950:6;13943:13;;;13016:948;;;:::o;786:148:1:-;862:4;901:25;886:40;;;:11;:40;;;;879:47;;786:148;;;:::o;8458:75:2:-;8506:19;;;;;;:::i;:::-;;;;;;;;8458:75::o;7::17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:332::-;11104:4;11142:2;11131:9;11127:18;11119:26;;11155:71;11223:1;11212:9;11208:17;11199:6;11155:71;:::i;:::-;11236:72;11304:2;11293:9;11289:18;11280:6;11236:72;:::i;:::-;10983:332;;;;;:::o;11321:180::-;11369:77;11366:1;11359:88;11466:4;11463:1;11456:15;11490:4;11487:1;11480:15;11507:167;11647:19;11643:1;11635:6;11631:14;11624:43;11507:167;:::o;11680:366::-;11822:3;11843:67;11907:2;11902:3;11843:67;:::i;:::-;11836:74;;11919:93;12008:3;11919:93;:::i;:::-;12037:2;12032:3;12028:12;12021:19;;11680:366;;;:::o;12052:419::-;12218:4;12256:2;12245:9;12241:18;12233:26;;12305:9;12299:4;12295:20;12291:1;12280:9;12276:17;12269:47;12333:131;12459:4;12333:131;:::i;:::-;12325:139;;12052:419;;;:::o;12477:148::-;12579:11;12616:3;12601:18;;12477:148;;;;:::o;12631:390::-;12737:3;12765:39;12798:5;12765:39;:::i;:::-;12820:89;12902:6;12897:3;12820:89;:::i;:::-;12813:96;;12918:65;12976:6;12971:3;12964:4;12957:5;12953:16;12918:65;:::i;:::-;13008:6;13003:3;12999:16;12992:23;;12741:280;12631:390;;;;:::o;13027:435::-;13207:3;13229:95;13320:3;13311:6;13229:95;:::i;:::-;13222:102;;13341:95;13432:3;13423:6;13341:95;:::i;:::-;13334:102;;13453:3;13446:10;;13027:435;;;;;:::o;13468:170::-;13608:22;13604:1;13596:6;13592:14;13585:46;13468:170;:::o;13644:366::-;13786:3;13807:67;13871:2;13866:3;13807:67;:::i;:::-;13800:74;;13883:93;13972:3;13883:93;:::i;:::-;14001:2;13996:3;13992:12;13985:19;;13644:366;;;:::o;14016:419::-;14182:4;14220:2;14209:9;14205:18;14197:26;;14269:9;14263:4;14259:20;14255:1;14244:9;14240:17;14233:47;14297:131;14423:4;14297:131;:::i;:::-;14289:139;;14016:419;;;:::o;14441:98::-;14492:6;14526:5;14520:12;14510:22;;14441:98;;;:::o;14545:168::-;14628:11;14662:6;14657:3;14650:19;14702:4;14697:3;14693:14;14678:29;;14545:168;;;;:::o;14719:373::-;14805:3;14833:38;14865:5;14833:38;:::i;:::-;14887:70;14950:6;14945:3;14887:70;:::i;:::-;14880:77;;14966:65;15024:6;15019:3;15012:4;15005:5;15001:16;14966:65;:::i;:::-;15056:29;15078:6;15056:29;:::i;:::-;15051:3;15047:39;15040:46;;14809:283;14719:373;;;;:::o;15098:640::-;15293:4;15331:3;15320:9;15316:19;15308:27;;15345:71;15413:1;15402:9;15398:17;15389:6;15345:71;:::i;:::-;15426:72;15494:2;15483:9;15479:18;15470:6;15426:72;:::i;:::-;15508;15576:2;15565:9;15561:18;15552:6;15508:72;:::i;:::-;15627:9;15621:4;15617:20;15612:2;15601:9;15597:18;15590:48;15655:76;15726:4;15717:6;15655:76;:::i;:::-;15647:84;;15098:640;;;;;;;:::o;15744:141::-;15800:5;15831:6;15825:13;15816:22;;15847:32;15873:5;15847:32;:::i;:::-;15744:141;;;;:::o;15891:349::-;15960:6;16009:2;15997:9;15988:7;15984:23;15980:32;15977:119;;;16015:79;;:::i;:::-;15977:119;16135:1;16160:63;16215:7;16206:6;16195:9;16191:22;16160:63;:::i;:::-;16150:73;;16106:127;15891:349;;;;:::o;16246:180::-;16294:77;16291:1;16284:88;16391:4;16388:1;16381:15;16415:4;16412:1;16405:15;16432:172;16572:24;16568:1;16560:6;16556:14;16549:48;16432:172;:::o;16610:366::-;16752:3;16773:67;16837:2;16832:3;16773:67;:::i;:::-;16766:74;;16849:93;16938:3;16849:93;:::i;:::-;16967:2;16962:3;16958:12;16951:19;;16610:366;;;:::o;16982:419::-;17148:4;17186:2;17175:9;17171:18;17163:26;;17235:9;17229:4;17225:20;17221:1;17210:9;17206:17;17199:47;17263:131;17389:4;17263:131;:::i;:::-;17255:139;;16982:419;;;:::o;17407:162::-;17547:14;17543:1;17535:6;17531:14;17524:38;17407:162;:::o;17575:366::-;17717:3;17738:67;17802:2;17797:3;17738:67;:::i;:::-;17731:74;;17814:93;17903:3;17814:93;:::i;:::-;17932:2;17927:3;17923:12;17916:19;;17575:366;;;:::o;17947:419::-;18113:4;18151:2;18140:9;18136:18;18128:26;;18200:9;18194:4;18190:20;18186:1;18175:9;18171:17;18164:47;18228:131;18354:4;18228:131;:::i;:::-;18220:139;;17947:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1487000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "31925",
								"balanceOf(address)": "2896",
								"burn(uint256)": "571",
								"getApproved(uint256)": "5275",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2626",
								"ownerOf(uint256)": "2972",
								"paused()": "2657",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "917",
								"symbol()": "infinite",
								"test1()": "infinite",
								"tokenByIndex(uint256)": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "infinite",
								"tokenURI(uint256)": "3410",
								"totalSupply()": "2552",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_increaseBalance(address,uint128)": "infinite",
								"_update(address,uint256,address)": "23"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 293,
									"end": 1253,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 425,
									"end": 521,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 521,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 425,
									"end": 521,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 425,
									"end": 521,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 425,
									"end": 521,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 425,
									"end": 521,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 425,
									"end": 521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 425,
									"end": 521,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 425,
									"end": 521,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 497,
									"end": 509,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "4372656469742D54696765720000000000000000000000000000000000000000"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "4354540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1428,
									"end": 1433,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 1425,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 1433,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 1433,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1420,
									"end": 1433,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 1433,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1420,
									"end": 1433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 1433,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1420,
									"end": 1433,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1420,
									"end": 1433,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1454,
									"end": 1461,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1444,
									"end": 1451,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1444,
									"end": 1461,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1444,
									"end": 1461,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1444,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1444,
									"end": 1461,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1444,
									"end": 1461,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1444,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1444,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1444,
									"end": 1461,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1444,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1444,
									"end": 1461,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1469,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1304,
									"end": 1330,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1304,
									"end": 1330,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1304,
									"end": 1316,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1304,
									"end": 1330,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1304,
									"end": 1330,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1304,
									"end": 1330,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1300,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1300,
									"end": 1397,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1382,
									"end": 1383,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "PUSH",
									"source": 12,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1354,
									"end": 1385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1385,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1300,
									"end": 1397,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1300,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1426,
									"end": 1438,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1407,
									"end": 1425,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1407,
									"end": 1425,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1407,
									"end": 1439,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 1447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1277,
									"end": 1282,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1267,
									"end": 1274,
									"name": "PUSH",
									"source": 13,
									"value": "A"
								},
								{
									"begin": 1267,
									"end": 1274,
									"name": "PUSH",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1267,
									"end": 1282,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 425,
									"end": 521,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2999,
									"end": 3190,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2999,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3073,
									"end": 3089,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3092,
									"end": 3098,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3073,
									"end": 3098,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3073,
									"end": 3098,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3126,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3115,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 3109,
									"end": 3115,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3109,
									"end": 3126,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3173,
									"end": 3181,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3163,
									"end": 3171,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "PUSH",
									"source": 12,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3142,
									"end": 3182,
									"name": "LOG3",
									"source": 12
								},
								{
									"begin": 3062,
									"end": 3190,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2999,
									"end": 3190,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2999,
									"end": 3190,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "77"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 17,
									"value": "77"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "78"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 17,
									"value": "78"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "84"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 17,
									"value": "84"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "89"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 17,
									"value": "89"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "92"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 17,
									"value": "92"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "97"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 17,
									"value": "97"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "101"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 17,
									"value": "101"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "102"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 17,
									"value": "102"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "104"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "105"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 17,
									"value": "105"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 17,
									"value": "104"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "108"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 17,
									"value": "108"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "110"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 17,
									"value": "110"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 17,
									"value": "10"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "113"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "114"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 17,
									"value": "114"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 17,
									"value": "113"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "115"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 17,
									"value": "115"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "118"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "119"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 17,
									"value": "119"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "120"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 17,
									"value": "120"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "117"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 17,
									"value": "118"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "121"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 17,
									"value": "121"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 17,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "124"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 17,
									"value": "124"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "125"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 17,
									"value": "125"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 17,
									"value": "117"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "128"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 17,
									"value": "128"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "130"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 17,
									"value": "130"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 1253,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122075f0a60c55f958137f151ebff34c1a89ccb5e398a8137c821f74c92b638bdb6664736f6c63430008140033",
									".code": [
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "B88D4FDE"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "C87B56DD"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "6B59084D"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "2F745C59"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "42966C68"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "4F6CCCE7"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "5C975ABB"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "81812FC"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 293,
											"end": 1253,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1066,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 1066,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 1066,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2375,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2375,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3547,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3547,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3547,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3366,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3366,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2089,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2089,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4216,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4216,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1753,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1753,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1753,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4881,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4881,
											"end": 5015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 887,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 569,
											"end": 887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 569,
											"end": 887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 569,
											"end": 887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 569,
											"end": 887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 569,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 569,
											"end": 887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2270,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2270,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1916,
											"end": 2002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1916,
											"end": 2002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2188,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2188,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 905,
											"end": 1052,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 905,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 905,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 905,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 905,
											"end": 1052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 905,
											"end": 1052,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 905,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 905,
											"end": 1052,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1910,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1910,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1910,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2464,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 2361,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2361,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2361,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2361,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2361,
											"end": 2464,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2361,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2361,
											"end": 2464,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1686,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1686,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2535,
											"end": 2630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2535,
											"end": 2630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3777,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3777,
											"end": 3923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5086,
											"end": 5297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5086,
											"end": 5297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2701,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2701,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3994,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3994,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3994,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2619,
											"end": 2839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 2619,
											"end": 2839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1176,
											"end": 1180,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 1224,
											"end": 1235,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1200,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 1200,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1200,
											"end": 1236,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 1200,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1193,
											"end": 1236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1193,
											"end": 1236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2446,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2446,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2375,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3648,
											"end": 3655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3634,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3656,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3634,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3689,
											"end": 3696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3676,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 3697,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3676,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3669,
											"end": 3697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3669,
											"end": 3697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3547,
											"end": 3705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3451,
											"end": 3458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3460,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3460,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3472,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3460,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3438,
											"end": 3473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3473,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3438,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2141,
											"end": 2148,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2178,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2168,
											"end": 2185,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2185,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2185,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2185,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4620,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4665,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4665,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4644,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4644,
											"end": 4678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4644,
											"end": 4678,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4644,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4620,
											"end": 4678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4620,
											"end": 4678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4296,
											"end": 4810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1884,
											"end": 1889,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1874,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1861,
											"end": 1962,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1942,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1944,
											"end": 1949,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 4,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1914,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1962,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1861,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1991,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1997,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1998,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2005,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 2013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4985,
											"end": 4989,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4991,
											"end": 4993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4995,
											"end": 5002,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4968,
											"end": 5007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4968,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4881,
											"end": 5015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 887,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 569,
											"end": 887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 837,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 866,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 866,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 866,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 866,
											"end": 878,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 866,
											"end": 878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 837,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 837,
											"end": 879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 837,
											"end": 879,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 837,
											"end": 879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 837,
											"end": 879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 569,
											"end": 887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2369,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2382,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2356,
											"end": 2459,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2406,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2447,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2459,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2356,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2486,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2487,
											"end": 2492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2476,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 1967,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 1994,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 2002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2292,
											"end": 2299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2278,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2300,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2278,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 905,
											"end": 1052,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 905,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 996,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 1031,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 1031,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 905,
											"end": 1052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 2126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2464,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2361,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1572,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1572,
											"end": 1585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2426,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 2453,
											"end": 2454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2426,
											"end": 2456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2426,
											"end": 2456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 2426,
											"end": 2456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2361,
											"end": 2464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1732,
											"end": 1739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2595,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2615,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2608,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2608,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3863,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3882,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3882,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3882,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 3894,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3882,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 3904,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3906,
											"end": 3914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3863,
											"end": 3915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3863,
											"end": 3915,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3863,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5200,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5213,
											"end": 5217,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5219,
											"end": 5221,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5223,
											"end": 5230,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5200,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5200,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5200,
											"end": 5231,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5200,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5265,
											"end": 5269,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5271,
											"end": 5273,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5284,
											"end": 5288,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5242,
											"end": 5289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5289,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5242,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2805,
											"end": 2812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2791,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2850,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2860,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2850,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2903,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2929,
											"end": 2936,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2929,
											"end": 2947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2906,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2878,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2871,
											"end": 2953,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2871,
											"end": 2953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2871,
											"end": 2953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4124,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4131,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4106,
											"end": 4141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1572,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1572,
											"end": 1585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2704,
											"end": 2726,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2704,
											"end": 2726,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2704,
											"end": 2726,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2700,
											"end": 2793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 2700,
											"end": 2793,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2778,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 2750,
											"end": 2781,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2781,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2700,
											"end": 2793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 2700,
											"end": 2793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 2822,
											"end": 2830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2803,
											"end": 2831,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 2803,
											"end": 2831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1445,
											"end": 1669,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1445,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1621,
											"name": "PUSH",
											"source": 4,
											"value": "780E9D6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1571,
											"end": 1621,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1571,
											"end": 1621,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1621,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1571,
											"end": 1621,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1621,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1661,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1571,
											"end": 1661,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1649,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1625,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1661,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1625,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1661,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1571,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1669,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1669,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16671,
											"end": 16921,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 16671,
											"end": 16921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16734,
											"end": 16741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16754,
											"end": 16767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16770,
											"end": 16787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16779,
											"end": 16786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16770,
											"end": 16778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 16770,
											"end": 16787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16770,
											"end": 16787,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16770,
											"end": 16787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16754,
											"end": 16787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16754,
											"end": 16787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16908,
											"end": 16913,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16901,
											"end": 16913,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16901,
											"end": 16913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16901,
											"end": 16913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16671,
											"end": 16921,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16671,
											"end": 16921,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16671,
											"end": 16921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16671,
											"end": 16921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6060,
											"end": 6189,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6060,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6130,
											"end": 6137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6060,
											"end": 6189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6060,
											"end": 6189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6060,
											"end": 6189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6060,
											"end": 6189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 672,
											"end": 770,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 672,
											"end": 770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 745,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14897,
											"end": 15019,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 14897,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14978,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 14987,
											"end": 14989,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14991,
											"end": 14998,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15000,
											"end": 15004,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15006,
											"end": 15010,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14978,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 14978,
											"end": 15011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14978,
											"end": 15011,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 14978,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14897,
											"end": 15019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14897,
											"end": 15019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14897,
											"end": 15019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14897,
											"end": 15019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 895,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 711,
											"end": 895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 846,
											"end": 853,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 895,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 711,
											"end": 895,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 711,
											"end": 895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 711,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1354,
											"end": 1471,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1354,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1412,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1450,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1450,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1463,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1450,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 2017,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1851,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1922,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1922,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1922,
											"end": 1934,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 1922,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1934,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 1934,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1911,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1918,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 1911,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1934,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 1934,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1934,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 1907,
											"end": 2010,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 1985,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1985,
											"end": 1997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 1985,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "PUSH",
											"source": 12,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1958,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1998,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 2010,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 1907,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 2017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2999,
											"end": 3190,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2999,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3089,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3118,
											"end": 3126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3173,
											"end": 3181,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3163,
											"end": 3171,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3182,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 3062,
											"end": 3190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2999,
											"end": 3190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2999,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16107,
											"end": 16428,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 16107,
											"end": 16428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16355,
											"end": 16363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16335,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16336,
											"end": 16341,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16317,
											"end": 16342,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16343,
											"end": 16351,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 16317,
											"end": 16363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16401,
											"end": 16409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16394,
											"end": 16399,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 16411,
											"end": 16419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 16379,
											"end": 16420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16379,
											"end": 16420,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 16107,
											"end": 16428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16107,
											"end": 16428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16107,
											"end": 16428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16107,
											"end": 16428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 18276,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 17471,
											"end": 18276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17605,
											"end": 17606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17588,
											"end": 17590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17588,
											"end": 17602,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17588,
											"end": 17602,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17588,
											"end": 17602,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17588,
											"end": 17606,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17584,
											"end": 18269,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17584,
											"end": 18269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 17584,
											"end": 18269,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17643,
											"end": 17645,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17627,
											"end": 17663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17663,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17664,
											"end": 17676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 17664,
											"end": 17674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 17664,
											"end": 17676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17664,
											"end": 17676,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 17664,
											"end": 17676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17678,
											"end": 17682,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17684,
											"end": 17691,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17693,
											"end": 17697,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 17627,
											"end": 17698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 17627,
											"end": 17698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 17627,
											"end": 17698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17961,
											"end": 17962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17957,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 18243,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 18243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 17940,
											"end": 18243,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18193,
											"end": 18199,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18187,
											"end": 18200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18178,
											"end": 18184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18174,
											"end": 18176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18170,
											"end": 18185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18163,
											"end": 18201,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17940,
											"end": 18243,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 17940,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 18258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17699,
											"end": 17892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 17623,
											"end": 18258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17584,
											"end": 18269,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 17584,
											"end": 18269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 18276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 18276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 18276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 18276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 18276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3210,
											"end": 3304,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3210,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3210,
											"end": 3304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3210,
											"end": 3304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 1368,
											"name": "tag",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 650,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 706,
											"end": 719,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 757,
											"end": 771,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 795,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 774,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 774,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 774,
											"end": 791,
											"name": "tag",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 774,
											"end": 791,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 774,
											"end": 795,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 757,
											"end": 795,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 757,
											"end": 795,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 810,
											"end": 830,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 850,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "tag",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "tag",
											"source": 16,
											"value": "256"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "tag",
											"source": 16,
											"value": "259"
										},
										{
											"begin": 833,
											"end": 851,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 851,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 810,
											"end": 851,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 810,
											"end": 851,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 866,
											"end": 877,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1001,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 991,
											"end": 993,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1002,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 979,
											"end": 985,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 968,
											"end": 1003,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 968,
											"end": 1003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1032,
											"end": 1322,
											"name": "tag",
											"source": 16,
											"value": "260"
										},
										{
											"begin": 1032,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1322,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1032,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1032,
											"end": 1322,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1206,
											"end": 1216,
											"name": "PUSH",
											"source": 16,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1201,
											"end": 1203,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1190,
											"end": 1204,
											"name": "MOD",
											"source": 16
										},
										{
											"begin": 1185,
											"end": 1217,
											"name": "BYTE",
											"source": 16
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1172,
											"end": 1218,
											"name": "MSTORE8",
											"source": 16
										},
										{
											"begin": 1264,
											"end": 1266,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "262"
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "263"
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 1255,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "tag",
											"source": 16,
											"value": "263"
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "tag",
											"source": 16,
											"value": "262"
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1298,
											"end": 1299,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1294,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1289,
											"end": 1299,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1032,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "260"
										},
										{
											"begin": 1285,
											"end": 1306,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1032,
											"end": 1322,
											"name": "tag",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 1032,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1343,
											"end": 1349,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1336,
											"end": 1349,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1336,
											"end": 1349,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1336,
											"end": 1349,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1336,
											"end": 1349,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1336,
											"end": 1349,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 650,
											"end": 1368,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 650,
											"end": 1368,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 650,
											"end": 1368,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 650,
											"end": 1368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1541,
											"end": 1846,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1541,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1680,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1720,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1691,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1720,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1785,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1680,
											"end": 1785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1785,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1680,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1680,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1802,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1802,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1680,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5939,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5822,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5888,
											"end": 5895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5915,
											"end": 5931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 5931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5908,
											"end": 5931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5822,
											"end": 5939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15207,
											"end": 15888,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 15207,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15369,
											"end": 15378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15369,
											"end": 15400,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15369,
											"end": 15400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 15369,
											"end": 15400,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15369,
											"end": 15400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15398,
											"end": 15399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15382,
											"end": 15386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15369,
											"end": 15400,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 15369,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15365,
											"end": 15839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15365,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 15365,
											"end": 15839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15417,
											"end": 15430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15433,
											"end": 15455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 15447,
											"end": 15454,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 15433,
											"end": 15455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15433,
											"end": 15455,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 15433,
											"end": 15455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15417,
											"end": 15455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15417,
											"end": 15455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15602,
											"end": 15603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15586,
											"end": 15604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15586,
											"end": 15604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15586,
											"end": 15604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15604,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15621,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 15586,
											"end": 15621,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15617,
											"end": 15621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15608,
											"end": 15621,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15608,
											"end": 15621,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15608,
											"end": 15613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15608,
											"end": 15621,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15608,
											"end": 15621,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15608,
											"end": 15621,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15608,
											"end": 15621,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15621,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 15586,
											"end": 15621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15655,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15655,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 15586,
											"end": 15655,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15626,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 15643,
											"end": 15648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15650,
											"end": 15654,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15626,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 15626,
											"end": 15655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15626,
											"end": 15655,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 15626,
											"end": 15655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15625,
											"end": 15655,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15586,
											"end": 15655,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 15586,
											"end": 15655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15582,
											"end": 15729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15749,
											"end": 15758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15745,
											"end": 15828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15745,
											"end": 15828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 15745,
											"end": 15828,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15804,
											"end": 15811,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15800,
											"end": 15802,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15793,
											"end": 15798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15784,
											"end": 15812,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15745,
											"end": 15828,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 15745,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15402,
											"end": 15839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15365,
											"end": 15839,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 15365,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15867,
											"end": 15874,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15851,
											"end": 15880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15207,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15207,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15207,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15207,
											"end": 15888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15207,
											"end": 15888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2628,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2509,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "PUSH",
											"source": 4,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 2567,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2596,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 2607,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 2607,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2620,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 2607,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13016,
											"end": 13964,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 13016,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13103,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13106,
											"end": 13107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13107,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13089,
											"end": 13107,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13156,
											"end": 13164,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 13147,
											"end": 13152,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13147,
											"end": 13164,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13143,
											"end": 13249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 13143,
											"end": 13249,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13194,
											"end": 13202,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 13185,
											"end": 13202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13185,
											"end": 13202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13231,
											"end": 13233,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13221,
											"end": 13233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13221,
											"end": 13233,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13221,
											"end": 13233,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13221,
											"end": 13233,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13143,
											"end": 13249,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 13143,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13276,
											"end": 13284,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 13267,
											"end": 13272,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13267,
											"end": 13284,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13263,
											"end": 13369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 13263,
											"end": 13369,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13314,
											"end": 13322,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 13305,
											"end": 13322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13305,
											"end": 13322,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13351,
											"end": 13353,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13341,
											"end": 13353,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13341,
											"end": 13353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13341,
											"end": 13353,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13341,
											"end": 13353,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13263,
											"end": 13369,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 13263,
											"end": 13369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13396,
											"end": 13404,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 13387,
											"end": 13392,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13387,
											"end": 13404,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13383,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 13383,
											"end": 13489,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13442,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 13425,
											"end": 13442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13471,
											"end": 13473,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 13461,
											"end": 13473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13461,
											"end": 13473,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13461,
											"end": 13473,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13461,
											"end": 13473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13383,
											"end": 13489,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 13383,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13516,
											"end": 13523,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 13507,
											"end": 13512,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13507,
											"end": 13523,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13503,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 13503,
											"end": 13606,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13553,
											"end": 13560,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 13544,
											"end": 13560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13560,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13589,
											"end": 13590,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 13579,
											"end": 13590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13579,
											"end": 13590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13579,
											"end": 13590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13579,
											"end": 13590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13503,
											"end": 13606,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 13503,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13633,
											"end": 13640,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 13624,
											"end": 13629,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13624,
											"end": 13640,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13620,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 13620,
											"end": 13723,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13670,
											"end": 13677,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 13661,
											"end": 13677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13706,
											"end": 13707,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13696,
											"end": 13707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13696,
											"end": 13707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13696,
											"end": 13707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13696,
											"end": 13707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13620,
											"end": 13723,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 13620,
											"end": 13723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13750,
											"end": 13757,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 13741,
											"end": 13746,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13741,
											"end": 13757,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13737,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 13737,
											"end": 13840,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13787,
											"end": 13794,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 13778,
											"end": 13794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13778,
											"end": 13794,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13823,
											"end": 13824,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13813,
											"end": 13824,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13813,
											"end": 13824,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13813,
											"end": 13824,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13813,
											"end": 13824,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13737,
											"end": 13840,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 13737,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13867,
											"end": 13874,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 13858,
											"end": 13863,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13858,
											"end": 13874,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13854,
											"end": 13922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 13854,
											"end": 13922,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13905,
											"end": 13906,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13895,
											"end": 13906,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13895,
											"end": 13906,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13895,
											"end": 13906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13895,
											"end": 13906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13854,
											"end": 13922,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 13854,
											"end": 13922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13950,
											"end": 13956,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 13956,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 13956,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 13956,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13964,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13964,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13964,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13016,
											"end": 13964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 786,
											"end": 934,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 786,
											"end": 934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 886,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 926,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 886,
											"end": 926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 886,
											"end": 897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 886,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 926,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 886,
											"end": 926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 886,
											"end": 926,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 879,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 879,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 786,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 786,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8458,
											"end": 8533,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 8458,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "PUSH",
											"source": 2,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 8506,
											"end": 8525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8525,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 8458,
											"end": 8533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "385"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 17,
											"value": "385"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "387"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 17,
											"value": "387"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "399"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 17,
											"value": "399"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10983,
											"end": 11315,
											"name": "tag",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 10983,
											"end": 11315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11104,
											"end": 11108,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11142,
											"end": 11144,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 11131,
											"end": 11140,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11127,
											"end": 11145,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11119,
											"end": 11145,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11119,
											"end": 11145,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11155,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 11223,
											"end": 11224,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11212,
											"end": 11221,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11208,
											"end": 11225,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11199,
											"end": 11205,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11155,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 11155,
											"end": 11226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11155,
											"end": 11226,
											"name": "tag",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 11155,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11236,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 11304,
											"end": 11306,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11293,
											"end": 11302,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11289,
											"end": 11307,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11280,
											"end": 11286,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11236,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 11236,
											"end": 11308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11236,
											"end": 11308,
											"name": "tag",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 11236,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10983,
											"end": 11315,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 10983,
											"end": 11315,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10983,
											"end": 11315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10983,
											"end": 11315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10983,
											"end": 11315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10983,
											"end": 11315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11321,
											"end": 11501,
											"name": "tag",
											"source": 17,
											"value": "155"
										},
										{
											"begin": 11321,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11369,
											"end": 11446,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11366,
											"end": 11367,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11447,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11466,
											"end": 11470,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 11463,
											"end": 11464,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 11456,
											"end": 11471,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11490,
											"end": 11494,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11487,
											"end": 11488,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11480,
											"end": 11495,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11507,
											"end": 11674,
											"name": "tag",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 11507,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11647,
											"end": 11666,
											"name": "PUSH",
											"source": 17,
											"value": "43726564697454696765722E7465737431000000000000000000000000000000"
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11635,
											"end": 11641,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11631,
											"end": 11645,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11624,
											"end": 11667,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11507,
											"end": 11674,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11507,
											"end": 11674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11680,
											"end": 12046,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 11680,
											"end": 12046,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11822,
											"end": 11825,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11843,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 11907,
											"end": 11909,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 11902,
											"end": 11905,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11843,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 11843,
											"end": 11910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11843,
											"end": 11910,
											"name": "tag",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 11843,
											"end": 11910,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11836,
											"end": 11910,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11836,
											"end": 11910,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11919,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 12008,
											"end": 12011,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11919,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 11919,
											"end": 12012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11919,
											"end": 12012,
											"name": "tag",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 11919,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12037,
											"end": 12039,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12032,
											"end": 12035,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12028,
											"end": 12040,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12021,
											"end": 12040,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12021,
											"end": 12040,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11680,
											"end": 12046,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11680,
											"end": 12046,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11680,
											"end": 12046,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11680,
											"end": 12046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12471,
											"name": "tag",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 12052,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12218,
											"end": 12222,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12256,
											"end": 12258,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12245,
											"end": 12254,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12241,
											"end": 12259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12233,
											"end": 12259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12233,
											"end": 12259,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12305,
											"end": 12314,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12299,
											"end": 12303,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12295,
											"end": 12315,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12291,
											"end": 12292,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12280,
											"end": 12289,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12276,
											"end": 12293,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12269,
											"end": 12316,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12333,
											"end": 12464,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 12459,
											"end": 12463,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12333,
											"end": 12464,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 12333,
											"end": 12464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12333,
											"end": 12464,
											"name": "tag",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 12333,
											"end": 12464,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12325,
											"end": 12464,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12325,
											"end": 12464,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12471,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12477,
											"end": 12625,
											"name": "tag",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 12477,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12579,
											"end": 12590,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12616,
											"end": 12619,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12601,
											"end": 12619,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12601,
											"end": 12619,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12477,
											"end": 12625,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12477,
											"end": 12625,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12477,
											"end": 12625,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12477,
											"end": 12625,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12477,
											"end": 12625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12631,
											"end": 13021,
											"name": "tag",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 12631,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12737,
											"end": 12740,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12765,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 12798,
											"end": 12803,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12765,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 12765,
											"end": 12804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12765,
											"end": 12804,
											"name": "tag",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 12765,
											"end": 12804,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12820,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 12902,
											"end": 12908,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12897,
											"end": 12900,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12820,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 12820,
											"end": 12909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12820,
											"end": 12909,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 12820,
											"end": 12909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12813,
											"end": 12909,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 12813,
											"end": 12909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12918,
											"end": 12983,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 12976,
											"end": 12982,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12971,
											"end": 12974,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12964,
											"end": 12968,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12957,
											"end": 12962,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12953,
											"end": 12969,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12918,
											"end": 12983,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 12918,
											"end": 12983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12918,
											"end": 12983,
											"name": "tag",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 12918,
											"end": 12983,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13008,
											"end": 13014,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13003,
											"end": 13006,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12999,
											"end": 13015,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12992,
											"end": 13015,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12992,
											"end": 13015,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12741,
											"end": 13021,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12631,
											"end": 13021,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12631,
											"end": 13021,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12631,
											"end": 13021,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12631,
											"end": 13021,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12631,
											"end": 13021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13027,
											"end": 13462,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 13027,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13207,
											"end": 13210,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13324,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 13320,
											"end": 13323,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13311,
											"end": 13317,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13229,
											"end": 13324,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 13229,
											"end": 13324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13229,
											"end": 13324,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 13229,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13324,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13324,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13341,
											"end": 13436,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 13432,
											"end": 13435,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13423,
											"end": 13429,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13341,
											"end": 13436,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 13341,
											"end": 13436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13341,
											"end": 13436,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 13341,
											"end": 13436,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13334,
											"end": 13436,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13334,
											"end": 13436,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13453,
											"end": 13456,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13456,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13446,
											"end": 13456,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13027,
											"end": 13462,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13027,
											"end": 13462,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13027,
											"end": 13462,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13027,
											"end": 13462,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13027,
											"end": 13462,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13027,
											"end": 13462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13468,
											"end": 13638,
											"name": "tag",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 13468,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13608,
											"end": 13630,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732315061757361626C652E7465737431000000000000000000000000"
										},
										{
											"begin": 13604,
											"end": 13605,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13596,
											"end": 13602,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13592,
											"end": 13606,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13585,
											"end": 13631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13468,
											"end": 13638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13468,
											"end": 13638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13786,
											"end": 13789,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13807,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 13866,
											"end": 13869,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13807,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 13807,
											"end": 13874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13807,
											"end": 13874,
											"name": "tag",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 13807,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13800,
											"end": 13874,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13800,
											"end": 13874,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13883,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 13972,
											"end": 13975,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13883,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 13883,
											"end": 13976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13883,
											"end": 13976,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 13883,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14001,
											"end": 14003,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 13999,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13992,
											"end": 14004,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13985,
											"end": 14004,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13985,
											"end": 14004,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13644,
											"end": 14010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14182,
											"end": 14186,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14222,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14197,
											"end": 14223,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14197,
											"end": 14223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14269,
											"end": 14278,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14263,
											"end": 14267,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14259,
											"end": 14279,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14255,
											"end": 14256,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14244,
											"end": 14253,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14240,
											"end": 14257,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14280,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14297,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 14423,
											"end": 14427,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14297,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 14297,
											"end": 14428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14297,
											"end": 14428,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 14297,
											"end": 14428,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14289,
											"end": 14428,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14289,
											"end": 14428,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14016,
											"end": 14435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14441,
											"end": 14539,
											"name": "tag",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 14441,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14492,
											"end": 14498,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14531,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14520,
											"end": 14532,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14510,
											"end": 14532,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14510,
											"end": 14532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14441,
											"end": 14539,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14441,
											"end": 14539,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14441,
											"end": 14539,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14441,
											"end": 14539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14545,
											"end": 14713,
											"name": "tag",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 14545,
											"end": 14713,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14628,
											"end": 14639,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14662,
											"end": 14668,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14657,
											"end": 14660,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14650,
											"end": 14669,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14702,
											"end": 14706,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14697,
											"end": 14700,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14693,
											"end": 14707,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14678,
											"end": 14707,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14678,
											"end": 14707,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14545,
											"end": 14713,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14545,
											"end": 14713,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14545,
											"end": 14713,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14545,
											"end": 14713,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14545,
											"end": 14713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "tag",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14805,
											"end": 14808,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14833,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 14865,
											"end": 14870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14833,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 14833,
											"end": 14871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14833,
											"end": 14871,
											"name": "tag",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 14833,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 14950,
											"end": 14956,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14945,
											"end": 14948,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 14887,
											"end": 14957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "tag",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14880,
											"end": 14957,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 14880,
											"end": 14957,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14966,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 15024,
											"end": 15030,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15019,
											"end": 15022,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15012,
											"end": 15016,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15005,
											"end": 15010,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 15001,
											"end": 15017,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14966,
											"end": 15031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 14966,
											"end": 15031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14966,
											"end": 15031,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 14966,
											"end": 15031,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15056,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 15078,
											"end": 15084,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15056,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 15056,
											"end": 15085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15056,
											"end": 15085,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 15056,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15051,
											"end": 15054,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15047,
											"end": 15086,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15040,
											"end": 15086,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15040,
											"end": 15086,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14809,
											"end": 15092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14719,
											"end": 15092,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14719,
											"end": 15092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15738,
											"name": "tag",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 15098,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15293,
											"end": 15297,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15331,
											"end": 15334,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 15320,
											"end": 15329,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15316,
											"end": 15335,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15308,
											"end": 15335,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15308,
											"end": 15335,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15345,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 15413,
											"end": 15414,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15402,
											"end": 15411,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15398,
											"end": 15415,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15389,
											"end": 15395,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 15345,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 15345,
											"end": 15416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15345,
											"end": 15416,
											"name": "tag",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 15345,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15426,
											"end": 15498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 15494,
											"end": 15496,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15483,
											"end": 15492,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15479,
											"end": 15497,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15470,
											"end": 15476,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 15426,
											"end": 15498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 15426,
											"end": 15498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15426,
											"end": 15498,
											"name": "tag",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 15426,
											"end": 15498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15508,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 15576,
											"end": 15578,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 15565,
											"end": 15574,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15561,
											"end": 15579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15552,
											"end": 15558,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15508,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 15508,
											"end": 15580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15508,
											"end": 15580,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 15508,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15627,
											"end": 15636,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15621,
											"end": 15625,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15617,
											"end": 15637,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15612,
											"end": 15614,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 15601,
											"end": 15610,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15597,
											"end": 15615,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15590,
											"end": 15638,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15655,
											"end": 15731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 15726,
											"end": 15730,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15717,
											"end": 15723,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15655,
											"end": 15731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 15655,
											"end": 15731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15655,
											"end": 15731,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 15655,
											"end": 15731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15647,
											"end": 15731,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15647,
											"end": 15731,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15738,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15738,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15098,
											"end": 15738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15744,
											"end": 15885,
											"name": "tag",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 15744,
											"end": 15885,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15800,
											"end": 15805,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15831,
											"end": 15837,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15825,
											"end": 15838,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 15816,
											"end": 15838,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15816,
											"end": 15838,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15847,
											"end": 15879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 15873,
											"end": 15878,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15847,
											"end": 15879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 15847,
											"end": 15879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15847,
											"end": 15879,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 15847,
											"end": 15879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15744,
											"end": 15885,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15744,
											"end": 15885,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15744,
											"end": 15885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15744,
											"end": 15885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15744,
											"end": 15885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15891,
											"end": 16240,
											"name": "tag",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 15891,
											"end": 16240,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15960,
											"end": 15966,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16009,
											"end": 16011,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15997,
											"end": 16006,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15988,
											"end": 15995,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15984,
											"end": 16007,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15980,
											"end": 16012,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 15977,
											"end": 16096,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15977,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 15977,
											"end": 16096,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16015,
											"end": 16094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 16015,
											"end": 16094,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 16015,
											"end": 16094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16015,
											"end": 16094,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 16015,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15977,
											"end": 16096,
											"name": "tag",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 15977,
											"end": 16096,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16135,
											"end": 16136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16160,
											"end": 16223,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 16215,
											"end": 16222,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16206,
											"end": 16212,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16195,
											"end": 16204,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16191,
											"end": 16213,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16160,
											"end": 16223,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 16160,
											"end": 16223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16160,
											"end": 16223,
											"name": "tag",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 16160,
											"end": 16223,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16150,
											"end": 16223,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16150,
											"end": 16223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16106,
											"end": 16233,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15891,
											"end": 16240,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15891,
											"end": 16240,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15891,
											"end": 16240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15891,
											"end": 16240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15891,
											"end": 16240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16246,
											"end": 16426,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 16246,
											"end": 16426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16294,
											"end": 16371,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16291,
											"end": 16292,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16284,
											"end": 16372,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16391,
											"end": 16395,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 16388,
											"end": 16389,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 16381,
											"end": 16396,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16415,
											"end": 16419,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 16412,
											"end": 16413,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16405,
											"end": 16420,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 16432,
											"end": 16604,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 16432,
											"end": 16604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16572,
											"end": 16596,
											"name": "PUSH",
											"source": 17,
											"value": "455243373231456E756D657261626C652E746573743100000000000000000000"
										},
										{
											"begin": 16568,
											"end": 16569,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16560,
											"end": 16566,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16556,
											"end": 16570,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16549,
											"end": 16597,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16432,
											"end": 16604,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16432,
											"end": 16604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16610,
											"end": 16976,
											"name": "tag",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 16610,
											"end": 16976,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16752,
											"end": 16755,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16773,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 16837,
											"end": 16839,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 16832,
											"end": 16835,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16773,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 16773,
											"end": 16840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16773,
											"end": 16840,
											"name": "tag",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 16773,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16766,
											"end": 16840,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16766,
											"end": 16840,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16849,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 16938,
											"end": 16941,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16849,
											"end": 16942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 16849,
											"end": 16942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16849,
											"end": 16942,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 16849,
											"end": 16942,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16967,
											"end": 16969,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16962,
											"end": 16965,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16958,
											"end": 16970,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16951,
											"end": 16970,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16951,
											"end": 16970,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16610,
											"end": 16976,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16610,
											"end": 16976,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16610,
											"end": 16976,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16610,
											"end": 16976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16982,
											"end": 17401,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 16982,
											"end": 17401,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17148,
											"end": 17152,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17186,
											"end": 17188,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17175,
											"end": 17184,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17171,
											"end": 17189,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17163,
											"end": 17189,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17163,
											"end": 17189,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17235,
											"end": 17244,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17229,
											"end": 17233,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17225,
											"end": 17245,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17221,
											"end": 17222,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17210,
											"end": 17219,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17206,
											"end": 17223,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17199,
											"end": 17246,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17394,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 17389,
											"end": 17393,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17394,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 17263,
											"end": 17394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17394,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 17263,
											"end": 17394,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17255,
											"end": 17394,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17255,
											"end": 17394,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16982,
											"end": 17401,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16982,
											"end": 17401,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16982,
											"end": 17401,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16982,
											"end": 17401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17407,
											"end": 17569,
											"name": "tag",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 17407,
											"end": 17569,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17547,
											"end": 17561,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732312E74657374310000000000000000000000000000000000000000"
										},
										{
											"begin": 17543,
											"end": 17544,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17535,
											"end": 17541,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17531,
											"end": 17545,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17524,
											"end": 17562,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17407,
											"end": 17569,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17407,
											"end": 17569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17575,
											"end": 17941,
											"name": "tag",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 17575,
											"end": 17941,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17717,
											"end": 17720,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17738,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 17802,
											"end": 17804,
											"name": "PUSH",
											"source": 17,
											"value": "C"
										},
										{
											"begin": 17797,
											"end": 17800,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17738,
											"end": 17805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 17738,
											"end": 17805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17738,
											"end": 17805,
											"name": "tag",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 17738,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17731,
											"end": 17805,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17731,
											"end": 17805,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17814,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 17903,
											"end": 17906,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17814,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 17814,
											"end": 17907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17814,
											"end": 17907,
											"name": "tag",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 17814,
											"end": 17907,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17932,
											"end": 17934,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17927,
											"end": 17930,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17916,
											"end": 17935,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17916,
											"end": 17935,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17575,
											"end": 17941,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17575,
											"end": 17941,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17575,
											"end": 17941,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17575,
											"end": 17941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17947,
											"end": 18366,
											"name": "tag",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 17947,
											"end": 18366,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18113,
											"end": 18117,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18151,
											"end": 18153,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18140,
											"end": 18149,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18136,
											"end": 18154,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18128,
											"end": 18154,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18128,
											"end": 18154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18200,
											"end": 18209,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18194,
											"end": 18198,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18190,
											"end": 18210,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 18186,
											"end": 18187,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18175,
											"end": 18184,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18171,
											"end": 18188,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18164,
											"end": 18211,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18228,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 18354,
											"end": 18358,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18228,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 18228,
											"end": 18359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18228,
											"end": 18359,
											"name": "tag",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 18228,
											"end": 18359,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18220,
											"end": 18359,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18220,
											"end": 18359,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17947,
											"end": 18366,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17947,
											"end": 18366,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17947,
											"end": 18366,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17947,
											"end": 18366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT/Context.sol",
								"contracts/MyNFT/ERC165.sol",
								"contracts/MyNFT/ERC721.sol",
								"contracts/MyNFT/ERC721Burnable.sol",
								"contracts/MyNFT/ERC721Enumerable.sol",
								"contracts/MyNFT/ERC721Pausable.sol",
								"contracts/MyNFT/IERC165.sol",
								"contracts/MyNFT/IERC721.sol",
								"contracts/MyNFT/IERC721Enumerable.sol",
								"contracts/MyNFT/IERC721Metadata.sol",
								"contracts/MyNFT/IERC721Receiver.sol",
								"contracts/MyNFT/Math.sol",
								"contracts/MyNFT/Ownable.sol",
								"contracts/MyNFT/Pausable.sol",
								"contracts/MyNFT/PudgyPenguins.sol",
								"contracts/MyNFT/SignedMath.sol",
								"contracts/MyNFT/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"test1()": "6b59084d",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/PudgyPenguins.sol\":\"CreditTiger\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]},\"contracts/MyNFT/ERC165.sol\":{\"keccak256\":\"0x7aed03d98a53f17e5a68a62174f6420b171396212591d70ea14de02288b67f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5470ce085206f2ef4abd26c5939d7acca97cd14740d6aa45ce0122a129725c9f\",\"dweb:/ipfs/QmeJPw1HXgpJep8yEBKuAYrN58jzKqaodNxZp2VbdhURUW\"]},\"contracts/MyNFT/ERC721.sol\":{\"keccak256\":\"0x35086eeddfa259687345768c197182ae46e4710e328e32bc87e3a7e62da98f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5362ed9655f2403638747ec24c9dec5b5ead72b2b40563e2274d2ac7799f2a16\",\"dweb:/ipfs/QmdRSwvqZM3DVUnRtEPdhFCoCPvYbME5YpVzdEDoNyJnVj\"]},\"contracts/MyNFT/ERC721Burnable.sol\":{\"keccak256\":\"0xe866a3d0810df462115dd743c18f8280dd3a2b5cf9f813971000cfd40adaa42d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86e75e659bfaaf8e2827322296da4ee004eac3b5b1bc3e44ec3d441b393703a8\",\"dweb:/ipfs/Qmf1Zg1FcW6g73kGqdzXSfLnoQKGXTFz8fzFcfMc67U9j1\"]},\"contracts/MyNFT/ERC721Enumerable.sol\":{\"keccak256\":\"0xe8a5628ee737b2fa0f12f363ec7c67f5822fe9c0419fd9db33e5ff38a65ea352\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7e8f3b845b9920f93c6ce10067bc2ca35bc87995b9b8f3491c6146f3152e0b8\",\"dweb:/ipfs/QmbHz7MmmmewD5mMkhnPBuKoeAbwRtaE9RDwvSLGDnWyTf\"]},\"contracts/MyNFT/ERC721Pausable.sol\":{\"keccak256\":\"0xdb81fb65e088b3b1bcb09ac26dc3d0972ba52ea294cfb2edfec468ff74d55142\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99096a3826e707f1400d2bafc2643ec5b24f985a6cb29653e74dcaf884b8d923\",\"dweb:/ipfs/QmTYUeng4SFCkC5ihL9F2ry4TCNWUURZ1dnL5D5LJHEVEp\"]},\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]},\"contracts/MyNFT/IERC721.sol\":{\"keccak256\":\"0x3eee01fcae8d1016234ed8daaf3d809346631e18f88d7e5d6aa4901eeaa9410e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b77dfe18c30eb4343a04645c707a0a61eb58c608ec583f087b4c5b525786823\",\"dweb:/ipfs/QmYNryzjZvjRH6LKxmZ2vChismEZjVV7Ev773hrVqwWHZi\"]},\"contracts/MyNFT/IERC721Enumerable.sol\":{\"keccak256\":\"0xe1cea390b7744cb84369e27a4a6eefabd1417bf562f141e9561adc75b6ada439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e18abf44535809e9be807fabb13fa8398a106265e654b3b4ed4d7deaf2df6c21\",\"dweb:/ipfs/QmYojHTVa6peYzBC1faw4HfvceUM6uPnDWHbAe6L6p15SD\"]},\"contracts/MyNFT/IERC721Metadata.sol\":{\"keccak256\":\"0x17c6c817a8c8d238ed69161fe51dcc6e0ce4586852a57a12833a122388c24a22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cdb49797ef9274d63fcae9cb4068356bdbb423264de6cb638c5b9780f7c093a\",\"dweb:/ipfs/Qmf3V7g1dGzYCgeGBHMhKQP8Dwv13U1iqMUPAuE5MwJ2wD\"]},\"contracts/MyNFT/IERC721Receiver.sol\":{\"keccak256\":\"0xdb4be0729937bf75572b7ed92840a96437191a0eb9d4b4d31e15ad08b71c0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b322470865a9b71aa3455a5e87b10493e340163b9e88913f292acf240c9cc640\",\"dweb:/ipfs/QmWpABMQGtETHmd1x9YyfUrT3sYkNuQoh7hqJwKEz13CcD\"]},\"contracts/MyNFT/Math.sol\":{\"keccak256\":\"0xa623136c8fcaf1b60612023600dd1d2d7e43fa9b1b3d8ec2f8982f1d9cb2d29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c13a5c89ac90ab7717be1decb485f20fb1b6ff65de143874ee483edaa400c63\",\"dweb:/ipfs/QmXd8gpCre1YwKBmDzHWMvSn6N72GdiZP31W6ZD5fkHFZ4\"]},\"contracts/MyNFT/Ownable.sol\":{\"keccak256\":\"0x089d819b25b18c70708dbaf304a74c1b76bad98f5bdde7b40fbcbceec85e8e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e04628d8e82e44c940e0d3712bbc284f9e222680243daeae0f1c14d108059455\",\"dweb:/ipfs/QmV5fXknwRBYQme3r1g7jFeEg1BvZ1MdBTmxUd7ZbGYgcj\"]},\"contracts/MyNFT/Pausable.sol\":{\"keccak256\":\"0x25134c8284bd36504728d29294ed4a8515f7d4ea1f9c7462f2e80bc11ac09a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a23f17a2b2754000758abd5b794b0e17afb96bc62d1311860e4f3b24c75ee87b\",\"dweb:/ipfs/Qmc1ak2fd2NtY14gWhqWjoRaQYAR2R8vCKCiqRW6X8nV4C\"]},\"contracts/MyNFT/PudgyPenguins.sol\":{\"keccak256\":\"0x12c9ed510621a58a5e344182cbea348c61491534b6ac280c1874b74f18bd5d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c06600db8ebc76b45b6da899d76a1e90efabe80aa53eadfe4885fef7481a9e69\",\"dweb:/ipfs/QmXZoPAgJsvkLDwzEeJtss6XTABePw4S9XbVdsN39Ktoms\"]},\"contracts/MyNFT/SignedMath.sol\":{\"keccak256\":\"0xe806d50010e8783c4d5efe2195adf7f645b767007b6a1adede350f2100418faa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29a21325c42d0de6b486f00c7cdbd8415a562d5462b4be1cfb225ef9b5af4a83\",\"dweb:/ipfs/QmTn5x1DhCYjFZTpYjh9jfguw1SoN3Rd5r9BeHqY8Fjpqr\"]},\"contracts/MyNFT/Strings.sol\":{\"keccak256\":\"0xa6d8609d1887df5e4cba1f758125cd0d420b08d164822dde7d90467fc66d71e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58d9f6370d00ddef5e7541d2dc6c5ae20f9fdaf9b8e2b67d6e14746156e200a\",\"dweb:/ipfs/QmfFQojHWkH9Danyo1M69rqiFJMgwSH9zhda8ryXunwXeQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 84,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 88,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 92,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 96,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 102,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1034,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1038,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1041,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1045,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2733,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_owner",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 2881,
								"contract": "contracts/MyNFT/PudgyPenguins.sol:CreditTiger",
								"label": "_paused",
								"offset": 20,
								"slot": "10",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Demo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "DemoTest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT/PudgyPenguins.sol\":1257:1365  contract  Demo {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1257:1365  contract  Demo {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaf74e9f7\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1279:1362  function DemoTest(address addr) public {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1341:1345  addr */\n      dup1\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1329:1352  CreditTiger(addr).test1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6b59084d\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1329:1354  CreditTiger(addr).test1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyNFT/PudgyPenguins.sol\":1279:1362  function DemoTest(address addr) public {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_13:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_15:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_16:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_25\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_15\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_17:\n        /* \"#utility.yul\":641:665   */\n      tag_27\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_16\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_28:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_18:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_30\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_17\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_6:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_32\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_33\n      tag_13\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":917:1036   */\n    tag_32:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_34\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_18\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201806ba0cfc26838655e41feb424aab24904650bf57d584e5eeb92c4e4857c53f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506101668061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063af74e9f71461002d575b5f80fd5b61004760048036038101906100429190610105565b610049565b005b8073ffffffffffffffffffffffffffffffffffffffff16636b59084d6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561008e575f80fd5b505af11580156100a0573d5f803e3d5ffd5b5050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100d4826100ab565b9050919050565b6100e4816100ca565b81146100ee575f80fd5b50565b5f813590506100ff816100db565b92915050565b5f6020828403121561011a576101196100a7565b5b5f610127848285016100f1565b9150509291505056fea26469706673582212201806ba0cfc26838655e41feb424aab24904650bf57d584e5eeb92c4e4857c53f64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF74E9F7 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x105 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6B59084D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD4 DUP3 PUSH2 0xAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4 DUP2 PUSH2 0xCA JUMP JUMPDEST DUP2 EQ PUSH2 0xEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFF DUP2 PUSH2 0xDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0xA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127 DUP5 DUP3 DUP6 ADD PUSH2 0xF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR MOD 0xBA 0xC 0xFC 0x26 DUP4 DUP7 SSTORE 0xE4 0x1F 0xEB TIMESTAMP 0x4A 0xAB 0x24 SWAP1 CHAINID POP 0xBF JUMPI 0xD5 DUP5 0xE5 0xEE 0xB9 0x2C 0x4E BASEFEE JUMPI 0xC5 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1257:108:14:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DemoTest_3097": {
									"entryPoint": 73,
									"id": 3097,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1173:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:17",
														"type": ""
													}
												],
												"src": "334:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:17",
														"type": ""
													}
												],
												"src": "466:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:17"
															},
															"nodeType": "YulIf",
															"src": "621:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:17",
														"type": ""
													}
												],
												"src": "568:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:17",
														"type": ""
													}
												],
												"src": "696:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:17"
															},
															"nodeType": "YulIf",
															"src": "917:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:17",
														"type": ""
													}
												],
												"src": "841:329:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063af74e9f71461002d575b5f80fd5b61004760048036038101906100429190610105565b610049565b005b8073ffffffffffffffffffffffffffffffffffffffff16636b59084d6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561008e575f80fd5b505af11580156100a0573d5f803e3d5ffd5b5050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100d4826100ab565b9050919050565b6100e4816100ca565b81146100ee575f80fd5b50565b5f813590506100ff816100db565b92915050565b5f6020828403121561011a576101196100a7565b5b5f610127848285016100f1565b9150509291505056fea26469706673582212201806ba0cfc26838655e41feb424aab24904650bf57d584e5eeb92c4e4857c53f64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF74E9F7 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x105 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6B59084D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD4 DUP3 PUSH2 0xAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4 DUP2 PUSH2 0xCA JUMP JUMPDEST DUP2 EQ PUSH2 0xEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFF DUP2 PUSH2 0xDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0xA7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x127 DUP5 DUP3 DUP6 ADD PUSH2 0xF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR MOD 0xBA 0xC 0xFC 0x26 DUP4 DUP7 SSTORE 0xE4 0x1F 0xEB TIMESTAMP 0x4A 0xAB 0x24 SWAP1 CHAINID POP 0xBF JUMPI 0xD5 DUP5 0xE5 0xEE 0xB9 0x2C 0x4E BASEFEE JUMPI 0xC5 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1257:108:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1341:4;1329:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:83;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "71600",
								"executionCost": "121",
								"totalCost": "71721"
							},
							"external": {
								"DemoTest(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1257,
									"end": 1365,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1257,
									"end": 1365,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201806ba0cfc26838655e41feb424aab24904650bf57d584e5eeb92c4e4857c53f64736f6c63430008140033",
									".code": [
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH",
											"source": 14,
											"value": "AF74E9F7"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1257,
											"end": 1365,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1279,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1279,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1341,
											"end": 1345,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "PUSH",
											"source": 14,
											"value": "6B59084D"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1329,
											"end": 1354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1279,
											"end": 1362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT/Context.sol",
								"contracts/MyNFT/ERC165.sol",
								"contracts/MyNFT/ERC721.sol",
								"contracts/MyNFT/ERC721Burnable.sol",
								"contracts/MyNFT/ERC721Enumerable.sol",
								"contracts/MyNFT/ERC721Pausable.sol",
								"contracts/MyNFT/IERC165.sol",
								"contracts/MyNFT/IERC721.sol",
								"contracts/MyNFT/IERC721Enumerable.sol",
								"contracts/MyNFT/IERC721Metadata.sol",
								"contracts/MyNFT/IERC721Receiver.sol",
								"contracts/MyNFT/Math.sol",
								"contracts/MyNFT/Ownable.sol",
								"contracts/MyNFT/Pausable.sol",
								"contracts/MyNFT/PudgyPenguins.sol",
								"contracts/MyNFT/SignedMath.sol",
								"contracts/MyNFT/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DemoTest(address)": "af74e9f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"DemoTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/PudgyPenguins.sol\":\"Demo\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Context.sol\":{\"keccak256\":\"0x47f10494606b86ed149dcaad74cb401ad9311696f14689410c45c7330e3f34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f393625f893d7c666e014fd8e9b8cf59f7fe21b030f80f571d892006cdd77e6\",\"dweb:/ipfs/QmQVtX3R1LqVz2KVyzsRmVM6Zgkf9acU4Cn2hhXxYYev9U\"]},\"contracts/MyNFT/ERC165.sol\":{\"keccak256\":\"0x7aed03d98a53f17e5a68a62174f6420b171396212591d70ea14de02288b67f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5470ce085206f2ef4abd26c5939d7acca97cd14740d6aa45ce0122a129725c9f\",\"dweb:/ipfs/QmeJPw1HXgpJep8yEBKuAYrN58jzKqaodNxZp2VbdhURUW\"]},\"contracts/MyNFT/ERC721.sol\":{\"keccak256\":\"0x35086eeddfa259687345768c197182ae46e4710e328e32bc87e3a7e62da98f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5362ed9655f2403638747ec24c9dec5b5ead72b2b40563e2274d2ac7799f2a16\",\"dweb:/ipfs/QmdRSwvqZM3DVUnRtEPdhFCoCPvYbME5YpVzdEDoNyJnVj\"]},\"contracts/MyNFT/ERC721Burnable.sol\":{\"keccak256\":\"0xe866a3d0810df462115dd743c18f8280dd3a2b5cf9f813971000cfd40adaa42d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86e75e659bfaaf8e2827322296da4ee004eac3b5b1bc3e44ec3d441b393703a8\",\"dweb:/ipfs/Qmf1Zg1FcW6g73kGqdzXSfLnoQKGXTFz8fzFcfMc67U9j1\"]},\"contracts/MyNFT/ERC721Enumerable.sol\":{\"keccak256\":\"0xe8a5628ee737b2fa0f12f363ec7c67f5822fe9c0419fd9db33e5ff38a65ea352\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7e8f3b845b9920f93c6ce10067bc2ca35bc87995b9b8f3491c6146f3152e0b8\",\"dweb:/ipfs/QmbHz7MmmmewD5mMkhnPBuKoeAbwRtaE9RDwvSLGDnWyTf\"]},\"contracts/MyNFT/ERC721Pausable.sol\":{\"keccak256\":\"0xdb81fb65e088b3b1bcb09ac26dc3d0972ba52ea294cfb2edfec468ff74d55142\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99096a3826e707f1400d2bafc2643ec5b24f985a6cb29653e74dcaf884b8d923\",\"dweb:/ipfs/QmTYUeng4SFCkC5ihL9F2ry4TCNWUURZ1dnL5D5LJHEVEp\"]},\"contracts/MyNFT/IERC165.sol\":{\"keccak256\":\"0x52e04d65c69f2e030225d6d8626a334af202bef1b1da0bf2fea5de05d5fd3db2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4eec6272f0dffdec7b338302311cf3a358ba48537edf87a2b1439d93492db69\",\"dweb:/ipfs/QmbgDXvQaqzb5dNJwV8LgGUDFsYSnZSVB5qWL1GK1YGEm6\"]},\"contracts/MyNFT/IERC721.sol\":{\"keccak256\":\"0x3eee01fcae8d1016234ed8daaf3d809346631e18f88d7e5d6aa4901eeaa9410e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b77dfe18c30eb4343a04645c707a0a61eb58c608ec583f087b4c5b525786823\",\"dweb:/ipfs/QmYNryzjZvjRH6LKxmZ2vChismEZjVV7Ev773hrVqwWHZi\"]},\"contracts/MyNFT/IERC721Enumerable.sol\":{\"keccak256\":\"0xe1cea390b7744cb84369e27a4a6eefabd1417bf562f141e9561adc75b6ada439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e18abf44535809e9be807fabb13fa8398a106265e654b3b4ed4d7deaf2df6c21\",\"dweb:/ipfs/QmYojHTVa6peYzBC1faw4HfvceUM6uPnDWHbAe6L6p15SD\"]},\"contracts/MyNFT/IERC721Metadata.sol\":{\"keccak256\":\"0x17c6c817a8c8d238ed69161fe51dcc6e0ce4586852a57a12833a122388c24a22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cdb49797ef9274d63fcae9cb4068356bdbb423264de6cb638c5b9780f7c093a\",\"dweb:/ipfs/Qmf3V7g1dGzYCgeGBHMhKQP8Dwv13U1iqMUPAuE5MwJ2wD\"]},\"contracts/MyNFT/IERC721Receiver.sol\":{\"keccak256\":\"0xdb4be0729937bf75572b7ed92840a96437191a0eb9d4b4d31e15ad08b71c0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b322470865a9b71aa3455a5e87b10493e340163b9e88913f292acf240c9cc640\",\"dweb:/ipfs/QmWpABMQGtETHmd1x9YyfUrT3sYkNuQoh7hqJwKEz13CcD\"]},\"contracts/MyNFT/Math.sol\":{\"keccak256\":\"0xa623136c8fcaf1b60612023600dd1d2d7e43fa9b1b3d8ec2f8982f1d9cb2d29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c13a5c89ac90ab7717be1decb485f20fb1b6ff65de143874ee483edaa400c63\",\"dweb:/ipfs/QmXd8gpCre1YwKBmDzHWMvSn6N72GdiZP31W6ZD5fkHFZ4\"]},\"contracts/MyNFT/Ownable.sol\":{\"keccak256\":\"0x089d819b25b18c70708dbaf304a74c1b76bad98f5bdde7b40fbcbceec85e8e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e04628d8e82e44c940e0d3712bbc284f9e222680243daeae0f1c14d108059455\",\"dweb:/ipfs/QmV5fXknwRBYQme3r1g7jFeEg1BvZ1MdBTmxUd7ZbGYgcj\"]},\"contracts/MyNFT/Pausable.sol\":{\"keccak256\":\"0x25134c8284bd36504728d29294ed4a8515f7d4ea1f9c7462f2e80bc11ac09a4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a23f17a2b2754000758abd5b794b0e17afb96bc62d1311860e4f3b24c75ee87b\",\"dweb:/ipfs/Qmc1ak2fd2NtY14gWhqWjoRaQYAR2R8vCKCiqRW6X8nV4C\"]},\"contracts/MyNFT/PudgyPenguins.sol\":{\"keccak256\":\"0x12c9ed510621a58a5e344182cbea348c61491534b6ac280c1874b74f18bd5d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c06600db8ebc76b45b6da899d76a1e90efabe80aa53eadfe4885fef7481a9e69\",\"dweb:/ipfs/QmXZoPAgJsvkLDwzEeJtss6XTABePw4S9XbVdsN39Ktoms\"]},\"contracts/MyNFT/SignedMath.sol\":{\"keccak256\":\"0xe806d50010e8783c4d5efe2195adf7f645b767007b6a1adede350f2100418faa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29a21325c42d0de6b486f00c7cdbd8415a562d5462b4be1cfb225ef9b5af4a83\",\"dweb:/ipfs/QmTn5x1DhCYjFZTpYjh9jfguw1SoN3Rd5r9BeHqY8Fjpqr\"]},\"contracts/MyNFT/Strings.sol\":{\"keccak256\":\"0xa6d8609d1887df5e4cba1f758125cd0d420b08d164822dde7d90467fc66d71e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58d9f6370d00ddef5e7541d2dc6c5ae20f9fdaf9b8e2b67d6e14746156e200a\",\"dweb:/ipfs/QmfFQojHWkH9Danyo1M69rqiFJMgwSH9zhda8ryXunwXeQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT/SignedMath.sol\":224:1917  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT/SignedMath.sol\":224:1917  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220508a6c03325e8f9cbefbaa15f28fd2bbb6909a3d69428495d5edb6f1d1890c2b64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220508a6c03325e8f9cbefbaa15f28fd2bbb6909a3d69428495d5edb6f1d1890c2b64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP DUP11 PUSH13 0x3325E8F9CBEFBAA15F28FD2BB 0xB6 SWAP1 SWAP11 RETURNDATASIZE PUSH10 0x428495D5EDB6F1D1890C 0x2B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "224:1693:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220508a6c03325e8f9cbefbaa15f28fd2bbb6909a3d69428495d5edb6f1d1890c2b64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP DUP11 PUSH13 0x3325E8F9CBEFBAA15F28FD2BB 0xB6 SWAP1 SWAP11 RETURNDATASIZE PUSH10 0x428495D5EDB6F1D1890C 0x2B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "224:1693:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 224,
									"end": 1917,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220508a6c03325e8f9cbefbaa15f28fd2bbb6909a3d69428495d5edb6f1d1890c2b64736f6c63430008140033",
									".code": [
										{
											"begin": 224,
											"end": 1917,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 224,
											"end": 1917,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 224,
											"end": 1917,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 224,
											"end": 1917,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 1917,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 1917,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 224,
											"end": 1917,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1917,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 224,
											"end": 1917,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT/Context.sol",
								"contracts/MyNFT/ERC165.sol",
								"contracts/MyNFT/ERC721.sol",
								"contracts/MyNFT/ERC721Burnable.sol",
								"contracts/MyNFT/ERC721Enumerable.sol",
								"contracts/MyNFT/ERC721Pausable.sol",
								"contracts/MyNFT/IERC165.sol",
								"contracts/MyNFT/IERC721.sol",
								"contracts/MyNFT/IERC721Enumerable.sol",
								"contracts/MyNFT/IERC721Metadata.sol",
								"contracts/MyNFT/IERC721Receiver.sol",
								"contracts/MyNFT/Math.sol",
								"contracts/MyNFT/Ownable.sol",
								"contracts/MyNFT/Pausable.sol",
								"contracts/MyNFT/PudgyPenguins.sol",
								"contracts/MyNFT/SignedMath.sol",
								"contracts/MyNFT/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/SignedMath.sol\":{\"keccak256\":\"0xe806d50010e8783c4d5efe2195adf7f645b767007b6a1adede350f2100418faa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29a21325c42d0de6b486f00c7cdbd8415a562d5462b4be1cfb225ef9b5af4a83\",\"dweb:/ipfs/QmTn5x1DhCYjFZTpYjh9jfguw1SoN3Rd5r9BeHqY8Fjpqr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyNFT/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT/Strings.sol\":252:3181  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT/Strings.sol\":252:3181  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df39df2bcd116d009a5b9455949a2b7dd78a8efd97bb21769ff4940a35846ad564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df39df2bcd116d009a5b9455949a2b7dd78a8efd97bb21769ff4940a35846ad564736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF CODECOPY 0xDF 0x2B 0xCD GT PUSH14 0x9A5B9455949A2B7DD78A8EFD97 0xBB 0x21 PUSH23 0x9FF4940A35846AD564736F6C6343000814003300000000 ",
							"sourceMap": "252:2929:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df39df2bcd116d009a5b9455949a2b7dd78a8efd97bb21769ff4940a35846ad564736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF CODECOPY 0xDF 0x2B 0xCD GT PUSH14 0x9A5B9455949A2B7DD78A8EFD97 0xBB 0x21 PUSH23 0x9FF4940A35846AD564736F6C6343000814003300000000 ",
							"sourceMap": "252:2929:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 252,
									"end": 3181,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df39df2bcd116d009a5b9455949a2b7dd78a8efd97bb21769ff4940a35846ad564736f6c63430008140033",
									".code": [
										{
											"begin": 252,
											"end": 3181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 252,
											"end": 3181,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 252,
											"end": 3181,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 252,
											"end": 3181,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 3181,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 3181,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 252,
											"end": 3181,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 3181,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 252,
											"end": 3181,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT/Context.sol",
								"contracts/MyNFT/ERC165.sol",
								"contracts/MyNFT/ERC721.sol",
								"contracts/MyNFT/ERC721Burnable.sol",
								"contracts/MyNFT/ERC721Enumerable.sol",
								"contracts/MyNFT/ERC721Pausable.sol",
								"contracts/MyNFT/IERC165.sol",
								"contracts/MyNFT/IERC721.sol",
								"contracts/MyNFT/IERC721Enumerable.sol",
								"contracts/MyNFT/IERC721Metadata.sol",
								"contracts/MyNFT/IERC721Receiver.sol",
								"contracts/MyNFT/Math.sol",
								"contracts/MyNFT/Ownable.sol",
								"contracts/MyNFT/Pausable.sol",
								"contracts/MyNFT/PudgyPenguins.sol",
								"contracts/MyNFT/SignedMath.sol",
								"contracts/MyNFT/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT/Math.sol\":{\"keccak256\":\"0xa623136c8fcaf1b60612023600dd1d2d7e43fa9b1b3d8ec2f8982f1d9cb2d29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c13a5c89ac90ab7717be1decb485f20fb1b6ff65de143874ee483edaa400c63\",\"dweb:/ipfs/QmXd8gpCre1YwKBmDzHWMvSn6N72GdiZP31W6ZD5fkHFZ4\"]},\"contracts/MyNFT/SignedMath.sol\":{\"keccak256\":\"0xe806d50010e8783c4d5efe2195adf7f645b767007b6a1adede350f2100418faa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29a21325c42d0de6b486f00c7cdbd8415a562d5462b4be1cfb225ef9b5af4a83\",\"dweb:/ipfs/QmTn5x1DhCYjFZTpYjh9jfguw1SoN3Rd5r9BeHqY8Fjpqr\"]},\"contracts/MyNFT/Strings.sol\":{\"keccak256\":\"0xa6d8609d1887df5e4cba1f758125cd0d420b08d164822dde7d90467fc66d71e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58d9f6370d00ddef5e7541d2dc6c5ae20f9fdaf9b8e2b67d6e14746156e200a\",\"dweb:/ipfs/QmfFQojHWkH9Danyo1M69rqiFJMgwSH9zhda8ryXunwXeQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MyNFT/Context.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/Context.sol",
					"exportedSymbols": {
						"Context": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "734:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "745:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "725:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:0"
									},
									"scope": 29,
									"src": "672:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "845:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "856:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "829:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:0"
									},
									"scope": 29,
									"src": "778:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "959:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "977:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "970:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "896:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "950:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:9:0"
									},
									"scope": 29,
									"src": "887:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 30,
							"src": "639:350:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:885:0"
				},
				"id": 0
			},
			"contracts/MyNFT/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							53
						],
						"IERC165": [
							1474
						]
					},
					"id": 54,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "117:24:1"
						},
						{
							"absolutePath": "contracts/MyNFT/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 54,
							"sourceUnit": 1475,
							"src": "145:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 32,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1474,
										"src": "153:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 35,
										"name": "IERC165",
										"nameLocations": [
											"707:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1474,
										"src": "707:7:1"
									},
									"id": 36,
									"nodeType": "InheritanceSpecifier",
									"src": "707:7:1"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "187:490:1",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53,
								1474
							],
							"name": "ERC165",
							"nameLocation": "697:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1473
									],
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "868:66:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 44,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "886:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 46,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "906:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1474_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1474_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 45,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "901:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "901:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1474",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "915:11:1",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "901:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "886:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 43,
												"id": 50,
												"nodeType": "Return",
												"src": "879:47:1"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "722:58:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "795:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "820:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "813:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 38,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "813:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:20:1"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "862:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:1"
									},
									"scope": 53,
									"src": "786:148:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 54,
							"src": "679:258:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "117:820:1"
				},
				"id": 1
			},
			"contracts/MyNFT/ERC721.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"ERC165": [
							53
						],
						"ERC721": [
							986
						],
						"IERC165": [
							1474
						],
						"IERC721": [
							1591
						],
						"IERC721Metadata": [
							1651
						],
						"IERC721Receiver": [
							1669
						],
						"Strings": [
							3463
						]
					},
					"id": 987,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "contracts/MyNFT/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 57,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 987,
							"sourceUnit": 1592,
							"src": "138:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 56,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1591,
										"src": "146:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 59,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 987,
							"sourceUnit": 1670,
							"src": "178:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 58,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1669,
										"src": "186:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/IERC721Metadata.sol",
							"file": "./IERC721Metadata.sol",
							"id": 61,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 987,
							"sourceUnit": 1652,
							"src": "234:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 60,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1651,
										"src": "242:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/Context.sol",
							"file": "./Context.sol",
							"id": 63,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 987,
							"sourceUnit": 30,
							"src": "290:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 62,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 29,
										"src": "298:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/Strings.sol",
							"file": "./Strings.sol",
							"id": 65,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 987,
							"sourceUnit": 3464,
							"src": "330:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 64,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3463,
										"src": "338:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 987,
							"sourceUnit": 54,
							"src": "370:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 66,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1474,
										"src": "378:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 67,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 53,
										"src": "387:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 70,
										"name": "Context",
										"nameLocations": [
											"771:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "771:7:2"
									},
									"id": 71,
									"nodeType": "InheritanceSpecifier",
									"src": "771:7:2"
								},
								{
									"baseName": {
										"id": 72,
										"name": "ERC165",
										"nameLocations": [
											"780:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 53,
										"src": "780:6:2"
									},
									"id": 73,
									"nodeType": "InheritanceSpecifier",
									"src": "780:6:2"
								},
								{
									"baseName": {
										"id": 74,
										"name": "IERC721",
										"nameLocations": [
											"788:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1591,
										"src": "788:7:2"
									},
									"id": 75,
									"nodeType": "InheritanceSpecifier",
									"src": "788:7:2"
								},
								{
									"baseName": {
										"id": 76,
										"name": "IERC721Metadata",
										"nameLocations": [
											"797:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1651,
										"src": "797:15:2"
									},
									"id": 77,
									"nodeType": "InheritanceSpecifier",
									"src": "797:15:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 69,
								"nodeType": "StructuredDocumentation",
								"src": "490:251:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 986,
							"linearizedBaseContracts": [
								986,
								1651,
								1591,
								53,
								1474,
								29
							],
							"name": "ERC721",
							"nameLocation": "761:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 80,
									"libraryName": {
										"id": 78,
										"name": "Strings",
										"nameLocations": [
											"826:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3463,
										"src": "826:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "820:26:2",
									"typeName": {
										"id": 79,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "838:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 82,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "888:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 81,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "873:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 84,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "938:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "923:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 83,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "923:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "998:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "954:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 87,
										"keyName": "tokenId",
										"keyNameLocation": "970:7:2",
										"keyType": {
											"id": 85,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "962:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "954:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 86,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1056:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "1014:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 91,
										"keyName": "owner",
										"keyNameLocation": "1030:5:2",
										"keyType": {
											"id": 89,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1022:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1014:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 90,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1039:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 96,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1118:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "1074:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 95,
										"keyName": "tokenId",
										"keyNameLocation": "1090:7:2",
										"keyType": {
											"id": 93,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1074:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 94,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1210:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 986,
									"src": "1142:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 101,
										"keyName": "owner",
										"keyNameLocation": "1158:5:2",
										"keyType": {
											"id": 97,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1150:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1142:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 100,
											"keyName": "operator",
											"keyNameLocation": "1183:8:2",
											"keyType": {
												"id": 98,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1175:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1167:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 99,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1195:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1409:60:2",
										"statements": [
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1420:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1428:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1420:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1420:13:2"
											},
											{
												"expression": {
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 114,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1444:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 115,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1444:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "1444:17:2"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1237:110:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 119,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1379:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1365:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1365:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1400:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1386:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1386:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:44:2"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1409:0:2"
									},
									"scope": 986,
									"src": "1353:116:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										52,
										1473
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1649:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1680:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 132,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1591,
																			"src": "1700:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1591_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1591_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 131,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1695:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1695:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1591",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1709:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1695:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1680:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 136,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1737:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 138,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1651,
																			"src": "1757:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1651_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1651_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 137,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1752:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1752:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1651",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1774:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1752:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1737:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1680:105:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 145,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1826:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 143,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1802:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$986_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1808:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 52,
															"src": "1802:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1802:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1680:158:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 129,
												"id": 148,
												"nodeType": "Return",
												"src": "1660:178:2"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1477:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1550:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 126,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 124,
												"name": "ERC165",
												"nameLocations": [
													"1617:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 53,
												"src": "1617:6:2"
											},
											{
												"id": 125,
												"name": "IERC165",
												"nameLocations": [
													"1625:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1474,
												"src": "1625:7:2"
											}
										],
										"src": "1608:25:2"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1575:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1568:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 121,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1568:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:20:2"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1643:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1643:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1642:6:2"
									},
									"scope": 986,
									"src": "1541:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1516
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1982:144:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 158,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1997:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2014:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 159,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2006:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2006:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1997:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "IfStatement",
												"src": "1993:92:2",
												"trueBody": {
													"id": 164,
													"nodeType": "Block",
													"src": "2018:67:2",
													"statements": []
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 166,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2102:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 168,
													"indexExpression": {
														"id": 167,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2112:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2102:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "2095:23:2"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1854:50:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1919:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1937:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1929:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:15:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1973:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1972:9:2"
									},
									"scope": 986,
									"src": "1910:216:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1524
									],
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "2260:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 179,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "2278:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2278:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 178,
												"id": 182,
												"nodeType": "Return",
												"src": "2271:29:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2134:48:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2197:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2213:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2205:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2204:17:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2251:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:9:2"
									},
									"scope": 986,
									"src": "2188:120:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1636
									],
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "2435:31:2",
										"statements": [
											{
												"expression": {
													"id": 190,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "2453:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 189,
												"id": 191,
												"nodeType": "Return",
												"src": "2446:12:2"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "2316:53:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2384:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:2:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2420:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 187,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2420:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:15:2"
									},
									"scope": 986,
									"src": "2375:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1642
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "2597:33:2",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 84,
													"src": "2615:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "2608:14:2"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "2474:55:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2544:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2582:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2582:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2581:15:2"
									},
									"scope": 986,
									"src": "2535:95:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1650
									],
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2780:181:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 211,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2805:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "2791:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2791:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2791:22:2"
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2840:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 237,
														"src": "2826:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 214,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2826:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 216,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "2850:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2850:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2826:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 221,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2884:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2878:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 219,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2878:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2878:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2893:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2878:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2878:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2951:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2878:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2920:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 230,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2929:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2937:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3276,
																	"src": "2929:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2929:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2906:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 226,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2906:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2913:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2906:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2906:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 209,
												"id": 236,
												"nodeType": "Return",
												"src": "2871:82:2"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "2638:57:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2727:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2719:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:17:2"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2765:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2765:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2764:15:2"
									},
									"scope": 986,
									"src": "2701:260:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "3276:28:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3294:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 243,
												"id": 245,
												"nodeType": "Return",
												"src": "3287:9:2"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2969:235:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3219:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3227:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "3261:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3261:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3260:15:2"
									},
									"scope": 986,
									"src": "3210:94:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1564
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "3427:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3447:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "3451:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 258,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "3460:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3460:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 255,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															809,
															871
														],
														"referencedDeclaration": 809,
														"src": "3438:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "3438:35:2"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "3312:48:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3375:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3391:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3383:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3403:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3395:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3382:29:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3427:0:2"
									},
									"scope": 986,
									"src": "3366:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1580
									],
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "3623:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3648:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 271,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "3634:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "3634:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3689:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 275,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "3676:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3676:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 270,
												"id": 278,
												"nodeType": "Return",
												"src": "3669:28:2"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "3489:52:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3556:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3568:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3567:17:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3614:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3613:9:2"
									},
									"scope": 986,
									"src": "3547:158:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1572
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "3852:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 289,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "3882:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3882:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "3896:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "3906:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 288,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "3863:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "3863:52:2"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "3713:58:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3786:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3812:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "3804:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3827:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3822:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3803:33:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3852:0:2"
									},
									"scope": 986,
									"src": "3777:146:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1590
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4088:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 306,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "4106:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 308,
														"indexExpression": {
															"id": 307,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "4125:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4106:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 310,
													"indexExpression": {
														"id": 309,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4132:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4106:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 305,
												"id": 311,
												"nodeType": "Return",
												"src": "4099:42:2"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "3931:57:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4003:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4028:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4043:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4035:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4019:33:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4082:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4082:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4081:6:2"
									},
									"scope": 986,
									"src": "3994:155:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1556
									],
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "4296:514:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 323,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "4311:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4325:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4317:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 324,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4317:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4317:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4311:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 330,
												"nodeType": "IfStatement",
												"src": "4307:92:2",
												"trueBody": {
													"id": 329,
													"nodeType": "Block",
													"src": "4329:70:2",
													"statements": []
												}
											},
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4628:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "4620:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 331,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4620:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 339,
												"initialValue": {
													"arguments": [
														{
															"id": 334,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "4652:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "4656:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 336,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4665:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4665:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 333,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "4644:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4644:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4620:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 340,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "4693:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 341,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "4710:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4693:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 344,
												"nodeType": "IfStatement",
												"src": "4689:114:2",
												"trueBody": {
													"id": 343,
													"nodeType": "Block",
													"src": "4716:87:2",
													"statements": []
												}
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4157:53:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4225:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4246:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4238:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4238:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4260:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4272:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4264:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4264:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:43:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:2"
									},
									"scope": 986,
									"src": "4216:594:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1546
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "4957:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "4985:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 358,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "4991:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 359,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "4995:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 356,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															364,
															390
														],
														"referencedDeclaration": 390,
														"src": "4968:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4968:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "4968:39:2"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "4818:57:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4890:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4915:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4907:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4929:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4921:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4921:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4941:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "4933:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4933:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4906:43:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4957:0:2"
									},
									"scope": 986,
									"src": "4881:134:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1536
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "5189:108:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "5213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "5219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "5223:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5200:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5200:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "5200:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "5265:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "5271:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "5275:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "5284:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 382,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "5242:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5242:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "5242:47:2"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "5023:57:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5095:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5120:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "5112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5112:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5134:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "5126:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5146:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "5138:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5138:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5168:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "5155:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5155:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5111:62:2"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5189:0:2"
									},
									"scope": 986,
									"src": "5086:211:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "5897:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 398,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "5915:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 400,
													"indexExpression": {
														"id": 399,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "5923:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5915:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 397,
												"id": 401,
												"nodeType": "Return",
												"src": "5908:23:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "5305:511:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5831:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5848:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5840:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:17:2"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5888:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5888:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:9:2"
									},
									"scope": 986,
									"src": "5822:117:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "6139:50:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 411,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "6157:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 413,
													"indexExpression": {
														"id": 412,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6157:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 410,
												"id": 414,
												"nodeType": "Return",
												"src": "6150:31:2"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "5947:107:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "6069:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6090:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6082:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6081:17:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6130:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6129:9:2"
									},
									"scope": 986,
									"src": "6060:129:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "6618:167:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 428,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "6649:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6668:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6660:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 429,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6660:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6660:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6649:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 434,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "6688:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 435,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "6697:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6688:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 438,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 419,
																				"src": "6725:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 439,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 421,
																				"src": "6732:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 437,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "6708:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6708:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6688:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 443,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 423,
																				"src": "6757:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 442,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 416,
																			"src": "6744:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6744:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 445,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "6769:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6744:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6688:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 448,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6687:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6649:128:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 450,
												"nodeType": "Return",
												"src": "6629:148:2"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "6197:306:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6518:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6540:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "6532:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6532:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6555:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "6547:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6547:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6572:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "6564:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6564:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6531:49:2"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "6612:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6612:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6611:6:2"
									},
									"scope": 986,
									"src": "6509:276:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "7326:285:2",
										"statements": [
											{
												"condition": {
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7341:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 463,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "7356:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 464,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "7363:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 465,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "7372:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 462,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "7342:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7342:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "7337:267:2",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "7382:222:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 468,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "7401:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7418:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7410:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 469,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7410:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7410:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7401:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 475,
																"nodeType": "Block",
																"src": "7504:89:2",
																"statements": []
															},
															"id": 476,
															"nodeType": "IfStatement",
															"src": "7397:196:2",
															"trueBody": {
																"id": 474,
																"nodeType": "Block",
																"src": "7422:76:2",
																"statements": []
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "6793:430:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7238:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7263:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7255:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7255:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7278:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7270:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7295:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7287:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7287:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7254:49:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7326:0:2"
									},
									"scope": 986,
									"src": "7229:382:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "8340:82:2",
										"statements": [
											{
												"id": 494,
												"nodeType": "UncheckedBlock",
												"src": "8351:64:2",
												"statements": [
													{
														"expression": {
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 488,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "8376:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 490,
																"indexExpression": {
																	"id": 489,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "8386:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8376:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 491,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8398:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8376:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 493,
														"nodeType": "ExpressionStatement",
														"src": "8376:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "7619:640:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8274:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "8291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8316:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "8308:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 484,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8290:32:2"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8340:0:2"
									},
									"scope": 986,
									"src": "8265:157:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
									"id": 500,
									"name": "Log",
									"nameLocation": "8436:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"indexed": false,
												"mutability": "mutable",
												"name": "msg",
												"nameLocation": "8447:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "8440:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8439:12:2"
									},
									"src": "8430:22:2"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "8490:43:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "4552433732312e7465737431",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8510:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a",
																"typeString": "literal_string \"ERC721.test1\""
															},
															"value": "ERC721.test1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_26c675735c5cc3fde607660ca49ee15896975faa7327df9b0b75e6a4891cb44a",
																"typeString": "literal_string \"ERC721.test1\""
															}
														],
														"id": 503,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "8506:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8506:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "EmitStatement",
												"src": "8501:24:2"
											}
										]
									},
									"functionSelector": "6b59084d",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test1",
									"nameLocation": "8467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8472:2:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8490:0:2"
									},
									"scope": 986,
									"src": "8458:75:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "9234:729:2",
										"statements": [
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "9253:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "9245:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 520,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9245:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [
														{
															"id": 523,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "9260:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9260:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9245:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 526,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "9340:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9356:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9348:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 527,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9348:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9348:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9340:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 539,
												"nodeType": "IfStatement",
												"src": "9336:88:2",
												"trueBody": {
													"id": 538,
													"nodeType": "Block",
													"src": "9360:64:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 533,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "9392:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 534,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "9398:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 535,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "9404:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 532,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "9375:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9375:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 537,
															"nodeType": "ExpressionStatement",
															"src": "9375:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 540,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "9471:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9487:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9479:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 541,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9479:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9479:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9471:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 567,
												"nodeType": "IfStatement",
												"src": "9467:263:2",
												"trueBody": {
													"id": 566,
													"nodeType": "Block",
													"src": "9491:239:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9606:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9598:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 547,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9598:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9598:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 551,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "9610:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9627:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9619:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 552,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9619:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9619:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9631:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 546,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		809,
																		871
																	],
																	"referencedDeclaration": 871,
																	"src": "9589:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9589:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 558,
															"nodeType": "ExpressionStatement",
															"src": "9589:48:2"
														},
														{
															"id": 565,
															"nodeType": "UncheckedBlock",
															"src": "9654:65:2",
															"statements": [
																{
																	"expression": {
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 559,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "9683:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 561,
																			"indexExpression": {
																				"id": 560,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 521,
																				"src": "9693:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9683:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9702:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9683:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 564,
																	"nodeType": "ExpressionStatement",
																	"src": "9683:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 568,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "9746:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9760:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9752:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 569,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9752:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9752:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9746:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "9742:111:2",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "9764:89:2",
													"statements": [
														{
															"id": 580,
															"nodeType": "UncheckedBlock",
															"src": "9779:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 574,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "9808:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 576,
																			"indexExpression": {
																				"id": 575,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 511,
																				"src": "9818:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9808:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9825:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9808:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 579,
																	"nodeType": "ExpressionStatement",
																	"src": "9808:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 583,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "9865:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 585,
														"indexExpression": {
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9873:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9865:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 586,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "9884:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9865:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "9865:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 590,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9913:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "9919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9923:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "9904:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9904:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "EmitStatement",
												"src": "9899:32:2"
											},
											{
												"expression": {
													"id": 595,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 521,
													"src": "9951:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 519,
												"id": 596,
												"nodeType": "Return",
												"src": "9944:11:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "8541:592:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "9148:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9164:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9156:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9156:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9176:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9168:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "9193:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9185:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9185:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9155:43:2"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "9225:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9224:9:2"
									},
									"scope": 986,
									"src": "9139:824:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "10352:288:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 606,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "10367:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10381:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10373:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 607,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10373:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10373:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10367:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "10363:92:2",
												"trueBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "10385:70:2",
													"statements": []
												}
											},
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10473:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 633,
														"src": "10465:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 614,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10465:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"initialValue": {
													"arguments": [
														{
															"id": 617,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "10497:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10501:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10518:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10510:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 619,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10510:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10510:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 616,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "10489:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10489:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10465:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "10536:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10561:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10553:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10553:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10553:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10536:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 632,
												"nodeType": "IfStatement",
												"src": "10532:101:2",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "10565:68:2",
													"statements": []
												}
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "9971:322:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10308:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "10314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "10326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10313:29:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10352:0:2"
									},
									"scope": 986,
									"src": "10299:341:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "11060:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "11081:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "11085:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11094:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 642,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															649,
															675
														],
														"referencedDeclaration": 675,
														"src": "11071:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11071:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "11071:26:2"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "10648:349:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11012:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11030:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "11022:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11042:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "11034:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11034:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11021:29:2"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11060:0:2"
									},
									"scope": 986,
									"src": "11003:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "11416:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "11433:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "11437:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "11427:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11427:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "11427:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11487:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11479:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 665,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11479:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11479:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "11491:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "11495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 671,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "11504:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 664,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "11456:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11456:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "11456:53:2"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "11113:213:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11341:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11359:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "11351:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11351:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11371:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "11363:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11363:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11393:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "11380:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11380:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11350:48:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11416:0:2"
									},
									"scope": 986,
									"src": "11332:185:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "11897:194:2",
										"statements": [
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11916:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "11908:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 681,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11908:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11948:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11940:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11940:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11940:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "11952:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 689,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 683,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "11932:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11932:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11908:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 695,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "11987:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12012:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12004:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 696,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12004:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12004:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11987:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 702,
												"nodeType": "IfStatement",
												"src": "11983:101:2",
												"trueBody": {
													"id": 701,
													"nodeType": "Block",
													"src": "12016:68:2",
													"statements": []
												}
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "11525:325:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11865:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11879:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "11871:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11871:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11870:17:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11897:0:2"
									},
									"scope": 986,
									"src": "11856:235:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "12499:408:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "12514:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 715,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12514:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "12510:92:2",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "12532:70:2",
													"statements": []
												}
											},
											{
												"assignments": [
													723
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12620:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "12612:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 722,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12612:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"arguments": [
														{
															"id": 725,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "12644:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "12648:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12665:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12657:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12657:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12657:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 724,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "12636:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12636:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12612:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 733,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "12683:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12708:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12700:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12700:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12700:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12683:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 740,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "12790:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 741,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "12807:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12790:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 744,
													"nodeType": "IfStatement",
													"src": "12786:114:2",
													"trueBody": {
														"id": 743,
														"nodeType": "Block",
														"src": "12813:87:2",
														"statements": []
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "12679:221:2",
												"trueBody": {
													"id": 739,
													"nodeType": "Block",
													"src": "12712:68:2",
													"statements": []
												}
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "12099:323:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12437:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12455:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "12447:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12469:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "12461:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "12473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12473:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12446:43:2"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12499:0:2"
									},
									"scope": 986,
									"src": "12428:479:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "13937:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "13962:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "13968:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "13972:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13981:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 757,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															765,
															791
														],
														"referencedDeclaration": 791,
														"src": "13948:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13948:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "13948:36:2"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "12915:941:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13871:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "13885:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13885:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13907:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "13899:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13899:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13919:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "13911:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13911:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13884:43:2"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13937:0:2"
									},
									"scope": 986,
									"src": "13862:130:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "14337:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "14358:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "14364:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 780,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "14368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "14348:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14348:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "14348:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 784,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "14410:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "14416:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "14420:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 787,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "14429:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 783,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "14387:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14387:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "14387:47:2"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "14000:229:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14244:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14266:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "14258:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14280:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "14272:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14272:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14292:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "14284:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14284:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14314:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "14301:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14301:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14257:62:2"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14337:0:2"
									},
									"scope": 986,
									"src": "14235:207:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "14967:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "14987:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "14991:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 804,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "15000:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15006:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 801,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															809,
															871
														],
														"referencedDeclaration": 871,
														"src": "14978:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14978:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "14978:33:2"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "14450:441:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14906:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14923:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "14915:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14915:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14935:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "14927:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14927:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14952:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "14944:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14944:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14914:43:2"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14967:0:2"
									},
									"scope": 986,
									"src": "14897:122:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "15301:587:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 821,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "15369:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 822,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "15382:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15398:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15390:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 823,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15390:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15390:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15382:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15369:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "15365:474:2",
												"trueBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "15402:437:2",
													"statements": [
														{
															"assignments": [
																830
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 830,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15425:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 862,
																	"src": "15417:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 829,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15417:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 834,
															"initialValue": {
																"arguments": [
																	{
																		"id": 832,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "15447:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 831,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "15433:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15433:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15417:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 835,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "15586:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 838,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15602:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15594:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 836,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15594:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15594:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15586:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 841,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "15608:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 842,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "15617:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15608:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15586:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15625:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 846,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "15643:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 847,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "15650:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 845,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "15626:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15626:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15586:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 852,
															"nodeType": "IfStatement",
															"src": "15582:147:2",
															"trueBody": {
																"id": 851,
																"nodeType": "Block",
																"src": "15657:72:2",
																"statements": []
															}
														},
														{
															"condition": {
																"id": 853,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "15749:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 861,
															"nodeType": "IfStatement",
															"src": "15745:83:2",
															"trueBody": {
																"id": 860,
																"nodeType": "Block",
																"src": "15760:68:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 855,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "15793:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 856,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 812,
																					"src": "15800:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 857,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "15804:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 854,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1499,
																				"src": "15784:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15784:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 859,
																		"nodeType": "EmitStatement",
																		"src": "15779:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 864,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "15851:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 866,
														"indexExpression": {
															"id": 865,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "15867:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15851:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 867,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "15878:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15851:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "15851:29:2"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "15027:174:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15216:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15233:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "15225:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15245:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "15237:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "15262:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "15254:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15254:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "15273:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "15268:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15224:59:2"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15301:0:2"
									},
									"scope": 986,
									"src": "15207:681:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "16200:228:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 881,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "16215:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16235:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16227:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 882,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16227:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16227:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16215:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 888,
												"nodeType": "IfStatement",
												"src": "16211:96:2",
												"trueBody": {
													"id": 887,
													"nodeType": "Block",
													"src": "16239:68:2",
													"statements": []
												}
											},
											{
												"expression": {
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 889,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "16317:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 892,
															"indexExpression": {
																"id": 890,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "16336:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16317:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 893,
														"indexExpression": {
															"id": 891,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "16343:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16317:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 894,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "16355:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16317:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "16317:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 898,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "16394:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "16401:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "16411:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 897,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "16379:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16379:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "EmitStatement",
												"src": "16374:46:2"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "15896:205:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "16116:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16143:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "16135:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16158:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "16150:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16173:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "16168:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16168:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16134:48:2"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16200:0:2"
									},
									"scope": 986,
									"src": "16107:321:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "16743:178:2",
										"statements": [
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16762:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "16754:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 912,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16754:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"arguments": [
														{
															"id": 915,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "16779:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 914,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "16770:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16770:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16754:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "16802:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16819:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16811:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 919,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16811:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16811:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16802:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "16798:93:2",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "16823:68:2",
													"statements": []
												}
											},
											{
												"expression": {
													"id": 926,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 913,
													"src": "16908:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 911,
												"id": 927,
												"nodeType": "Return",
												"src": "16901:12:2"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "16436:229:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16680:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "16694:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16693:17:2"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "16734:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16733:9:2"
									},
									"scope": 986,
									"src": "16671:250:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "17573:703:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 941,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "17588:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17591:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17596:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17588:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17605:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17588:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "17584:685:2",
												"trueBody": {
													"id": 982,
													"nodeType": "Block",
													"src": "17608:661:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 966,
																		"nodeType": "Block",
																		"src": "17723:169:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 963,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 959,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 957,
																						"src": "17746:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 960,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1669,
																								"src": "17756:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1669_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 961,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17772:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1668,
																							"src": "17756:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 962,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17789:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17756:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17746:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 965,
																				"nodeType": "IfStatement",
																				"src": "17742:135:2",
																				"trueBody": {
																					"id": 964,
																					"nodeType": "Block",
																					"src": "17799:78:2",
																					"statements": []
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 967,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 958,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 957,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17715:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 967,
																				"src": "17708:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 956,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17708:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17707:15:2"
																	},
																	"src": "17699:193:2"
																},
																{
																	"block": {
																		"id": 979,
																		"nodeType": "Block",
																		"src": "17921:337:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 974,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 971,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 969,
																							"src": "17944:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 972,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17951:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17944:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 973,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17961:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17944:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 977,
																					"nodeType": "Block",
																					"src": "18048:195:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "18136:88:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "18174:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "18178:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "18170:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "18170:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "18193:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "18187:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "18187:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "18163:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "18163:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "18163:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 969,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18178:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 969,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18193:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 976,
																							"nodeType": "InlineAssembly",
																							"src": "18127:97:2"
																						}
																					]
																				},
																				"id": 978,
																				"nodeType": "IfStatement",
																				"src": "17940:303:2",
																				"trueBody": {
																					"id": 975,
																					"nodeType": "Block",
																					"src": "17964:78:2",
																					"statements": []
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 980,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 970,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 969,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17913:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 980,
																				"src": "17900:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 968,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17900:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17899:21:2"
																	},
																	"src": "17893:365:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 950,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "17664:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17664:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 952,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "17678:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 953,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "17684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 954,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "17693:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 947,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 934,
																				"src": "17643:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 946,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1669,
																			"src": "17627:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1669_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17627:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1669",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17647:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1668,
																	"src": "17627:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17627:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 981,
															"nodeType": "TryStatement",
															"src": "17623:635:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "16929:536:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "17480:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17511:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "17503:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17503:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17525:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "17517:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17517:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17537:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "17529:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17559:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "17546:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17546:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17502:62:2"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17573:0:2"
									},
									"scope": 986,
									"src": "17471:805:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 987,
							"src": "743:17536:2",
							"usedErrors": [],
							"usedEvents": [
								500,
								1490,
								1499,
								1508
							]
						}
					],
					"src": "110:18169:2"
				},
				"id": 2
			},
			"contracts/MyNFT/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/ERC721Burnable.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"ERC721": [
							986
						],
						"ERC721Burnable": [
							1015
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 988,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:3"
						},
						{
							"absolutePath": "contracts/MyNFT/ERC721.sol",
							"file": "./ERC721.sol",
							"id": 990,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 987,
							"src": "157:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 989,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 986,
										"src": "165:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/Context.sol",
							"file": "./Context.sol",
							"id": 992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 30,
							"src": "195:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 991,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 29,
										"src": "203:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 994,
										"name": "Context",
										"nameLocations": [
											"372:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "372:7:3"
									},
									"id": 995,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:3"
								},
								{
									"baseName": {
										"id": 996,
										"name": "ERC721",
										"nameLocations": [
											"381:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 986,
										"src": "381:6:3"
									},
									"id": 997,
									"nodeType": "InheritanceSpecifier",
									"src": "381:6:3"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 993,
								"nodeType": "StructuredDocumentation",
								"src": "237:97:3",
								"text": " @title ERC-721 Burnable Token\n @dev ERC-721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015,
								986,
								1651,
								1591,
								53,
								1474,
								29
							],
							"name": "ERC721Burnable",
							"nameLocation": "354:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "615:272:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "853:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "845:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "845:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "845:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "857:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1009,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "866:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "866:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1003,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "837:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "837:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "837:42:3"
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "395:168:3",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "578:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:17:3"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:0:3"
									},
									"scope": 1015,
									"src": "569:318:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1016,
							"src": "336:554:3",
							"usedErrors": [],
							"usedEvents": [
								500,
								1490,
								1499,
								1508
							]
						}
					],
					"src": "129:761:3"
				},
				"id": 3
			},
			"contracts/MyNFT/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/ERC721Enumerable.sol",
					"exportedSymbols": {
						"ERC721": [
							986
						],
						"ERC721Enumerable": [
							1413
						],
						"IERC165": [
							1474
						],
						"IERC721Enumerable": [
							1623
						]
					},
					"id": 1414,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "131:24:4"
						},
						{
							"absolutePath": "contracts/MyNFT/ERC721.sol",
							"file": "./ERC721.sol",
							"id": 1019,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 987,
							"src": "159:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1018,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 986,
										"src": "167:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1021,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 1624,
							"src": "197:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1020,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1623,
										"src": "205:17:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 1023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1414,
							"sourceUnit": 54,
							"src": "257:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1022,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1474,
										"src": "265:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1025,
										"name": "ERC721",
										"nameLocations": [
											"734:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 986,
										"src": "734:6:4"
									},
									"id": 1026,
									"nodeType": "InheritanceSpecifier",
									"src": "734:6:4"
								},
								{
									"baseName": {
										"id": 1027,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"742:17:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1623,
										"src": "742:17:4"
									},
									"id": 1028,
									"nodeType": "InheritanceSpecifier",
									"src": "742:17:4"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1024,
								"nodeType": "StructuredDocumentation",
								"src": "298:396:4",
								"text": " @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\n interfere with enumerability and should not be used together with {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1413,
							"linearizedBaseContracts": [
								1413,
								1623,
								986,
								1651,
								1591,
								53,
								1474,
								29
							],
							"name": "ERC721Enumerable",
							"nameLocation": "714:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1034,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "835:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "767:80:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1033,
										"keyName": "owner",
										"keyNameLocation": "783:5:4",
										"keyType": {
											"id": 1029,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "775:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "767:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1032,
											"keyName": "index",
											"keyNameLocation": "808:5:4",
											"keyType": {
												"id": 1030,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "800:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "792:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1031,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "817:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1038,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "898:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "854:61:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1037,
										"keyName": "tokenId",
										"keyNameLocation": "870:7:4",
										"keyType": {
											"id": 1035,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "862:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "854:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1036,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "881:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1041,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "942:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "924:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1039,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "924:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1040,
										"nodeType": "ArrayTypeName",
										"src": "924:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1045,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "1003:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1413,
									"src": "959:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1044,
										"keyName": "tokenId",
										"keyNameLocation": "975:7:4",
										"keyType": {
											"id": 1042,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "967:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "959:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1043,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "986:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "1027:172:4",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 1052,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "1211:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1257:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1249:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:30:4"
									},
									"src": "1205:59:4"
								},
								{
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "1272:52:4",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 1055,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "1336:34:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:2:4"
									},
									"src": "1330:43:4"
								},
								{
									"baseFunctions": [
										150,
										1473
									],
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "1553:116:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1066,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "1571:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1068,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1623,
																		"src": "1591:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1623_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1623_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1067,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1586:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1586:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1623",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1610:11:4",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1586:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1571:50:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1074,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "1649:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1072,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1625:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1413_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1631:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "1625:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1625:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1571:90:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1077,
												"nodeType": "Return",
												"src": "1564:97:4"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "1381:58:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1454:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1062,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1060,
												"name": "IERC165",
												"nameLocations": [
													"1521:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1474,
												"src": "1521:7:4"
											},
											{
												"id": 1061,
												"name": "ERC721",
												"nameLocations": [
													"1530:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 986,
												"src": "1530:6:4"
											}
										],
										"src": "1512:25:4"
									},
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1479:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1472:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1057,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1472:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:20:4"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1547:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1547:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:6:4"
									},
									"scope": 1413,
									"src": "1445:224:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1614
									],
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "1850:163:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1089,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "1865:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1091,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "1884:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1090,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1874:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1874:16:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1865:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "1861:101:4",
												"trueBody": {
													"id": 1099,
													"nodeType": "Block",
													"src": "1892:70:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1095,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "1937:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1096,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "1944:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1094,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "1914:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1914:36:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1098,
															"nodeType": "RevertStatement",
															"src": "1907:43:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1101,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "1979:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1103,
														"indexExpression": {
															"id": 1102,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "1992:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1979:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1105,
													"indexExpression": {
														"id": 1104,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "1999:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1979:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1088,
												"id": 1106,
												"nodeType": "Return",
												"src": "1972:33:4"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "1677:70:4",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1762:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1790:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1782:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1805:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1797:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1781:30:4"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1841:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:9:4"
									},
									"scope": 1413,
									"src": "1753:260:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1604
									],
									"body": {
										"id": 1117,
										"nodeType": "Block",
										"src": "2150:43:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1114,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2168:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2179:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2168:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1113,
												"id": 1116,
												"nodeType": "Return",
												"src": "2161:24:4"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "2021:62:4",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2098:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2109:2:4"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2141:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2140:9:4"
									},
									"scope": 1413,
									"src": "2089:104:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1622
									],
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "2345:156:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1126,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2360:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1127,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "2369:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2369:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2360:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1139,
												"nodeType": "IfStatement",
												"src": "2356:103:4",
												"trueBody": {
													"id": 1138,
													"nodeType": "Block",
													"src": "2384:75:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2437:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2429:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1131,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2429:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2429:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1135,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "2441:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1130,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "2406:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2406:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1137,
															"nodeType": "RevertStatement",
															"src": "2399:48:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1140,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2476:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1142,
													"indexExpression": {
														"id": 1141,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2487:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2476:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1143,
												"nodeType": "Return",
												"src": "2469:24:4"
											}
										]
									},
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "2201:63:4",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2279:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2300:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2292:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:15:4"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2336:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2335:9:4"
									},
									"scope": 1413,
									"src": "2270:231:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										508
									],
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2551:77:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "455243373231456e756d657261626c652e7465737431",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2571:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9",
																"typeString": "literal_string \"ERC721Enumerable.test1\""
															},
															"value": "ERC721Enumerable.test1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_ab9a8f6836048175fd21766c7273cf4e1009fd9797537eaaec745498c34673f9",
																"typeString": "literal_string \"ERC721Enumerable.test1\""
															}
														],
														"id": 1149,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2567:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2567:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "EmitStatement",
												"src": "2562:34:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1153,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2607:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1413_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2613:5:4",
														"memberName": "test1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "2607:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "2607:13:4"
											}
										]
									},
									"functionSelector": "6b59084d",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test1",
									"nameLocation": "2518:5:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1147,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2533:8:4"
									},
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2523:2:4"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2551:0:4"
									},
									"scope": 1413,
									"src": "2509:119:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										598
									],
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "2793:536:4",
										"statements": [
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2812:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "2804:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1172,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2804:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1180,
												"initialValue": {
													"arguments": [
														{
															"id": 1176,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "2842:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "2846:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1178,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "2855:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1174,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2828:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1413_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2834:7:4",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 598,
														"src": "2828:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2828:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2804:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1181,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "2877:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2902:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2894:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1182,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2894:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2894:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2877:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1192,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "2983:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1193,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "3000:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2983:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1201,
													"nodeType": "IfStatement",
													"src": "2979:108:4",
													"trueBody": {
														"id": 1200,
														"nodeType": "Block",
														"src": "3004:83:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1196,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1173,
																			"src": "3052:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1197,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "3067:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1195,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "3019:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3019:56:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1199,
																"nodeType": "ExpressionStatement",
																"src": "3019:56:4"
															}
														]
													}
												},
												"id": 1202,
												"nodeType": "IfStatement",
												"src": "2873:214:4",
												"trueBody": {
													"id": 1191,
													"nodeType": "Block",
													"src": "2906:67:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1188,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "2953:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1187,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "2921:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2921:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1190,
															"nodeType": "ExpressionStatement",
															"src": "2921:40:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1203,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "3101:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3115:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3107:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1204,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3107:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3107:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3101:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1214,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "3201:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1215,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "3218:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3201:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1223,
													"nodeType": "IfStatement",
													"src": "3197:92:4",
													"trueBody": {
														"id": 1222,
														"nodeType": "Block",
														"src": "3222:67:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1218,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "3265:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1219,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "3269:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1217,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "3237:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3237:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1221,
																"nodeType": "ExpressionStatement",
																"src": "3237:40:4"
															}
														]
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "3097:192:4",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "3119:72:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1210,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "3171:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1209,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "3134:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3134:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1212,
															"nodeType": "ExpressionStatement",
															"src": "3134:45:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1173,
													"src": "3308:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1226,
												"nodeType": "Return",
												"src": "3301:20:4"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2636:47:4",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2698:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1168,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2766:8:4"
									},
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2714:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2706:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2718:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2743:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2735:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2735:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:43:4"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2784:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:9:4"
									},
									"scope": 1413,
									"src": "2689:640:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "3704:144:4",
										"statements": [
											{
												"assignments": [
													1237
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3723:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "3715:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3715:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1239,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "3742:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1238,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "3732:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3732:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3748:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3732:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3715:34:4"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1244,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "3760:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1247,
															"indexExpression": {
																"id": 1245,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "3773:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3760:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1248,
														"indexExpression": {
															"id": 1246,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "3777:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3760:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1249,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "3787:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3760:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "3760:34:4"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1252,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "3805:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1254,
														"indexExpression": {
															"id": 1253,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "3823:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3805:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1255,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "3834:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3805:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "3805:35:4"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "3337:287:4",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3639:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3675:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3667:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3687:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3679:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:29:4"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:4"
									},
									"scope": 1413,
									"src": "3630:218:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "4115:98:4",
										"statements": [
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1265,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "4126:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1267,
														"indexExpression": {
															"id": 1266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "4142:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4126:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1268,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "4153:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4164:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4153:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4126:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "4126:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1275,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "4197:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1272,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "4181:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4192:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4181:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4181:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "4181:24:4"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "3856:187:4",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "4058:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4098:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "4090:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4090:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4089:17:4"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4115:0:4"
									},
									"scope": 1413,
									"src": "4049:164:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "4921:896:4",
										"statements": [
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "5114:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "5106:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5106:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"initialValue": {
													"arguments": [
														{
															"id": 1290,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "5141:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1289,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5131:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5131:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5106:40:4"
											},
											{
												"assignments": [
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "5165:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "5157:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1298,
												"initialValue": {
													"baseExpression": {
														"id": 1295,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "5178:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1297,
													"indexExpression": {
														"id": 1296,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "5196:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5178:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5157:47:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1299,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "5311:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1300,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "5325:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5311:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "5307:328:4",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "5341:294:4",
													"statements": [
														{
															"assignments": [
																1303
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1303,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5364:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1324,
																	"src": "5356:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1302,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5356:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1309,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1304,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "5378:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1306,
																	"indexExpression": {
																		"id": 1305,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "5391:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5378:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1308,
																"indexExpression": {
																	"id": 1307,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "5397:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5378:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5356:56:4"
														},
														{
															"expression": {
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1310,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1034,
																			"src": "5429:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1313,
																		"indexExpression": {
																			"id": 1311,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1282,
																			"src": "5442:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5429:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1314,
																	"indexExpression": {
																		"id": 1312,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "5448:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5429:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1315,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "5462:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5429:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1317,
															"nodeType": "ExpressionStatement",
															"src": "5429:44:4"
														},
														{
															"expression": {
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1318,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "5546:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1320,
																	"indexExpression": {
																		"id": 1319,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "5564:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5546:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1321,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "5579:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5546:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1323,
															"nodeType": "ExpressionStatement",
															"src": "5546:43:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5724:33:4",
													"subExpression": {
														"baseExpression": {
															"id": 1326,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "5731:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1328,
														"indexExpression": {
															"id": 1327,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "5749:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5731:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "5724:33:4"
											},
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5768:41:4",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1331,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "5775:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1333,
															"indexExpression": {
																"id": 1332,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "5788:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5775:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1335,
														"indexExpression": {
															"id": 1334,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "5794:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5775:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "5768:41:4"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "4221:613:4",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4849:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4890:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "4882:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4882:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4904:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "4896:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4881:31:4"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4921:0:4"
									},
									"scope": 1413,
									"src": "4840:977:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "6183:1008:4",
										"statements": [
											{
												"assignments": [
													1346
												],
												"declarations": [
													{
														"constant": false,
														"id": 1346,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6373:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "6365:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1345,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6365:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1351,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1347,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "6390:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6401:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6390:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6410:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6390:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6365:46:4"
											},
											{
												"assignments": [
													1353
												],
												"declarations": [
													{
														"constant": false,
														"id": 1353,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6430:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "6422:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1352,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6422:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1357,
												"initialValue": {
													"baseExpression": {
														"id": 1354,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "6443:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1356,
													"indexExpression": {
														"id": 1355,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "6459:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6443:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6422:45:4"
											},
											{
												"assignments": [
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6802:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1386,
														"src": "6794:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6794:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"baseExpression": {
														"id": 1360,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "6816:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1362,
													"indexExpression": {
														"id": 1361,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "6827:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6816:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6794:48:4"
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1364,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "6855:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1366,
														"indexExpression": {
															"id": 1365,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "6866:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6855:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1367,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "6880:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6855:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "6855:36:4"
											},
											{
												"expression": {
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1370,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "6960:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1372,
														"indexExpression": {
															"id": 1371,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "6976:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6960:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1373,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "6991:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6960:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "6960:41:4"
											},
											{
												"expression": {
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7125:31:4",
													"subExpression": {
														"baseExpression": {
															"id": 1376,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "7132:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1378,
														"indexExpression": {
															"id": 1377,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "7148:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7132:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "7125:31:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1381,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "7167:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7178:3:4",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "7167:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7167:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "7167:16:4"
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "5825:281:4",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "6121:36:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6166:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "6158:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6158:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6157:17:4"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6183:0:4"
									},
									"scope": 1413,
									"src": "6112:1079:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										496
									],
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "7398:154:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1396,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "7413:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7422:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7413:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "7409:86:4",
												"trueBody": {
													"id": 1402,
													"nodeType": "Block",
													"src": "7425:70:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1399,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "7447:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7447:36:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1401,
															"nodeType": "RevertStatement",
															"src": "7440:43:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1407,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "7528:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1408,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "7537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1404,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7505:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1413_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7511:16:4",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "7505:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7505:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "7505:39:4"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "7199:108:4",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "7322:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1394,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7389:8:4"
									},
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7347:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "7339:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7364:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "7356:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1391,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7356:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7338:33:4"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7398:0:4"
									},
									"scope": 1413,
									"src": "7313:239:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1414,
							"src": "696:6859:4",
							"usedErrors": [
								1052,
								1055
							],
							"usedEvents": [
								500,
								1490,
								1499,
								1508
							]
						}
					],
					"src": "131:7424:4"
				},
				"id": 4
			},
			"contracts/MyNFT/ERC721Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/ERC721Pausable.sol",
					"exportedSymbols": {
						"ERC721": [
							986
						],
						"ERC721Pausable": [
							1462
						],
						"Pausable": [
							2989
						]
					},
					"id": 1463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:5"
						},
						{
							"absolutePath": "contracts/MyNFT/ERC721.sol",
							"file": "./ERC721.sol",
							"id": 1417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 987,
							"src": "157:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1416,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 986,
										"src": "165:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/Pausable.sol",
							"file": "./Pausable.sol",
							"id": 1419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 2990,
							"src": "195:40:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1418,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2989,
										"src": "203:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1421,
										"name": "ERC721",
										"nameLocations": [
											"978:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 986,
										"src": "978:6:5"
									},
									"id": 1422,
									"nodeType": "InheritanceSpecifier",
									"src": "978:6:5"
								},
								{
									"baseName": {
										"id": 1423,
										"name": "Pausable",
										"nameLocations": [
											"986:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2989,
										"src": "986:8:5"
									},
									"id": 1424,
									"nodeType": "InheritanceSpecifier",
									"src": "986:8:5"
								}
							],
							"canonicalName": "ERC721Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "239:701:5",
								"text": " @dev ERC-721 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1462,
							"linearizedBaseContracts": [
								1462,
								2989,
								986,
								1651,
								1591,
								53,
								1474,
								29
							],
							"name": "ERC721Pausable",
							"nameLocation": "960:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										598
									],
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "1288:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1441,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "1320:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1442,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "1324:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1443,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "1333:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1439,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1306:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Pausable_$1462_$",
																"typeString": "type(contract super ERC721Pausable)"
															}
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1312:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 598,
														"src": "1306:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1438,
												"id": 1445,
												"nodeType": "Return",
												"src": "1299:39:5"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "1002:128:5",
										"text": " @dev See {ERC721-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1434,
												"name": "whenNotPaused",
												"nameLocations": [
													"1256:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2914,
												"src": "1256:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1256:13:5"
										}
									],
									"name": "_update",
									"nameLocation": "1145:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1247:8:5"
									},
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1171:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1163:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1192:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1184:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "1218:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1210:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:77:5"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1279:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:9:5"
									},
									"scope": 1462,
									"src": "1136:210:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										508
									],
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "1396:75:5",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "4552433732315061757361626c652e7465737431",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1416:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a",
																"typeString": "literal_string \"ERC721Pausable.test1\""
															},
															"value": "ERC721Pausable.test1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_ab2628dfc61e1093e0bfcf4259c205d0909e1c615368e5096ef306dcb682652a",
																"typeString": "literal_string \"ERC721Pausable.test1\""
															}
														],
														"id": 1451,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "1412:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1412:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "EmitStatement",
												"src": "1407:32:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1455,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1450:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Pausable_$1462_$",
																"typeString": "type(contract super ERC721Pausable)"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1456:5:5",
														"memberName": "test1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "1450:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1450:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "1450:13:5"
											}
										]
									},
									"functionSelector": "6b59084d",
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test1",
									"nameLocation": "1363:5:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1449,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1378:8:5"
									},
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1368:2:5"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1396:0:5"
									},
									"scope": 1462,
									"src": "1354:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1463,
							"src": "942:532:5",
							"usedErrors": [
								2894,
								2897
							],
							"usedEvents": [
								500,
								1490,
								1499,
								1508,
								2886,
								2891
							]
						}
					],
					"src": "129:1345:5"
				},
				"id": 5
			},
			"contracts/MyNFT/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1474
						]
					},
					"id": 1475,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1465,
								"nodeType": "StructuredDocumentation",
								"src": "146:288:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1474,
							"linearizedBaseContracts": [
								1474
							],
							"name": "IERC165",
							"nameLocation": "446:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "461:347:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "823:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "848:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "841:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1467,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "841:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:20:6"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "884:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1470,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "884:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:6:6"
									},
									"scope": 1474,
									"src": "814:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1475,
							"src": "436:457:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:775:6"
				},
				"id": 6
			},
			"contracts/MyNFT/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1474
						],
						"IERC721": [
							1591
						]
					},
					"id": 1592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1476,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:7"
						},
						{
							"absolutePath": "contracts/MyNFT/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1478,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1592,
							"sourceUnit": 1475,
							"src": "139:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1477,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1474,
										"src": "147:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1480,
										"name": "IERC165",
										"nameLocations": [
											"274:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1474,
										"src": "274:7:7"
									},
									"id": 1481,
									"nodeType": "InheritanceSpecifier",
									"src": "274:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1479,
								"nodeType": "StructuredDocumentation",
								"src": "181:70:7",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1591,
							"linearizedBaseContracts": [
								1591,
								1474
							],
							"name": "IERC721",
							"nameLocation": "263:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "289:90:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1490,
									"name": "Transfer",
									"nameLocation": "391:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "416:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "400:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "438:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "422:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "458:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "442:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:67:7"
									},
									"src": "385:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "475:96:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1499,
									"name": "Approval",
									"nameLocation": "583:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "608:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "592:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "631:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "615:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "657:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "641:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:74:7"
									},
									"src": "577:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "674:119:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1508,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "820:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "843:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "869:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:7"
									},
									"src": "799:85:7"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "892:78:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "985:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1003:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "995:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:15:7"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1041:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1033:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:17:7"
									},
									"scope": 1591,
									"src": "976:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "1058:137:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1210:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1226:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1218:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:17:7"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1266:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1258:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:15:7"
									},
									"scope": 1591,
									"src": "1201:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "1281:578:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1874:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1899:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1891:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1913:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1905:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1925:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1917:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1949:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1934:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:64:7"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1963:0:7"
									},
									"scope": 1591,
									"src": "1865:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "1972:721:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2708:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2733:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2725:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2747:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2739:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2759:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2751:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2751:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:43:7"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2776:0:7"
									},
									"scope": 1591,
									"src": "2699:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "2785:748:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3548:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3569:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "3561:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3561:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3583:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "3575:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3575:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3595:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "3587:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3587:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3560:43:7"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3612:0:7"
									},
									"scope": 1591,
									"src": "3539:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "3621:464:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4100:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4116:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "4108:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4128:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "4120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4107:29:7"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4145:0:7"
									},
									"scope": 1591,
									"src": "4091:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "4154:324:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4493:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4519:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4511:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4534:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4529:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4529:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4510:33:7"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4552:0:7"
									},
									"scope": 1591,
									"src": "4484:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "4561:145:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4721:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4741:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "4733:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4733:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4732:17:7"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4781:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "4773:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4772:18:7"
									},
									"scope": 1591,
									"src": "4712:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "4799:142:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4956:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4981:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "4973:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4996:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "4988:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4972:33:7"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "5029:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5029:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:6:7"
									},
									"scope": 1591,
									"src": "4947:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1592,
							"src": "253:4785:7",
							"usedErrors": [],
							"usedEvents": [
								1490,
								1499,
								1508
							]
						}
					],
					"src": "111:4927:7"
				},
				"id": 7
			},
			"contracts/MyNFT/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1591
						],
						"IERC721Enumerable": [
							1623
						]
					},
					"id": 1624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1593,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:8"
						},
						{
							"absolutePath": "contracts/MyNFT/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1624,
							"sourceUnit": 1592,
							"src": "160:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1594,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1591,
										"src": "168:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1597,
										"name": "IERC721",
										"nameLocations": [
											"374:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1591,
										"src": "374:7:8"
									},
									"id": 1598,
									"nodeType": "InheritanceSpecifier",
									"src": "374:7:8"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1596,
								"nodeType": "StructuredDocumentation",
								"src": "202:139:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1623,
							"linearizedBaseContracts": [
								1623,
								1591,
								1474
							],
							"name": "IERC721Enumerable",
							"nameLocation": "353:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "389:84:8",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "488:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:8"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "525:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:9:8"
									},
									"scope": 1623,
									"src": "479:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "542:174:8",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "731:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "759:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "751:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "774:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "766:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:30:8"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "804:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:9:8"
									},
									"scope": 1623,
									"src": "722:91:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "821:167:8",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "1003:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1024:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "1016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:15:8"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "1054:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:9:8"
									},
									"scope": 1623,
									"src": "994:69:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1624,
							"src": "343:723:8",
							"usedErrors": [],
							"usedEvents": [
								1490,
								1499,
								1508
							]
						}
					],
					"src": "132:934:8"
				},
				"id": 8
			},
			"contracts/MyNFT/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1591
						],
						"IERC721Metadata": [
							1651
						]
					},
					"id": 1652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:9"
						},
						{
							"absolutePath": "contracts/MyNFT/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1652,
							"sourceUnit": 1592,
							"src": "158:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1626,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1591,
										"src": "166:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1629,
										"name": "IERC721",
										"nameLocations": [
											"367:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1591,
										"src": "367:7:9"
									},
									"id": 1630,
									"nodeType": "InheritanceSpecifier",
									"src": "367:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1628,
								"nodeType": "StructuredDocumentation",
								"src": "200:136:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1651,
							"linearizedBaseContracts": [
								1651,
								1591,
								1474
							],
							"name": "IERC721Metadata",
							"nameLocation": "348:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "382:60:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "457:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "461:2:9"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "487:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "487:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:15:9"
									},
									"scope": 1651,
									"src": "448:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "510:62:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "587:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:9"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "619:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "619:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:15:9"
									},
									"scope": 1651,
									"src": "578:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "642:92:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "749:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "766:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "758:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:17:9"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "798:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "798:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:15:9"
									},
									"scope": 1651,
									"src": "740:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1652,
							"src": "338:478:9",
							"usedErrors": [],
							"usedEvents": [
								1490,
								1499,
								1508
							]
						}
					],
					"src": "130:686:9"
				},
				"id": 9
			},
			"contracts/MyNFT/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1669
						]
					},
					"id": 1670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1654,
								"nodeType": "StructuredDocumentation",
								"src": "147:158:10",
								"text": " @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1669,
							"linearizedBaseContracts": [
								1669
							],
							"name": "IERC721Receiver",
							"nameLocation": "317:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "340:509:10",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "864:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "899:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "891:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "926:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "918:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "949:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "941:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "982:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "967:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "967:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:113:10"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "1012:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1665,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1012:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:8:10"
									},
									"scope": 1669,
									"src": "855:165:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1670,
							"src": "307:716:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "119:904:10"
				},
				"id": 10
			},
			"contracts/MyNFT/Math.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/Math.sol",
					"exportedSymbols": {
						"Math": [
							2724
						]
					},
					"id": 2725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1671,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1672,
								"nodeType": "StructuredDocumentation",
								"src": "134:75:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2724,
							"linearizedBaseContracts": [
								2724
							],
							"name": "Math",
							"nameLocation": "219:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "231:52:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1675,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "295:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:2:11"
									},
									"src": "289:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1680,
									"members": [
										{
											"id": 1676,
											"name": "Floor",
											"nameLocation": "351:5:11",
											"nodeType": "EnumValue",
											"src": "351:5:11"
										},
										{
											"id": 1677,
											"name": "Ceil",
											"nameLocation": "395:4:11",
											"nodeType": "EnumValue",
											"src": "395:4:11"
										},
										{
											"id": 1678,
											"name": "Trunc",
											"nameLocation": "438:5:11",
											"nodeType": "EnumValue",
											"src": "438:5:11"
										},
										{
											"id": 1679,
											"name": "Expand",
											"nameLocation": "469:6:11",
											"nodeType": "EnumValue",
											"src": "469:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "331:8:11",
									"nodeType": "EnumDefinition",
									"src": "326:174:11"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "713:146:11",
										"statements": [
											{
												"id": 1710,
												"nodeType": "UncheckedBlock",
												"src": "724:128:11",
												"statements": [
													{
														"assignments": [
															1693
														],
														"declarations": [
															{
																"constant": false,
																"id": 1693,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "757:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1710,
																"src": "749:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1692,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "749:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1697,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1694,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "761:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "765:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "761:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "749:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1698,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "785:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1699,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "789:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "785:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1705,
														"nodeType": "IfStatement",
														"src": "781:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "800:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "807:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1703,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "799:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1691,
															"id": 1704,
															"nodeType": "Return",
															"src": "792:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1707,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "838:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1708,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1691,
														"id": 1709,
														"nodeType": "Return",
														"src": "824:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "508:108:11",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "631:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "646:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "638:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "657:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "649:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:22:11"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "688:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "683:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "683:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "705:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "697:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:30:11"
									},
									"scope": 2724,
									"src": "622:237:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "1075:118:11",
										"statements": [
											{
												"id": 1738,
												"nodeType": "UncheckedBlock",
												"src": "1086:100:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1724,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "1115:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1725,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "1119:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1115:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1731,
														"nodeType": "IfStatement",
														"src": "1111:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1130:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1137:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1729,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1129:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1723,
															"id": 1730,
															"nodeType": "Return",
															"src": "1122:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1733,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "1168:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1734,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1717,
																		"src": "1172:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1736,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1723,
														"id": 1737,
														"nodeType": "Return",
														"src": "1154:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "867:111:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "993:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1008:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "1000:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1019:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "1011:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:22:11"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1050:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "1045:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1067:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "1059:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:30:11"
									},
									"scope": 2724,
									"src": "984:209:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "1412:427:11",
										"statements": [
											{
												"id": 1780,
												"nodeType": "UncheckedBlock",
												"src": "1423:409:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1752,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "1685:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1690:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1685:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1759,
														"nodeType": "IfStatement",
														"src": "1681:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1701:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1707:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1757,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1700:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1751,
															"id": 1758,
															"nodeType": "Return",
															"src": "1693:16:11"
														}
													},
													{
														"assignments": [
															1761
														],
														"declarations": [
															{
																"constant": false,
																"id": 1761,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1732:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1780,
																"src": "1724:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1760,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1724:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1765,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1762,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "1736:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1763,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "1740:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1736:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1724:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1766,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "1760:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1767,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "1764:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1760:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1769,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "1769:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1760:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1775,
														"nodeType": "IfStatement",
														"src": "1756:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1780:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1787:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1779:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1751,
															"id": 1774,
															"nodeType": "Return",
															"src": "1772:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1812:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1777,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "1818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1778,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1811:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1751,
														"id": 1779,
														"nodeType": "Return",
														"src": "1804:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "1201:114:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1330:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1345:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "1337:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1356:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "1348:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:22:11"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1387:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "1382:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1382:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1404:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "1396:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:30:11"
									},
									"scope": 2724,
									"src": "1321:518:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "2059:119:11",
										"statements": [
											{
												"id": 1808,
												"nodeType": "UncheckedBlock",
												"src": "2070:101:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1794,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "2099:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2104:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2099:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1801,
														"nodeType": "IfStatement",
														"src": "2095:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2115:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2122:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1799,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2114:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1793,
															"id": 1800,
															"nodeType": "Return",
															"src": "2107:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2147:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1803,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1785,
																		"src": "2153:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1804,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1787,
																		"src": "2157:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2153:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1806,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2146:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1793,
														"id": 1807,
														"nodeType": "Return",
														"src": "2139:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "1847:115:11",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1977:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1992:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1984:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2003:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1995:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:22:11"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2034:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2029:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2029:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2051:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2043:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:30:11"
									},
									"scope": 2724,
									"src": "1968:210:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "2408:119:11",
										"statements": [
											{
												"id": 1836,
												"nodeType": "UncheckedBlock",
												"src": "2419:101:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1822,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "2448:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2453:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2448:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1829,
														"nodeType": "IfStatement",
														"src": "2444:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2464:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2471:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2463:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1821,
															"id": 1828,
															"nodeType": "Return",
															"src": "2456:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2496:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1831,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "2502:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1832,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "2506:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2502:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1834,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2495:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1821,
														"id": 1835,
														"nodeType": "Return",
														"src": "2488:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "2186:125:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2326:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2341:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "2333:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2352:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "2344:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2332:22:11"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2383:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "2378:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2378:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2400:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "2392:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:30:11"
									},
									"scope": 2724,
									"src": "2317:210:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "2669:39:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1848,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2687:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1849,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1843,
															"src": "2691:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2687:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1852,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "2699:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2687:13:11",
													"trueExpression": {
														"id": 1851,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "2695:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1847,
												"id": 1854,
												"nodeType": "Return",
												"src": "2680:20:11"
											}
										]
									},
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "2535:61:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2611:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2623:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "2615:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2634:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "2626:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:22:11"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "2660:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:9:11"
									},
									"scope": 2724,
									"src": "2602:106:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "2851:39:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1866,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "2869:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1867,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "2873:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2869:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1870,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "2881:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2869:13:11",
													"trueExpression": {
														"id": 1869,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "2877:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1865,
												"id": 1872,
												"nodeType": "Return",
												"src": "2862:20:11"
											}
										]
									},
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "2716:62:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2793:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2805:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2797:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2816:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2808:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2796:22:11"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2842:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2842:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:9:11"
									},
									"scope": 2724,
									"src": "2784:106:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "3080:85:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1884,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1877,
																	"src": "3137:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1885,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "3141:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3137:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1887,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3136:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1888,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1877,
																		"src": "3147:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1889,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "3151:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3147:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1891,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3146:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3156:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3146:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3136:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1883,
												"id": 1895,
												"nodeType": "Return",
												"src": "3129:28:11"
											}
										]
									},
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "2898:105:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3018:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3034:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "3026:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3045:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "3037:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3037:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3025:22:11"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "3071:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3071:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3070:9:11"
									},
									"scope": 2724,
									"src": "3009:156:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "3465:610:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1907,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "3480:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3485:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3480:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1915,
												"nodeType": "IfStatement",
												"src": "3476:130:11",
												"trueBody": {
													"id": 1914,
													"nodeType": "Block",
													"src": "3488:118:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1910,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "3589:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1911,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "3593:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3589:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1906,
															"id": 1913,
															"nodeType": "Return",
															"src": "3582:12:11"
														}
													]
												}
											},
											{
												"id": 1930,
												"nodeType": "UncheckedBlock",
												"src": "3996:72:11",
												"statements": [
													{
														"expression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1916,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "4028:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4033:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4028:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1920,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1900,
																					"src": "4042:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4046:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "4042:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1923,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4041:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1924,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "4051:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4041:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4055:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4041:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "4028:28:11",
															"trueExpression": {
																"hexValue": "30",
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4037:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1906,
														"id": 1929,
														"nodeType": "Return",
														"src": "4021:35:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "3173:215:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3403:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3419:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "3411:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3411:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3430:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "3422:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3410:22:11"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "3456:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3456:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:9:11"
									},
									"scope": 2724,
									"src": "3394:681:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "4505:4097:11",
										"statements": [
											{
												"id": 2056,
												"nodeType": "UncheckedBlock",
												"src": "4516:4079:11",
												"statements": [
													{
														"assignments": [
															1945
														],
														"declarations": [
															{
																"constant": false,
																"id": 1945,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4849:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2056,
																"src": "4841:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1944,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4841:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1949,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1946,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "4857:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1947,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "4861:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4857:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4841:21:11"
													},
													{
														"assignments": [
															1951
														],
														"declarations": [
															{
																"constant": false,
																"id": 1951,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4930:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2056,
																"src": "4922:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1950,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4922:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1952,
														"nodeType": "VariableDeclarationStatement",
														"src": "4922:13:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5003:125:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5022:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5039:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5042:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5049:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5045:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5045:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5032:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5032:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "5026:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5070:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "5087:2:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5091:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5083:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5083:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "5102:2:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5106:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5099:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5099:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5079:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5070:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1945,
																"isOffset": false,
																"isSlot": false,
																"src": "5091:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1945,
																"isOffset": false,
																"isSlot": false,
																"src": "5106:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1951,
																"isOffset": false,
																"isSlot": false,
																"src": "5070:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "5039:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1937,
																"isOffset": false,
																"isSlot": false,
																"src": "5042:1:11",
																"valueSize": 1
															}
														],
														"id": 1953,
														"nodeType": "InlineAssembly",
														"src": "4994:134:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1954,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "5212:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5221:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5212:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1962,
														"nodeType": "IfStatement",
														"src": "5208:373:11",
														"trueBody": {
															"id": 1961,
															"nodeType": "Block",
															"src": "5224:357:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1957,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1945,
																			"src": "5546:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1958,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "5554:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5546:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1943,
																	"id": 1960,
																	"nodeType": "Return",
																	"src": "5539:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1963,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "5690:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1964,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "5705:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5690:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1970,
														"nodeType": "IfStatement",
														"src": "5686:90:11",
														"trueBody": {
															"id": 1969,
															"nodeType": "Block",
															"src": "5712:64:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1966,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1675,
																			"src": "5738:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5738:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1968,
																	"nodeType": "RevertStatement",
																	"src": "5731:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															1972
														],
														"declarations": [
															{
																"constant": false,
																"id": 1972,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6046:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2056,
																"src": "6038:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1971,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6038:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1973,
														"nodeType": "VariableDeclarationStatement",
														"src": "6038:17:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6079:298:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6150:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "6170:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6173:1:11"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6176:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "6163:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6163:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "6150:9:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6273:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "6286:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "6296:9:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "6307:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "6293:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6293:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6282:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6282:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "6273:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6332:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6345:5:11"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "6352:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6341:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6341:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6332:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1939,
																"isOffset": false,
																"isSlot": false,
																"src": "6176:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1945,
																"isOffset": false,
																"isSlot": false,
																"src": "6307:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1945,
																"isOffset": false,
																"isSlot": false,
																"src": "6332:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1945,
																"isOffset": false,
																"isSlot": false,
																"src": "6345:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1951,
																"isOffset": false,
																"isSlot": false,
																"src": "6273:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1951,
																"isOffset": false,
																"isSlot": false,
																"src": "6286:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1972,
																"isOffset": false,
																"isSlot": false,
																"src": "6150:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1972,
																"isOffset": false,
																"isSlot": false,
																"src": "6296:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1972,
																"isOffset": false,
																"isSlot": false,
																"src": "6352:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6170:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1937,
																"isOffset": false,
																"isSlot": false,
																"src": "6173:1:11",
																"valueSize": 1
															}
														],
														"id": 1974,
														"nodeType": "InlineAssembly",
														"src": "6070:307:11"
													},
													{
														"assignments": [
															1976
														],
														"declarations": [
															{
																"constant": false,
																"id": 1976,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6594:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2056,
																"src": "6586:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6586:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1983,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1977,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "6601:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6616:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1979,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "6620:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6616:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6615:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6601:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6586:46:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6656:371:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6723:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6742:11:11"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6755:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6738:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6738:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6723:11:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6830:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6843:5:11"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6850:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6839:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6839:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6830:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6973:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6993:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6996:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6989:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6989:12:11"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "7003:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6985:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6985:23:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6981:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6973:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1939,
																"isOffset": false,
																"isSlot": false,
																"src": "6723:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1939,
																"isOffset": false,
																"isSlot": false,
																"src": "6742:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1945,
																"isOffset": false,
																"isSlot": false,
																"src": "6830:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1945,
																"isOffset": false,
																"isSlot": false,
																"src": "6843:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "6755:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "6850:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "6973:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "6996:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "7003:4:11",
																"valueSize": 1
															}
														],
														"id": 1984,
														"nodeType": "InlineAssembly",
														"src": "6647:380:11"
													},
													{
														"expression": {
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1985,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1945,
																"src": "7096:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1986,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "7105:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1987,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "7113:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7105:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7096:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1990,
														"nodeType": "ExpressionStatement",
														"src": "7096:21:11"
													},
													{
														"assignments": [
															1992
														],
														"declarations": [
															{
																"constant": false,
																"id": 1992,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "7448:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2056,
																"src": "7440:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1991,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7440:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1999,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7459:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1994,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1939,
																			"src": "7463:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7459:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1996,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7458:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7478:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "7458:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7440:39:11"
													},
													{
														"expression": {
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2000,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "7700:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7711:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2002,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "7715:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2003,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "7729:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7715:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7711:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2007,
														"nodeType": "ExpressionStatement",
														"src": "7700:36:11"
													},
													{
														"expression": {
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2008,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "7770:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7781:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2010,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "7785:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2011,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "7799:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7785:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7781:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7770:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2015,
														"nodeType": "ExpressionStatement",
														"src": "7770:36:11"
													},
													{
														"expression": {
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2016,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "7841:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7852:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2018,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "7856:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2019,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "7870:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7856:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7852:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7841:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2023,
														"nodeType": "ExpressionStatement",
														"src": "7841:36:11"
													},
													{
														"expression": {
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2024,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "7912:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7923:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2026,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "7927:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2027,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "7941:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7927:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7923:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7912:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2031,
														"nodeType": "ExpressionStatement",
														"src": "7912:36:11"
													},
													{
														"expression": {
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2032,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "7983:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7994:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2034,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "7998:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2035,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "8012:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7998:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7994:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7983:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2039,
														"nodeType": "ExpressionStatement",
														"src": "7983:36:11"
													},
													{
														"expression": {
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2040,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "8055:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8066:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2042,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "8070:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2043,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "8084:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8070:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8066:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8055:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2047,
														"nodeType": "ExpressionStatement",
														"src": "8055:36:11"
													},
													{
														"expression": {
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2048,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "8531:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2049,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "8540:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2050,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "8548:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8540:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8531:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2053,
														"nodeType": "ExpressionStatement",
														"src": "8531:24:11"
													},
													{
														"expression": {
															"id": 2054,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "8577:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1943,
														"id": 2055,
														"nodeType": "Return",
														"src": "8570:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "4083:318:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "4416:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4431:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "4423:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4442:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "4434:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "4453:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "4445:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4445:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4422:43:11"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4497:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "4489:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:16:11"
									},
									"scope": 2724,
									"src": "4407:4195:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "8849:198:11",
										"statements": [
											{
												"assignments": [
													2074
												],
												"declarations": [
													{
														"constant": false,
														"id": 2074,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8868:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2100,
														"src": "8860:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8860:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2080,
												"initialValue": {
													"arguments": [
														{
															"id": 2076,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "8884:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2077,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "8887:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2078,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "8890:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2075,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2058,
															2101
														],
														"referencedDeclaration": 2058,
														"src": "8877:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8877:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8860:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2082,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "8934:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1680",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1680",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2081,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "8917:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1680_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8917:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2085,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "8954:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2086,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "8957:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2087,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2065,
																	"src": "8960:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2084,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8947:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8947:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8975:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8947:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8917:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2097,
												"nodeType": "IfStatement",
												"src": "8913:103:11",
												"trueBody": {
													"id": 2096,
													"nodeType": "Block",
													"src": "8978:38:11",
													"statements": [
														{
															"expression": {
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2092,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "8993:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9003:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8993:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2095,
															"nodeType": "ExpressionStatement",
															"src": "8993:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2098,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2074,
													"src": "9033:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2072,
												"id": 2099,
												"nodeType": "Return",
												"src": "9026:13:11"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "8610:123:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8748:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8763:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8755:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8755:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8774:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8766:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8766:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8785:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8777:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8777:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8807:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8798:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2067,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2066,
														"name": "Rounding",
														"nameLocations": [
															"8798:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "8798:8:11"
													},
													"referencedDeclaration": 1680,
													"src": "8798:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8754:62:11"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8840:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8840:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8839:9:11"
									},
									"scope": 2724,
									"src": "8739:308:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "9346:1616:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2109,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "9361:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9366:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9361:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2115,
												"nodeType": "IfStatement",
												"src": "9357:47:11",
												"trueBody": {
													"id": 2114,
													"nodeType": "Block",
													"src": "9369:35:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9391:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2108,
															"id": 2113,
															"nodeType": "Return",
															"src": "9384:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2117
												],
												"declarations": [
													{
														"constant": false,
														"id": 2117,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10103:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2212,
														"src": "10095:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10095:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2126,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10112:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2120,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "10123:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2119,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2380,
																			2415
																		],
																		"referencedDeclaration": 2380,
																		"src": "10118:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10118:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10129:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10118:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2124,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10117:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10112:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10095:36:11"
											},
											{
												"id": 2211,
												"nodeType": "UncheckedBlock",
												"src": "10538:417:11",
												"statements": [
													{
														"expression": {
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2127,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "10563:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2128,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "10573:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2129,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "10582:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2130,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "10586:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10582:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10573:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2133,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10572:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10597:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10572:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10563:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2137,
														"nodeType": "ExpressionStatement",
														"src": "10563:35:11"
													},
													{
														"expression": {
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2138,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "10613:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2139,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "10623:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2140,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "10632:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2141,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "10636:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10632:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10623:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2144,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10622:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10647:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10622:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10613:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2148,
														"nodeType": "ExpressionStatement",
														"src": "10613:35:11"
													},
													{
														"expression": {
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2149,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "10663:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2150,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "10673:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2151,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "10682:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2152,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "10686:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10682:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10673:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2155,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10672:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10697:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10672:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10663:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2159,
														"nodeType": "ExpressionStatement",
														"src": "10663:35:11"
													},
													{
														"expression": {
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2160,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "10713:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2161,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "10723:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2162,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "10732:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2163,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "10736:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10723:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2166,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10722:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10747:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10722:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10713:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2170,
														"nodeType": "ExpressionStatement",
														"src": "10713:35:11"
													},
													{
														"expression": {
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2171,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "10763:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2172,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "10773:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2173,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "10782:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2174,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "10786:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10782:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10773:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2177,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10772:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10797:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10772:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10763:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2181,
														"nodeType": "ExpressionStatement",
														"src": "10763:35:11"
													},
													{
														"expression": {
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2182,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "10813:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2183,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "10823:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2184,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "10832:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2185,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "10836:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10832:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10823:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2188,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10822:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10847:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10822:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10813:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2192,
														"nodeType": "ExpressionStatement",
														"src": "10813:35:11"
													},
													{
														"expression": {
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2193,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2117,
																"src": "10863:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2194,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2117,
																				"src": "10873:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2195,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "10882:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2196,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "10886:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10882:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10873:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2199,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10872:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10897:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10872:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10863:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2203,
														"nodeType": "ExpressionStatement",
														"src": "10863:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2205,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2117,
																	"src": "10924:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2206,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2104,
																		"src": "10932:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2207,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "10936:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10932:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2204,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "10920:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10920:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2108,
														"id": 2210,
														"nodeType": "Return",
														"src": "10913:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "9055:228:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "9298:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9311:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "9303:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9303:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9302:11:11"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "9337:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9337:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9336:9:11"
									},
									"scope": 2724,
									"src": "9289:1673:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "11143:169:11",
										"statements": [
											{
												"id": 2246,
												"nodeType": "UncheckedBlock",
												"src": "11154:151:11",
												"statements": [
													{
														"assignments": [
															2225
														],
														"declarations": [
															{
																"constant": false,
																"id": 2225,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11187:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2246,
																"src": "11179:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2224,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11179:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2229,
														"initialValue": {
															"arguments": [
																{
																	"id": 2227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2216,
																	"src": "11201:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2226,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2213,
																	2248
																],
																"referencedDeclaration": 2213,
																"src": "11196:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11196:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11179:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2230,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "11225:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2232,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2219,
																						"src": "11252:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1680",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1680",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2231,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2723,
																					"src": "11235:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1680_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11235:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2234,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2225,
																						"src": "11265:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2235,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2225,
																						"src": "11274:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11265:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2237,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "11283:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11265:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11235:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11291:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11235:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11287:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2243,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11234:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11225:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2223,
														"id": 2245,
														"nodeType": "Return",
														"src": "11218:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2214,
										"nodeType": "StructuredDocumentation",
										"src": "10970:91:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "11076:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11089:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "11081:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11101:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "11092:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2217,
														"name": "Rounding",
														"nameLocations": [
															"11092:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "11092:8:11"
													},
													"referencedDeclaration": 1680,
													"src": "11092:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11080:30:11"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "11134:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11134:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11133:9:11"
									},
									"scope": 2724,
									"src": "11067:245:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2379,
										"nodeType": "Block",
										"src": "11509:958:11",
										"statements": [
											{
												"assignments": [
													2257
												],
												"declarations": [
													{
														"constant": false,
														"id": 2257,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11528:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2379,
														"src": "11520:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11520:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2259,
												"initialValue": {
													"hexValue": "30",
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11537:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11520:18:11"
											},
											{
												"id": 2376,
												"nodeType": "UncheckedBlock",
												"src": "11549:887:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2260,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "11578:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11587:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11578:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11593:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11578:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2274,
														"nodeType": "IfStatement",
														"src": "11574:102:11",
														"trueBody": {
															"id": 2273,
															"nodeType": "Block",
															"src": "11596:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2265,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "11615:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11625:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11615:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2268,
																	"nodeType": "ExpressionStatement",
																	"src": "11615:13:11"
																},
																{
																	"expression": {
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2269,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "11647:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11657:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11647:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2272,
																	"nodeType": "ExpressionStatement",
																	"src": "11647:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2275,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "11694:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11703:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11694:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11708:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11694:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2289,
														"nodeType": "IfStatement",
														"src": "11690:99:11",
														"trueBody": {
															"id": 2288,
															"nodeType": "Block",
															"src": "11711:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2280,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "11730:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11740:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11730:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2283,
																	"nodeType": "ExpressionStatement",
																	"src": "11730:12:11"
																},
																{
																	"expression": {
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2284,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "11761:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11771:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11761:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2287,
																	"nodeType": "ExpressionStatement",
																	"src": "11761:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2290,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "11807:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11816:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11807:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11821:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11807:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2304,
														"nodeType": "IfStatement",
														"src": "11803:99:11",
														"trueBody": {
															"id": 2303,
															"nodeType": "Block",
															"src": "11824:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2295,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "11843:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11843:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2298,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:12:11"
																},
																{
																	"expression": {
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2299,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "11874:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11884:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11874:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2302,
																	"nodeType": "ExpressionStatement",
																	"src": "11874:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2305,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "11920:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11929:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11920:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11934:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11920:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2319,
														"nodeType": "IfStatement",
														"src": "11916:99:11",
														"trueBody": {
															"id": 2318,
															"nodeType": "Block",
															"src": "11937:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2310,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "11956:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11966:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11956:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2313,
																	"nodeType": "ExpressionStatement",
																	"src": "11956:12:11"
																},
																{
																	"expression": {
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2314,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "11987:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11997:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11987:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2317,
																	"nodeType": "ExpressionStatement",
																	"src": "11987:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2320,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "12033:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12033:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12033:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2334,
														"nodeType": "IfStatement",
														"src": "12029:96:11",
														"trueBody": {
															"id": 2333,
															"nodeType": "Block",
															"src": "12049:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2325,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "12068:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12078:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12068:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2328,
																	"nodeType": "ExpressionStatement",
																	"src": "12068:11:11"
																},
																{
																	"expression": {
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "12098:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12108:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12098:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2332,
																	"nodeType": "ExpressionStatement",
																	"src": "12098:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2335,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "12143:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12152:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12143:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12156:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12143:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2349,
														"nodeType": "IfStatement",
														"src": "12139:96:11",
														"trueBody": {
															"id": 2348,
															"nodeType": "Block",
															"src": "12159:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2340,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "12178:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12188:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12178:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2343,
																	"nodeType": "ExpressionStatement",
																	"src": "12178:11:11"
																},
																{
																	"expression": {
																		"id": 2346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2344,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "12208:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12218:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12208:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2347,
																	"nodeType": "ExpressionStatement",
																	"src": "12208:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2350,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "12253:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12262:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12253:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12266:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12253:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2364,
														"nodeType": "IfStatement",
														"src": "12249:96:11",
														"trueBody": {
															"id": 2363,
															"nodeType": "Block",
															"src": "12269:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2355,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2251,
																			"src": "12288:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12298:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12288:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2358,
																	"nodeType": "ExpressionStatement",
																	"src": "12288:11:11"
																},
																{
																	"expression": {
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2359,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "12318:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12328:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12318:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2362,
																	"nodeType": "ExpressionStatement",
																	"src": "12318:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2365,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2251,
																	"src": "12363:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12372:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12363:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12376:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12363:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2375,
														"nodeType": "IfStatement",
														"src": "12359:66:11",
														"trueBody": {
															"id": 2374,
															"nodeType": "Block",
															"src": "12379:46:11",
															"statements": [
																{
																	"expression": {
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "12398:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12408:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12398:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2373,
																	"nodeType": "ExpressionStatement",
																	"src": "12398:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2377,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2257,
													"src": "12453:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2255,
												"id": 2378,
												"nodeType": "Return",
												"src": "12446:13:11"
											}
										]
									},
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "11320:122:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11457:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11470:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "11462:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11462:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11461:15:11"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "11500:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11500:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11499:9:11"
									},
									"scope": 2724,
									"src": "11448:1019:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2414,
										"nodeType": "Block",
										"src": "12706:173:11",
										"statements": [
											{
												"id": 2413,
												"nodeType": "UncheckedBlock",
												"src": "12717:155:11",
												"statements": [
													{
														"assignments": [
															2392
														],
														"declarations": [
															{
																"constant": false,
																"id": 2392,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12750:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2413,
																"src": "12742:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2391,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12742:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2396,
														"initialValue": {
															"arguments": [
																{
																	"id": 2394,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2383,
																	"src": "12764:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2393,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2380,
																	2415
																],
																"referencedDeclaration": 2380,
																"src": "12759:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12759:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12742:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2397,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "12792:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2399,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2386,
																						"src": "12819:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1680",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1680",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2398,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2723,
																					"src": "12802:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1680_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12802:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2405,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2403,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2401,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12832:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2402,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2392,
																						"src": "12837:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12832:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2404,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2383,
																					"src": "12846:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12832:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12802:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12858:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12802:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12854:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2410,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12801:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12792:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2390,
														"id": 2412,
														"nodeType": "Return",
														"src": "12785:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "12475:145:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12635:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12648:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "12640:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12640:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12664:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "12655:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2384,
														"name": "Rounding",
														"nameLocations": [
															"12655:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "12655:8:11"
													},
													"referencedDeclaration": 1680,
													"src": "12655:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12639:34:11"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "12697:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12697:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12696:9:11"
									},
									"scope": 2724,
									"src": "12626:253:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2543,
										"nodeType": "Block",
										"src": "13078:886:11",
										"statements": [
											{
												"assignments": [
													2424
												],
												"declarations": [
													{
														"constant": false,
														"id": 2424,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13097:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2543,
														"src": "13089:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13089:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2426,
												"initialValue": {
													"hexValue": "30",
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13106:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13089:18:11"
											},
											{
												"id": 2540,
												"nodeType": "UncheckedBlock",
												"src": "13118:815:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2427,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "13147:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13156:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13162:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "13156:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "13147:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2443,
														"nodeType": "IfStatement",
														"src": "13143:106:11",
														"trueBody": {
															"id": 2442,
															"nodeType": "Block",
															"src": "13166:83:11",
															"statements": [
																{
																	"expression": {
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2432,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2418,
																			"src": "13185:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2433,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13194:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13200:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "13194:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "13185:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2437,
																	"nodeType": "ExpressionStatement",
																	"src": "13185:17:11"
																},
																{
																	"expression": {
																		"id": 2440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2438,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "13221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "13221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2441,
																	"nodeType": "ExpressionStatement",
																	"src": "13221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2444,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "13267:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13276:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13282:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "13276:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "13267:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2460,
														"nodeType": "IfStatement",
														"src": "13263:106:11",
														"trueBody": {
															"id": 2459,
															"nodeType": "Block",
															"src": "13286:83:11",
															"statements": [
																{
																	"expression": {
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2449,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2418,
																			"src": "13305:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13314:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13320:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "13314:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "13305:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2454,
																	"nodeType": "ExpressionStatement",
																	"src": "13305:17:11"
																},
																{
																	"expression": {
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2455,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "13341:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13351:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "13341:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2458,
																	"nodeType": "ExpressionStatement",
																	"src": "13341:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2461,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "13387:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13396:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13402:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "13396:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "13387:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2477,
														"nodeType": "IfStatement",
														"src": "13383:106:11",
														"trueBody": {
															"id": 2476,
															"nodeType": "Block",
															"src": "13406:83:11",
															"statements": [
																{
																	"expression": {
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2466,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2418,
																			"src": "13425:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13434:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13440:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "13434:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "13425:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2471,
																	"nodeType": "ExpressionStatement",
																	"src": "13425:17:11"
																},
																{
																	"expression": {
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2472,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "13461:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13471:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13461:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2475,
																	"nodeType": "ExpressionStatement",
																	"src": "13461:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "13507:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13516:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13522:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13516:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13507:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2494,
														"nodeType": "IfStatement",
														"src": "13503:103:11",
														"trueBody": {
															"id": 2493,
															"nodeType": "Block",
															"src": "13525:81:11",
															"statements": [
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2483,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2418,
																			"src": "13544:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13553:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13559:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13553:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13544:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "13544:16:11"
																},
																{
																	"expression": {
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "13579:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13589:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13579:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ExpressionStatement",
																	"src": "13579:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2495,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "13624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13633:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13639:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13633:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13624:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2511,
														"nodeType": "IfStatement",
														"src": "13620:103:11",
														"trueBody": {
															"id": 2510,
															"nodeType": "Block",
															"src": "13642:81:11",
															"statements": [
																{
																	"expression": {
																		"id": 2504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2500,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2418,
																			"src": "13661:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13670:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13676:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13670:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13661:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2505,
																	"nodeType": "ExpressionStatement",
																	"src": "13661:16:11"
																},
																{
																	"expression": {
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2506,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "13696:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13706:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13696:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2509,
																	"nodeType": "ExpressionStatement",
																	"src": "13696:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2512,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "13741:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13750:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13756:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13750:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13741:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2528,
														"nodeType": "IfStatement",
														"src": "13737:103:11",
														"trueBody": {
															"id": 2527,
															"nodeType": "Block",
															"src": "13759:81:11",
															"statements": [
																{
																	"expression": {
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2517,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2418,
																			"src": "13778:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13787:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13793:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13787:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13778:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2522,
																	"nodeType": "ExpressionStatement",
																	"src": "13778:16:11"
																},
																{
																	"expression": {
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2523,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "13813:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13823:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13813:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2526,
																	"nodeType": "ExpressionStatement",
																	"src": "13813:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2529,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "13858:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13867:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13867:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13858:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2539,
														"nodeType": "IfStatement",
														"src": "13854:68:11",
														"trueBody": {
															"id": 2538,
															"nodeType": "Block",
															"src": "13876:46:11",
															"statements": [
																{
																	"expression": {
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2534,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "13895:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13905:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13895:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2537,
																	"nodeType": "ExpressionStatement",
																	"src": "13895:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2541,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2424,
													"src": "13950:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2422,
												"id": 2542,
												"nodeType": "Return",
												"src": "13943:13:11"
											}
										]
									},
									"documentation": {
										"id": 2416,
										"nodeType": "StructuredDocumentation",
										"src": "12887:123:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13025:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13039:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "13031:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13031:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13030:15:11"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "13069:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13069:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13068:9:11"
									},
									"scope": 2724,
									"src": "13016:948:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "14205:175:11",
										"statements": [
											{
												"id": 2577,
												"nodeType": "UncheckedBlock",
												"src": "14216:157:11",
												"statements": [
													{
														"assignments": [
															2556
														],
														"declarations": [
															{
																"constant": false,
																"id": 2556,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14249:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2577,
																"src": "14241:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2555,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14241:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2560,
														"initialValue": {
															"arguments": [
																{
																	"id": 2558,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "14264:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2557,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2544,
																	2579
																],
																"referencedDeclaration": 2544,
																"src": "14258:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14258:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14241:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2561,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2556,
																"src": "14292:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2563,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2550,
																						"src": "14319:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1680",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1680",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2562,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2723,
																					"src": "14302:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1680_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14302:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2565,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14332:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2566,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2556,
																						"src": "14338:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14332:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2568,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2547,
																					"src": "14347:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14332:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14302:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14359:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14302:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14355:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2574,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14301:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14292:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2554,
														"id": 2576,
														"nodeType": "Return",
														"src": "14285:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2545,
										"nodeType": "StructuredDocumentation",
										"src": "13972:146:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "14133:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14147:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "14139:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14139:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14163:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "14154:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2549,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2548,
														"name": "Rounding",
														"nameLocations": [
															"14154:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "14154:8:11"
													},
													"referencedDeclaration": 1680,
													"src": "14154:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14138:34:11"
									},
									"returnParameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "14196:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14196:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14195:9:11"
									},
									"scope": 2724,
									"src": "14124:256:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2665,
										"nodeType": "Block",
										"src": "14708:624:11",
										"statements": [
											{
												"assignments": [
													2588
												],
												"declarations": [
													{
														"constant": false,
														"id": 2588,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14727:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2665,
														"src": "14719:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14719:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2590,
												"initialValue": {
													"hexValue": "30",
													"id": 2589,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14736:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14719:18:11"
											},
											{
												"id": 2662,
												"nodeType": "UncheckedBlock",
												"src": "14748:553:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "14777:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14786:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14777:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14792:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14777:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2605,
														"nodeType": "IfStatement",
														"src": "14773:101:11",
														"trueBody": {
															"id": 2604,
															"nodeType": "Block",
															"src": "14795:79:11",
															"statements": [
																{
																	"expression": {
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2596,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "14814:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14824:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14814:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2599,
																	"nodeType": "ExpressionStatement",
																	"src": "14814:13:11"
																},
																{
																	"expression": {
																		"id": 2602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "14846:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14856:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14846:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2603,
																	"nodeType": "ExpressionStatement",
																	"src": "14846:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2606,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "14892:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14901:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14892:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14906:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14892:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2620,
														"nodeType": "IfStatement",
														"src": "14888:98:11",
														"trueBody": {
															"id": 2619,
															"nodeType": "Block",
															"src": "14909:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2611,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "14928:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14938:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14928:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2614,
																	"nodeType": "ExpressionStatement",
																	"src": "14928:12:11"
																},
																{
																	"expression": {
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "14959:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14959:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2618,
																	"nodeType": "ExpressionStatement",
																	"src": "14959:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2621,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "15004:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15013:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "15004:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15018:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15004:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "15000:98:11",
														"trueBody": {
															"id": 2634,
															"nodeType": "Block",
															"src": "15021:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2626,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "15040:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15050:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "15040:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2629,
																	"nodeType": "ExpressionStatement",
																	"src": "15040:12:11"
																},
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "15071:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15081:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "15071:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "15071:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "15116:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15125:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "15116:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15130:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15116:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2650,
														"nodeType": "IfStatement",
														"src": "15112:98:11",
														"trueBody": {
															"id": 2649,
															"nodeType": "Block",
															"src": "15133:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "15152:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15162:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "15152:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ExpressionStatement",
																	"src": "15152:12:11"
																},
																{
																	"expression": {
																		"id": 2647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2645,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "15183:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15193:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "15183:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2648,
																	"nodeType": "ExpressionStatement",
																	"src": "15183:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2651,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "15228:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15237:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "15228:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15228:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2661,
														"nodeType": "IfStatement",
														"src": "15224:66:11",
														"trueBody": {
															"id": 2660,
															"nodeType": "Block",
															"src": "15244:46:11",
															"statements": [
																{
																	"expression": {
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2656,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "15263:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15273:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15263:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2659,
																	"nodeType": "ExpressionStatement",
																	"src": "15263:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2663,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2588,
													"src": "15318:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2586,
												"id": 2664,
												"nodeType": "Return",
												"src": "15311:13:11"
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "14388:251:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14654:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14669:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "14661:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14661:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14660:15:11"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "14699:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14699:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14698:9:11"
									},
									"scope": 2724,
									"src": "14645:687:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "15575:182:11",
										"statements": [
											{
												"id": 2702,
												"nodeType": "UncheckedBlock",
												"src": "15586:164:11",
												"statements": [
													{
														"assignments": [
															2678
														],
														"declarations": [
															{
																"constant": false,
																"id": 2678,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15619:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2702,
																"src": "15611:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2677,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15611:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2682,
														"initialValue": {
															"arguments": [
																{
																	"id": 2680,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "15635:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2679,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2666,
																	2704
																],
																"referencedDeclaration": 2666,
																"src": "15628:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15628:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15611:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2683,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2678,
																"src": "15663:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2685,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2672,
																						"src": "15690:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1680",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1680",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2684,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2723,
																					"src": "15673:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1680_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15673:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2692,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2687,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15703:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2690,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2688,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2678,
																									"src": "15709:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2689,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15719:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15709:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2691,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15708:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15703:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2693,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2669,
																					"src": "15724:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15703:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15673:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15736:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15673:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15732:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2699,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15672:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15663:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2676,
														"id": 2701,
														"nodeType": "Return",
														"src": "15656:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2667,
										"nodeType": "StructuredDocumentation",
										"src": "15340:147:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15502:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15517:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "15509:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15509:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15533:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "15524:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2670,
														"name": "Rounding",
														"nameLocations": [
															"15524:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "15524:8:11"
													},
													"referencedDeclaration": 1680,
													"src": "15524:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15508:34:11"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "15566:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15566:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15565:9:11"
									},
									"scope": 2724,
									"src": "15493:264:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2722,
										"nodeType": "Block",
										"src": "15960:50:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2715,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2708,
																	"src": "15984:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1680",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1680",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15978:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2713,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15978:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15978:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15996:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15978:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16001:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15978:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2712,
												"id": 2721,
												"nodeType": "Return",
												"src": "15971:31:11"
											}
										]
									},
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "15765:115:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15895:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15921:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "15912:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2707,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2706,
														"name": "Rounding",
														"nameLocations": [
															"15912:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "15912:8:11"
													},
													"referencedDeclaration": 1680,
													"src": "15912:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15911:19:11"
									},
									"returnParameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "15954:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15954:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15953:6:11"
									},
									"scope": 2724,
									"src": "15886:124:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2725,
							"src": "211:15802:11",
							"usedErrors": [
								1675
							],
							"usedEvents": []
						}
					],
					"src": "106:15907:11"
				},
				"id": 11
			},
			"contracts/MyNFT/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"Ownable": [
							2872
						]
					},
					"id": 2873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:12"
						},
						{
							"absolutePath": "contracts/MyNFT/Context.sol",
							"file": "./Context.sol",
							"id": 2728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2873,
							"sourceUnit": 30,
							"src": "133:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2727,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 29,
										"src": "141:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2730,
										"name": "Context",
										"nameLocations": [
											"704:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "704:7:12"
									},
									"id": 2731,
									"nodeType": "InheritanceSpecifier",
									"src": "704:7:12"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2729,
								"nodeType": "StructuredDocumentation",
								"src": "175:498:12",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2872,
							"linearizedBaseContracts": [
								2872,
								29
							],
							"name": "Ownable",
							"nameLocation": "693:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2733,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "735:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2872,
									"src": "719:22:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2732,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "719:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2734,
										"nodeType": "StructuredDocumentation",
										"src": "750:87:12",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 2738,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "849:26:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "884:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2738,
												"src": "876:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:17:12"
									},
									"src": "843:50:12"
								},
								{
									"documentation": {
										"id": 2739,
										"nodeType": "StructuredDocumentation",
										"src": "901:84:12",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 2743,
									"name": "OwnableInvalidOwner",
									"nameLocation": "997:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1025:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "1017:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:15:12"
									},
									"src": "991:41:12"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 2749,
									"name": "OwnershipTransferred",
									"nameLocation": "1046:20:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1083:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "1067:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1114:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "1098:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:57:12"
									},
									"src": "1040:84:12"
								},
								{
									"body": {
										"id": 2774,
										"nodeType": "Block",
										"src": "1289:158:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2755,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "1304:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1328:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1320:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2756,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1320:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1320:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1304:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2769,
												"nodeType": "IfStatement",
												"src": "1300:97:12",
												"trueBody": {
													"id": 2768,
													"nodeType": "Block",
													"src": "1332:65:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1382:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1374:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2762,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1374:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1374:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2761,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2743,
																	"src": "1354:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1354:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2767,
															"nodeType": "RevertStatement",
															"src": "1347:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2771,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2752,
															"src": "1426:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2770,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "1407:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2773,
												"nodeType": "ExpressionStatement",
												"src": "1407:32:12"
											}
										]
									},
									"documentation": {
										"id": 2750,
										"nodeType": "StructuredDocumentation",
										"src": "1132:117:12",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 2775,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1275:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "1267:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:22:12"
									},
									"returnParameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:12"
									},
									"scope": 2872,
									"src": "1255:192:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "1561:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2778,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2809,
														"src": "1572:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1572:13:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "1572:13:12"
											},
											{
												"id": 2781,
												"nodeType": "PlaceholderStatement",
												"src": "1596:1:12"
											}
										]
									},
									"documentation": {
										"id": 2776,
										"nodeType": "StructuredDocumentation",
										"src": "1455:79:12",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2783,
									"name": "onlyOwner",
									"nameLocation": "1549:9:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1558:2:12"
									},
									"src": "1540:65:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2791,
										"nodeType": "Block",
										"src": "1741:32:12",
										"statements": [
											{
												"expression": {
													"id": 2789,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2733,
													"src": "1759:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2788,
												"id": 2790,
												"nodeType": "Return",
												"src": "1752:13:12"
											}
										]
									},
									"documentation": {
										"id": 2784,
										"nodeType": "StructuredDocumentation",
										"src": "1613:67:12",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1695:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1700:2:12"
									},
									"returnParameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "1732:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:9:12"
									},
									"scope": 2872,
									"src": "1686:87:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "1896:121:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2796,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "1911:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1911:7:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2798,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1922:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1922:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1911:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2807,
												"nodeType": "IfStatement",
												"src": "1907:103:12",
												"trueBody": {
													"id": 2806,
													"nodeType": "Block",
													"src": "1936:74:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2802,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "1985:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1985:12:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2801,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2738,
																	"src": "1958:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1958:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2805,
															"nodeType": "RevertStatement",
															"src": "1951:47:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2793,
										"nodeType": "StructuredDocumentation",
										"src": "1781:64:12",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 2809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1860:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:2:12"
									},
									"returnParameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1896:0:12"
									},
									"scope": 2872,
									"src": "1851:166:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2822,
										"nodeType": "Block",
										"src": "2415:49:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2453:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2445:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2816,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2445:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2445:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2815,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "2426:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2426:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2821,
												"nodeType": "ExpressionStatement",
												"src": "2426:30:12"
											}
										]
									},
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "2025:330:12",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2823,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2813,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2812,
												"name": "onlyOwner",
												"nameLocations": [
													"2405:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2783,
												"src": "2405:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2405:9:12"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2370:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2387:2:12"
									},
									"returnParameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2415:0:12"
									},
									"scope": 2872,
									"src": "2361:103:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2850,
										"nodeType": "Block",
										"src": "2689:150:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2831,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2826,
														"src": "2704:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2724:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2716:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2832,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2716:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2716:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2704:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2845,
												"nodeType": "IfStatement",
												"src": "2700:93:12",
												"trueBody": {
													"id": 2844,
													"nodeType": "Block",
													"src": "2728:65:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2778:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2770:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2838,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2770:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2770:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2837,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2743,
																	"src": "2750:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2750:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2843,
															"nodeType": "RevertStatement",
															"src": "2743:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2847,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2826,
															"src": "2822:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2846,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "2803:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2803:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2849,
												"nodeType": "ExpressionStatement",
												"src": "2803:28:12"
											}
										]
									},
									"documentation": {
										"id": 2824,
										"nodeType": "StructuredDocumentation",
										"src": "2472:141:12",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2851,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2829,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2828,
												"name": "onlyOwner",
												"nameLocations": [
													"2679:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2783,
												"src": "2679:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2679:9:12"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2628:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2654:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "2646:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:18:12"
									},
									"returnParameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2689:0:12"
									},
									"scope": 2872,
									"src": "2619:220:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "3062:128:12",
										"statements": [
											{
												"assignments": [
													2858
												],
												"declarations": [
													{
														"constant": false,
														"id": 2858,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3081:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 2870,
														"src": "3073:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2857,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3073:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2860,
												"initialValue": {
													"id": 2859,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2733,
													"src": "3092:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3073:25:12"
											},
											{
												"expression": {
													"id": 2863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2861,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "3109:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2862,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2854,
														"src": "3118:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3109:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2864,
												"nodeType": "ExpressionStatement",
												"src": "3109:17:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2866,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2858,
															"src": "3163:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2867,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2854,
															"src": "3173:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2865,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2749,
														"src": "3142:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3142:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2869,
												"nodeType": "EmitStatement",
												"src": "3137:45:12"
											}
										]
									},
									"documentation": {
										"id": 2852,
										"nodeType": "StructuredDocumentation",
										"src": "2847:146:12",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3008:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3035:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "3027:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3027:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3026:18:12"
									},
									"returnParameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3062:0:12"
									},
									"scope": 2872,
									"src": "2999:191:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2873,
							"src": "675:2518:12",
							"usedErrors": [
								2738,
								2743
							],
							"usedEvents": [
								2749
							]
						}
					],
					"src": "105:3088:12"
				},
				"id": 12
			},
			"contracts/MyNFT/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"Pausable": [
							2989
						]
					},
					"id": 2990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:13"
						},
						{
							"absolutePath": "contracts/MyNFT/Context.sol",
							"file": "./Context.sol",
							"id": 2876,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2990,
							"sourceUnit": 30,
							"src": "133:38:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2875,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 29,
										"src": "141:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2878,
										"name": "Context",
										"nameLocations": [
											"654:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "654:7:13"
									},
									"id": 2879,
									"nodeType": "InheritanceSpecifier",
									"src": "654:7:13"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2877,
								"nodeType": "StructuredDocumentation",
								"src": "175:447:13",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2989,
							"linearizedBaseContracts": [
								2989,
								29
							],
							"name": "Pausable",
							"nameLocation": "642:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2881,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "682:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2989,
									"src": "669:20:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2880,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "669:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2882,
										"nodeType": "StructuredDocumentation",
										"src": "698:75:13",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 2886,
									"name": "Paused",
									"nameLocation": "785:6:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "800:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "792:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:17:13"
									},
									"src": "779:30:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2887,
										"nodeType": "StructuredDocumentation",
										"src": "817:72:13",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 2891,
									"name": "Unpaused",
									"nameLocation": "901:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "918:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "910:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:17:13"
									},
									"src": "895:32:13"
								},
								{
									"documentation": {
										"id": 2892,
										"nodeType": "StructuredDocumentation",
										"src": "935:78:13",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 2894,
									"name": "EnforcedPause",
									"nameLocation": "1025:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:2:13"
									},
									"src": "1019:22:13"
								},
								{
									"documentation": {
										"id": 2895,
										"nodeType": "StructuredDocumentation",
										"src": "1049:82:13",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 2897,
									"name": "ExpectedPause",
									"nameLocation": "1143:13:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:13"
									},
									"src": "1137:22:13"
								},
								{
									"body": {
										"id": 2905,
										"nodeType": "Block",
										"src": "1256:34:13",
										"statements": [
											{
												"expression": {
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2901,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2881,
														"src": "1267:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1277:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1267:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2904,
												"nodeType": "ExpressionStatement",
												"src": "1267:15:13"
											}
										]
									},
									"documentation": {
										"id": 2898,
										"nodeType": "StructuredDocumentation",
										"src": "1167:69:13",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2906,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1253:2:13"
									},
									"returnParameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:0:13"
									},
									"scope": 2989,
									"src": "1242:48:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "1510:50:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2909,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2943,
														"src": "1521:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1521:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "1521:19:13"
											},
											{
												"id": 2912,
												"nodeType": "PlaceholderStatement",
												"src": "1551:1:13"
											}
										]
									},
									"documentation": {
										"id": 2907,
										"nodeType": "StructuredDocumentation",
										"src": "1298:181:13",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2914,
									"name": "whenNotPaused",
									"nameLocation": "1494:13:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:13"
									},
									"src": "1485:75:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2921,
										"nodeType": "Block",
										"src": "1769:47:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2917,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2956,
														"src": "1780:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1780:16:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2919,
												"nodeType": "ExpressionStatement",
												"src": "1780:16:13"
											},
											{
												"id": 2920,
												"nodeType": "PlaceholderStatement",
												"src": "1807:1:13"
											}
										]
									},
									"documentation": {
										"id": 2915,
										"nodeType": "StructuredDocumentation",
										"src": "1568:173:13",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2922,
									"name": "whenPaused",
									"nameLocation": "1756:10:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1766:2:13"
									},
									"src": "1747:69:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2930,
										"nodeType": "Block",
										"src": "1969:33:13",
										"statements": [
											{
												"expression": {
													"id": 2928,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2881,
													"src": "1987:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2927,
												"id": 2929,
												"nodeType": "Return",
												"src": "1980:14:13"
											}
										]
									},
									"documentation": {
										"id": 2923,
										"nodeType": "StructuredDocumentation",
										"src": "1824:86:13",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1925:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:2:13"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "1963:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1963:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:6:13"
									},
									"scope": 2989,
									"src": "1916:86:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2942,
										"nodeType": "Block",
										"src": "2126:81:13",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2935,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2931,
														"src": "2141:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2141:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2941,
												"nodeType": "IfStatement",
												"src": "2137:63:13",
												"trueBody": {
													"id": 2940,
													"nodeType": "Block",
													"src": "2151:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2937,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2894,
																	"src": "2173:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2173:15:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2939,
															"nodeType": "RevertStatement",
															"src": "2166:22:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2932,
										"nodeType": "StructuredDocumentation",
										"src": "2010:59:13",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 2943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2084:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:13"
									},
									"returnParameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:13"
									},
									"scope": 2989,
									"src": "2075:132:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2955,
										"nodeType": "Block",
										"src": "2332:82:13",
										"statements": [
											{
												"condition": {
													"id": 2949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2347:9:13",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2947,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2931,
															"src": "2348:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 2948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2348:8:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2954,
												"nodeType": "IfStatement",
												"src": "2343:64:13",
												"trueBody": {
													"id": 2953,
													"nodeType": "Block",
													"src": "2358:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2950,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2897,
																	"src": "2380:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2380:15:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2952,
															"nodeType": "RevertStatement",
															"src": "2373:22:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2944,
										"nodeType": "StructuredDocumentation",
										"src": "2215:63:13",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 2956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2293:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2307:2:13"
									},
									"returnParameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2332:0:13"
									},
									"scope": 2989,
									"src": "2284:130:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2971,
										"nodeType": "Block",
										"src": "2607:69:13",
										"statements": [
											{
												"expression": {
													"id": 2964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2962,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2881,
														"src": "2618:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2628:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2618:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2965,
												"nodeType": "ExpressionStatement",
												"src": "2618:14:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2967,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "2655:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2655:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2966,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2886,
														"src": "2648:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2648:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2970,
												"nodeType": "EmitStatement",
												"src": "2643:25:13"
											}
										]
									},
									"documentation": {
										"id": 2957,
										"nodeType": "StructuredDocumentation",
										"src": "2422:130:13",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2972,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2960,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2959,
												"name": "whenNotPaused",
												"nameLocations": [
													"2593:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2914,
												"src": "2593:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2593:13:13"
										}
									],
									"name": "_pause",
									"nameLocation": "2567:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2573:2:13"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:13"
									},
									"scope": 2989,
									"src": "2558:118:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2987,
										"nodeType": "Block",
										"src": "2865:72:13",
										"statements": [
											{
												"expression": {
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2978,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2881,
														"src": "2876:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2886:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2876:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2981,
												"nodeType": "ExpressionStatement",
												"src": "2876:15:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2983,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "2916:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2916:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2982,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2891,
														"src": "2907:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2907:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2986,
												"nodeType": "EmitStatement",
												"src": "2902:27:13"
											}
										]
									},
									"documentation": {
										"id": 2973,
										"nodeType": "StructuredDocumentation",
										"src": "2684:127:13",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2988,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2976,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2975,
												"name": "whenPaused",
												"nameLocations": [
													"2854:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2922,
												"src": "2854:10:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2854:10:13"
										}
									],
									"name": "_unpause",
									"nameLocation": "2826:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2834:2:13"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2865:0:13"
									},
									"scope": 2989,
									"src": "2817:120:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2990,
							"src": "624:2316:13",
							"usedErrors": [
								2894,
								2897
							],
							"usedEvents": [
								2886,
								2891
							]
						}
					],
					"src": "105:2835:13"
				},
				"id": 13
			},
			"contracts/MyNFT/PudgyPenguins.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/PudgyPenguins.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"CreditTiger": [
							3085
						],
						"Demo": [
							3098
						],
						"ERC165": [
							53
						],
						"ERC721": [
							986
						],
						"ERC721Burnable": [
							1015
						],
						"ERC721Enumerable": [
							1413
						],
						"ERC721Pausable": [
							1462
						],
						"IERC165": [
							1474
						],
						"IERC721": [
							1591
						],
						"IERC721Enumerable": [
							1623
						],
						"IERC721Metadata": [
							1651
						],
						"IERC721Receiver": [
							1669
						],
						"Ownable": [
							2872
						],
						"Pausable": [
							2989
						],
						"Strings": [
							3463
						]
					},
					"id": 3099,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2991,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "contracts/MyNFT/ERC721.sol",
							"file": "./ERC721.sol",
							"id": 2992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3099,
							"sourceUnit": 987,
							"src": "60:22:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/ERC721Enumerable.sol",
							"file": "./ERC721Enumerable.sol",
							"id": 2993,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3099,
							"sourceUnit": 1414,
							"src": "84:32:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/ERC721Burnable.sol",
							"file": "./ERC721Burnable.sol",
							"id": 2994,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3099,
							"sourceUnit": 1016,
							"src": "118:30:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/ERC721Pausable.sol",
							"file": "./ERC721Pausable.sol",
							"id": 2995,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3099,
							"sourceUnit": 1463,
							"src": "150:30:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2996,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3099,
							"sourceUnit": 2873,
							"src": "182:23:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2997,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"318:16:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1413,
										"src": "318:16:14"
									},
									"id": 2998,
									"nodeType": "InheritanceSpecifier",
									"src": "318:16:14"
								},
								{
									"baseName": {
										"id": 2999,
										"name": "Ownable",
										"nameLocations": [
											"335:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2872,
										"src": "335:7:14"
									},
									"id": 3000,
									"nodeType": "InheritanceSpecifier",
									"src": "335:7:14"
								},
								{
									"baseName": {
										"id": 3001,
										"name": "ERC721Burnable",
										"nameLocations": [
											"344:14:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1015,
										"src": "344:14:14"
									},
									"id": 3002,
									"nodeType": "InheritanceSpecifier",
									"src": "344:14:14"
								},
								{
									"baseName": {
										"id": 3003,
										"name": "ERC721Pausable",
										"nameLocations": [
											"360:14:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1462,
										"src": "360:14:14"
									},
									"id": 3004,
									"nodeType": "InheritanceSpecifier",
									"src": "360:14:14"
								}
							],
							"canonicalName": "CreditTiger",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3085,
							"linearizedBaseContracts": [
								3085,
								1462,
								2989,
								1015,
								2872,
								1413,
								1623,
								986,
								1651,
								1591,
								53,
								1474,
								29
							],
							"name": "CreditTiger",
							"nameLocation": "302:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3016,
										"nodeType": "Block",
										"src": "511:10:14",
										"statements": []
									},
									"id": 3017,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4372656469742d5469676572",
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "466:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3b44ee9b4fc444303005aed692c13257b3a6f7806440c4975a0651c9950d028a",
														"typeString": "literal_string \"Credit-Tiger\""
													},
													"value": "Credit-Tiger"
												},
												{
													"hexValue": "435454",
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "482:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8daa62a1f67827b1c213ba4f9786c9b68ea8b77ac6e41282d4a3afb2427ee2be",
														"typeString": "literal_string \"CTT\""
													},
													"value": "CTT"
												}
											],
											"id": 3011,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3008,
												"name": "ERC721",
												"nameLocations": [
													"459:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 986,
												"src": "459:6:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "459:29:14"
										},
										{
											"arguments": [
												{
													"id": 3013,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3006,
													"src": "497:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3014,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3012,
												"name": "Ownable",
												"nameLocations": [
													"489:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2872,
												"src": "489:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "489:21:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "445:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "437:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:14"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:0:14"
									},
									"scope": 3085,
									"src": "425:96:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										496,
										1412
									],
									"body": {
										"id": 3034,
										"nodeType": "Block",
										"src": "645:58:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3030,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3019,
															"src": "679:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3031,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3021,
															"src": "688:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 3027,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "656:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CreditTiger_$3085_$",
																"typeString": "type(contract super CreditTiger)"
															}
														},
														"id": 3029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "662:16:14",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1412,
														"src": "656:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "656:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3033,
												"nodeType": "ExpressionStatement",
												"src": "656:39:14"
											}
										]
									},
									"id": 3035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "544:16:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3025,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3023,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"620:16:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1413,
												"src": "620:16:14"
											},
											{
												"id": 3024,
												"name": "ERC721",
												"nameLocations": [
													"637:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 986,
												"src": "637:6:14"
											}
										],
										"src": "611:33:14"
									},
									"parameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3019,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "569:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "561:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "586:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "578:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3020,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "560:33:14"
									},
									"returnParameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:14"
									},
									"scope": 3085,
									"src": "535:168:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										598,
										1228,
										1447
									],
									"body": {
										"id": 3050,
										"nodeType": "Block",
										"src": "855:40:14",
										"statements": []
									},
									"id": 3051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "720:7:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3046,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3043,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"797:16:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1413,
												"src": "797:16:14"
											},
											{
												"id": 3044,
												"name": "ERC721",
												"nameLocations": [
													"814:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 986,
												"src": "814:6:14"
											},
											{
												"id": 3045,
												"name": "ERC721Pausable",
												"nameLocations": [
													"821:14:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1462,
												"src": "821:14:14"
											}
										],
										"src": "788:48:14"
									},
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "736:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "728:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "748:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "740:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "765:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "757:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:43:14"
									},
									"returnParameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "846:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:14"
									},
									"scope": 3085,
									"src": "711:184:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										508,
										1159,
										1461
									],
									"body": {
										"id": 3067,
										"nodeType": "Block",
										"src": "980:72:14",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "43726564697454696765722e7465737431",
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1000:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6",
																"typeString": "literal_string \"CreditTiger.test1\""
															},
															"value": "CreditTiger.test1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_ece1c69878ed7422097e95dd7a2f1617913c9581366af94fdeca0323d96dd1d6",
																"typeString": "literal_string \"CreditTiger.test1\""
															}
														],
														"id": 3058,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "996:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3061,
												"nodeType": "EmitStatement",
												"src": "991:29:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3062,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1031:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CreditTiger_$3085_$",
																"typeString": "type(contract super CreditTiger)"
															}
														},
														"id": 3064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1037:5:14",
														"memberName": "test1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1461,
														"src": "1031:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3066,
												"nodeType": "ExpressionStatement",
												"src": "1031:13:14"
											}
										]
									},
									"functionSelector": "6b59084d",
									"id": 3068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test1",
									"nameLocation": "914:5:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3056,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3053,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"939:16:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1413,
												"src": "939:16:14"
											},
											{
												"id": 3054,
												"name": "ERC721",
												"nameLocations": [
													"956:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 986,
												"src": "956:6:14"
											},
											{
												"id": 3055,
												"name": "ERC721Pausable",
												"nameLocations": [
													"963:14:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1462,
												"src": "963:14:14"
											}
										],
										"src": "930:48:14"
									},
									"parameters": {
										"id": 3052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "919:2:14"
									},
									"returnParameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "980:0:14"
									},
									"scope": 3085,
									"src": "905:147:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										150,
										1079
									],
									"body": {
										"id": 3083,
										"nodeType": "Block",
										"src": "1182:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3080,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3070,
															"src": "1224:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3078,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1200:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CreditTiger_$3085_$",
																"typeString": "type(contract super CreditTiger)"
															}
														},
														"id": 3079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1206:17:14",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1079,
														"src": "1200:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3077,
												"id": 3082,
												"nodeType": "Return",
												"src": "1193:43:14"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1075:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3074,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3072,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"1142:16:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1413,
												"src": "1142:16:14"
											},
											{
												"id": 3073,
												"name": "ERC721",
												"nameLocations": [
													"1159:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 986,
												"src": "1159:6:14"
											}
										],
										"src": "1133:33:14"
									},
									"parameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1100:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "1093:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3069,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1093:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:20:14"
									},
									"returnParameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "1176:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3075,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1176:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1175:6:14"
									},
									"scope": 3085,
									"src": "1066:178:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3099,
							"src": "293:960:14",
							"usedErrors": [
								1052,
								1055,
								2738,
								2743,
								2894,
								2897
							],
							"usedEvents": [
								500,
								1490,
								1499,
								1508,
								2749,
								2886,
								2891
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Demo",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3098,
							"linearizedBaseContracts": [
								3098
							],
							"name": "Demo",
							"nameLocation": "1267:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3096,
										"nodeType": "Block",
										"src": "1318:44:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 3091,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3087,
																	"src": "1341:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3090,
																"name": "CreditTiger",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3085,
																"src": "1329:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CreditTiger_$3085_$",
																	"typeString": "type(contract CreditTiger)"
																}
															},
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1329:17:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CreditTiger_$3085",
																"typeString": "contract CreditTiger"
															}
														},
														"id": 3093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1347:5:14",
														"memberName": "test1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3068,
														"src": "1329:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 3094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3095,
												"nodeType": "ExpressionStatement",
												"src": "1329:25:14"
											}
										]
									},
									"functionSelector": "af74e9f7",
									"id": 3097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DemoTest",
									"nameLocation": "1288:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1305:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3097,
												"src": "1297:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:14:14"
									},
									"returnParameters": {
										"id": 3089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1318:0:14"
									},
									"scope": 3098,
									"src": "1279:83:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3099,
							"src": "1257:108:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1332:14"
				},
				"id": 14
			},
			"contracts/MyNFT/SignedMath.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3208
						]
					},
					"id": 3209,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3100,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3101,
								"nodeType": "StructuredDocumentation",
								"src": "140:82:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3208,
							"linearizedBaseContracts": [
								3208
							],
							"name": "SignedMath",
							"nameLocation": "232:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3118,
										"nodeType": "Block",
										"src": "388:39:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3111,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3104,
															"src": "406:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3112,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3106,
															"src": "410:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "406:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3115,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3106,
														"src": "418:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "406:13:15",
													"trueExpression": {
														"id": 3114,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3104,
														"src": "414:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3110,
												"id": 3117,
												"nodeType": "Return",
												"src": "399:20:15"
											}
										]
									},
									"documentation": {
										"id": 3102,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "333:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "344:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "337:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3103,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "354:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "347:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3105,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:20:15"
									},
									"returnParameters": {
										"id": 3110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "380:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3108,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:15"
									},
									"scope": 3208,
									"src": "324:103:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3136,
										"nodeType": "Block",
										"src": "574:39:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3129,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3122,
															"src": "592:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3130,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3124,
															"src": "596:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "592:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3124,
														"src": "604:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "592:13:15",
													"trueExpression": {
														"id": 3132,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3122,
														"src": "600:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3128,
												"id": 3135,
												"nodeType": "Return",
												"src": "585:20:15"
											}
										]
									},
									"documentation": {
										"id": 3120,
										"nodeType": "StructuredDocumentation",
										"src": "435:69:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "519:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "530:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "523:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3121,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "523:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "540:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "533:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3123,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:20:15"
									},
									"returnParameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3137,
												"src": "566:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3126,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:8:15"
									},
									"scope": 3208,
									"src": "510:103:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3180,
										"nodeType": "Block",
										"src": "824:166:15",
										"statements": [
											{
												"assignments": [
													3148
												],
												"declarations": [
													{
														"constant": false,
														"id": 3148,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "895:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 3180,
														"src": "888:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3147,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "888:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3161,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3149,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3140,
																	"src": "900:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3150,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3142,
																	"src": "904:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "900:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3152,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "899:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3153,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3140,
																				"src": "911:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3154,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3142,
																				"src": "915:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "911:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3156,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "910:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "921:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "910:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3159,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "909:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "899:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3162,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3148,
														"src": "941:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3167,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3148,
																						"src": "961:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "953:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3165,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "953:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "953:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "967:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "953:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "946:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3163,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "946:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "946:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3172,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3140,
																				"src": "975:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3173,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3142,
																				"src": "979:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "975:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3175,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "974:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "946:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "945:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "941:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3146,
												"id": 3179,
												"nodeType": "Return",
												"src": "934:48:15"
											}
										]
									},
									"documentation": {
										"id": 3138,
										"nodeType": "StructuredDocumentation",
										"src": "621:129:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "765:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "780:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "773:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3139,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "790:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "783:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3141,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:20:15"
									},
									"returnParameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "816:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3144,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:8:15"
									},
									"scope": 3208,
									"src": "756:234:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3206,
										"nodeType": "Block",
										"src": "1139:775:15",
										"statements": [
											{
												"id": 3205,
												"nodeType": "UncheckedBlock",
												"src": "1150:757:15",
												"statements": [
													{
														"assignments": [
															3190
														],
														"declarations": [
															{
																"constant": false,
																"id": 3190,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "1725:4:15",
																"nodeType": "VariableDeclaration",
																"scope": 3205,
																"src": "1718:11:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 3189,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1718:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3194,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3191,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3184,
																"src": "1732:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "323535",
																"id": 3192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "1732:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1718:22:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 3199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3197,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3184,
																					"src": "1878:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 3198,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3190,
																					"src": "1882:4:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1878:8:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 3200,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1877:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 3201,
																		"name": "mask",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3190,
																		"src": "1890:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "1877:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1869:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3195,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1869:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1869:26:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3188,
														"id": 3204,
														"nodeType": "Return",
														"src": "1862:33:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3182,
										"nodeType": "StructuredDocumentation",
										"src": "998:80:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1093:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1104:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3207,
												"src": "1097:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3183,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:10:15"
									},
									"returnParameters": {
										"id": 3188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3207,
												"src": "1130:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:9:15"
									},
									"scope": 3208,
									"src": "1084:830:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3209,
							"src": "224:1693:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:1805:15"
				},
				"id": 15
			},
			"contracts/MyNFT/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2724
						],
						"SignedMath": [
							3208
						],
						"Strings": [
							3463
						]
					},
					"id": 3464,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:16"
						},
						{
							"absolutePath": "contracts/MyNFT/Math.sol",
							"file": "./Math.sol",
							"id": 3212,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3464,
							"sourceUnit": 2725,
							"src": "132:32:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3211,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2724,
										"src": "140:4:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyNFT/SignedMath.sol",
							"file": "./SignedMath.sol",
							"id": 3214,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3464,
							"sourceUnit": 3209,
							"src": "166:44:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3213,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3208,
										"src": "174:10:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3215,
								"nodeType": "StructuredDocumentation",
								"src": "214:36:16",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 3463,
							"linearizedBaseContracts": [
								3463
							],
							"name": "Strings",
							"nameLocation": "260:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3218,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "300:10:16",
									"nodeType": "VariableDeclaration",
									"scope": 3463,
									"src": "275:56:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 3216,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 3217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "313:18:16",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3221,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "361:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 3463,
									"src": "338:42:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3219,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "338:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 3220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "378:2:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 3222,
										"nodeType": "StructuredDocumentation",
										"src": "389:83:16",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 3228,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "484:28:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "521:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "513:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "536:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "528:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:31:16"
									},
									"src": "478:66:16"
								},
								{
									"body": {
										"id": 3275,
										"nodeType": "Block",
										"src": "721:647:16",
										"statements": [
											{
												"id": 3274,
												"nodeType": "UncheckedBlock",
												"src": "732:629:16",
												"statements": [
													{
														"assignments": [
															3237
														],
														"declarations": [
															{
																"constant": false,
																"id": 3237,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "765:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3274,
																"src": "757:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3236,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "757:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3244,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3240,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3231,
																		"src": "785:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3238,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2724,
																		"src": "774:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2724_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 3239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "779:5:16",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2544,
																	"src": "774:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "774:17:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 3242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "794:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "774:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "757:38:16"
													},
													{
														"assignments": [
															3246
														],
														"declarations": [
															{
																"constant": false,
																"id": 3246,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "824:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3274,
																"src": "810:20:16",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 3245,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "810:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3251,
														"initialValue": {
															"arguments": [
																{
																	"id": 3249,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3237,
																	"src": "844:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "833:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 3247,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "837:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 3250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "833:18:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "810:41:16"
													},
													{
														"assignments": [
															3253
														],
														"declarations": [
															{
																"constant": false,
																"id": 3253,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "874:3:16",
																"nodeType": "VariableDeclaration",
																"scope": 3274,
																"src": "866:11:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3252,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "866:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3254,
														"nodeType": "VariableDeclarationStatement",
														"src": "866:11:16"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "949:69:16",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "968:35:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "991:2:16",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:15:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "975:28:16"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "968:3:16"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 3246,
																"isOffset": false,
																"isSlot": false,
																"src": "979:6:16",
																"valueSize": 1
															},
															{
																"declaration": 3237,
																"isOffset": false,
																"isSlot": false,
																"src": "995:6:16",
																"valueSize": 1
															},
															{
																"declaration": 3253,
																"isOffset": false,
																"isSlot": false,
																"src": "968:3:16",
																"valueSize": 1
															}
														],
														"id": 3255,
														"nodeType": "InlineAssembly",
														"src": "940:78:16"
													},
													{
														"body": {
															"id": 3270,
															"nodeType": "Block",
															"src": "1045:277:16",
															"statements": [
																{
																	"expression": {
																		"id": 3258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1064:5:16",
																		"subExpression": {
																			"id": 3257,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3253,
																			"src": "1064:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3259,
																	"nodeType": "ExpressionStatement",
																	"src": "1064:5:16"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1149:88:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1180:3:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1194:5:16"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1201:2:16",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1190:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1190:14:16"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1206:10:16"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1185:4:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1185:32:16"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1172:7:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1172:46:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1172:46:16"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 3218,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1206:10:16",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3253,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:3:16",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3231,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1194:5:16",
																			"valueSize": 1
																		}
																	],
																	"id": 3260,
																	"nodeType": "InlineAssembly",
																	"src": "1140:97:16"
																},
																{
																	"expression": {
																		"id": 3263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3261,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3231,
																			"src": "1255:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 3262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1264:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3264,
																	"nodeType": "ExpressionStatement",
																	"src": "1255:11:16"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3265,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3231,
																			"src": "1289:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1298:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1289:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3269,
																	"nodeType": "IfStatement",
																	"src": "1285:21:16",
																	"trueBody": {
																		"id": 3268,
																		"nodeType": "Break",
																		"src": "1301:5:16"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 3256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1039:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 3271,
														"nodeType": "WhileStatement",
														"src": "1032:290:16"
													},
													{
														"expression": {
															"id": 3272,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3246,
															"src": "1343:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 3235,
														"id": 3273,
														"nodeType": "Return",
														"src": "1336:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3229,
										"nodeType": "StructuredDocumentation",
										"src": "552:92:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 3276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "659:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3231,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "676:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "668:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:15:16"
									},
									"returnParameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "706:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "706:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:15:16"
									},
									"scope": 3463,
									"src": "650:718:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3301,
										"nodeType": "Block",
										"src": "1549:94:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3279,
																	"src": "1581:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1589:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1581:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 3291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1599:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 3292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1581:20:16",
															"trueExpression": {
																"hexValue": "2d",
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1593:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3279,
																			"src": "1627:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 3294,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3208,
																			"src": "1612:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3208_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 3295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1623:3:16",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3207,
																		"src": "1612:14:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 3297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1612:21:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3293,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3276,
																"src": "1603:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 3298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1603:31:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 3285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1567:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 3284,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1567:6:16",
																"typeDescriptions": {}
															}
														},
														"id": 3286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1574:6:16",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1567:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 3299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1567:68:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3283,
												"id": 3300,
												"nodeType": "Return",
												"src": "1560:75:16"
											}
										]
									},
									"documentation": {
										"id": 3277,
										"nodeType": "StructuredDocumentation",
										"src": "1376:91:16",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 3302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1482:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1504:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3302,
												"src": "1497:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3278,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1497:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:14:16"
									},
									"returnParameters": {
										"id": 3283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3302,
												"src": "1534:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1534:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:15:16"
									},
									"scope": 3463,
									"src": "1473:170:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3321,
										"nodeType": "Block",
										"src": "1827:104:16",
										"statements": [
											{
												"id": 3320,
												"nodeType": "UncheckedBlock",
												"src": "1838:86:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 3311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3305,
																	"src": "1882:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 3314,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3305,
																				"src": "1901:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 3312,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2724,
																				"src": "1889:4:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2724_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 3313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1894:6:16",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2666,
																			"src": "1889:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1889:18:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 3316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1889:22:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3310,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3322,
																	3405,
																	3425
																],
																"referencedDeclaration": 3405,
																"src": "1870:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 3318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1870:42:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 3309,
														"id": 3319,
														"nodeType": "Return",
														"src": "1863:49:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3303,
										"nodeType": "StructuredDocumentation",
										"src": "1651:96:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 3322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1762:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1782:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3322,
												"src": "1774:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:15:16"
									},
									"returnParameters": {
										"id": 3309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3322,
												"src": "1812:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1812:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:15:16"
									},
									"scope": 3463,
									"src": "1753:178:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3404,
										"nodeType": "Block",
										"src": "2149:448:16",
										"statements": [
											{
												"assignments": [
													3333
												],
												"declarations": [
													{
														"constant": false,
														"id": 3333,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2168:10:16",
														"nodeType": "VariableDeclaration",
														"scope": 3404,
														"src": "2160:18:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3332,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2160:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3335,
												"initialValue": {
													"id": 3334,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3325,
													"src": "2181:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2160:26:16"
											},
											{
												"assignments": [
													3337
												],
												"declarations": [
													{
														"constant": false,
														"id": 3337,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2210:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3404,
														"src": "2197:19:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3336,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2197:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3346,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2229:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3341,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3327,
																	"src": "2233:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2229:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 3343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2242:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2229:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2219:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3338,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2223:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2197:47:16"
											},
											{
												"expression": {
													"id": 3351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3347,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3337,
															"src": "2255:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3349,
														"indexExpression": {
															"hexValue": "30",
															"id": 3348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2262:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2255:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2267:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2255:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3352,
												"nodeType": "ExpressionStatement",
												"src": "2255:15:16"
											},
											{
												"expression": {
													"id": 3357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3353,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3337,
															"src": "2281:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3355,
														"indexExpression": {
															"hexValue": "31",
															"id": 3354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2288:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2281:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 3356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2293:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2281:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3358,
												"nodeType": "ExpressionStatement",
												"src": "2281:15:16"
											},
											{
												"body": {
													"id": 3387,
													"nodeType": "Block",
													"src": "2352:98:16",
													"statements": [
														{
															"expression": {
																"id": 3381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3373,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3337,
																		"src": "2367:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3375,
																	"indexExpression": {
																		"id": 3374,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3360,
																		"src": "2374:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2367:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3376,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3218,
																		"src": "2379:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 3380,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3377,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3333,
																			"src": "2390:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 3378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2403:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2390:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2379:28:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2367:40:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3382,
															"nodeType": "ExpressionStatement",
															"src": "2367:40:16"
														},
														{
															"expression": {
																"id": 3385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3383,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3333,
																	"src": "2422:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 3384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2437:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2422:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3386,
															"nodeType": "ExpressionStatement",
															"src": "2422:16:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3367,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3360,
														"src": "2340:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 3368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2344:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2340:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3388,
												"initializationExpression": {
													"assignments": [
														3360
													],
													"declarations": [
														{
															"constant": false,
															"id": 3360,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2320:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 3388,
															"src": "2312:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3359,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2312:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3366,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 3361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2324:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3362,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3327,
																"src": "2328:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2324:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2337:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2324:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2312:26:16"
												},
												"loopExpression": {
													"expression": {
														"id": 3371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2347:3:16",
														"subExpression": {
															"id": 3370,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3360,
															"src": "2349:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3372,
													"nodeType": "ExpressionStatement",
													"src": "2347:3:16"
												},
												"nodeType": "ForStatement",
												"src": "2307:143:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3389,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3333,
														"src": "2464:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2464:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3398,
												"nodeType": "IfStatement",
												"src": "2460:98:16",
												"trueBody": {
													"id": 3397,
													"nodeType": "Block",
													"src": "2481:77:16",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3393,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3325,
																		"src": "2532:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3394,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3327,
																		"src": "2539:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3392,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3228,
																	"src": "2503:28:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 3395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2503:43:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3396,
															"nodeType": "RevertStatement",
															"src": "2496:50:16"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3401,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3337,
															"src": "2582:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2575:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3399,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2575:6:16",
															"typeDescriptions": {}
														}
													},
													"id": 3402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2575:14:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3331,
												"id": 3403,
												"nodeType": "Return",
												"src": "2568:21:16"
											}
										]
									},
									"documentation": {
										"id": 3323,
										"nodeType": "StructuredDocumentation",
										"src": "1939:114:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 3405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2068:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3325,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2088:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3405,
												"src": "2080:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3327,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2103:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3405,
												"src": "2095:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:31:16"
									},
									"returnParameters": {
										"id": 3331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3405,
												"src": "2134:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2134:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:15:16"
									},
									"scope": 3463,
									"src": "2059:538:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3424,
										"nodeType": "Block",
										"src": "2835:77:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3418,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3408,
																			"src": "2881:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2873:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 3416,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2873:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2873:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 3415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2865:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3414,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2865:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2865:22:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3421,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "2889:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 3413,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3322,
															3405,
															3425
														],
														"referencedDeclaration": 3405,
														"src": "2853:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 3422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2853:51:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3412,
												"id": 3423,
												"nodeType": "Return",
												"src": "2846:58:16"
											}
										]
									},
									"documentation": {
										"id": 3406,
										"nodeType": "StructuredDocumentation",
										"src": "2605:151:16",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 3425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2771:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3408,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2791:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3425,
												"src": "2783:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:14:16"
									},
									"returnParameters": {
										"id": 3412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3425,
												"src": "2820:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2820:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:15:16"
									},
									"scope": 3463,
									"src": "2762:150:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3461,
										"nodeType": "Block",
										"src": "3072:106:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 3437,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3428,
																		"src": "3096:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3090:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3435,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3090:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 3438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3090:8:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 3439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3099:6:16",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3090:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 3442,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3430,
																		"src": "3115:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3109:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3440,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3109:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 3443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3109:8:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 3444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3118:6:16",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3109:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3090:34:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 3458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3449,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3428,
																			"src": "3144:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 3448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3138:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 3447,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3138:5:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3138:8:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 3446,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3128:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 3451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3128:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3455,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3430,
																			"src": "3167:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 3454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3161:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 3453,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3161:5:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3161:8:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 3452,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3151:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 3457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3151:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3128:42:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3090:80:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3434,
												"id": 3460,
												"nodeType": "Return",
												"src": "3083:87:16"
											}
										]
									},
									"documentation": {
										"id": 3426,
										"nodeType": "StructuredDocumentation",
										"src": "2920:68:16",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 3462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3003:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3023:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3462,
												"src": "3009:15:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3009:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3040:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3462,
												"src": "3026:15:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3026:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3008:34:16"
									},
									"returnParameters": {
										"id": 3434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3462,
												"src": "3066:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3066:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3065:6:16"
									},
									"scope": 3463,
									"src": "2994:184:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3464,
							"src": "252:2929:16",
							"usedErrors": [
								3228
							],
							"usedEvents": []
						}
					],
					"src": "104:3077:16"
				},
				"id": 16
			}
		}
	}
}